// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_Lambda
#include <Lambda.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecodeState
#include <kha/audio2/ogg/vorbis/VorbisDecodeState.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecoder
#include <kha/audio2/ogg/vorbis/VorbisDecoder.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisTools
#include <kha/audio2/ogg/vorbis/VorbisTools.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis__VorbisDecodeState_FindPageResult
#include <kha/audio2/ogg/vorbis/_VorbisDecodeState/FindPageResult.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Codebook
#include <kha/audio2/ogg/vorbis/data/Codebook.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor
#include <kha/audio2/ogg/vorbis/data/Floor.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor1
#include <kha/audio2/ogg/vorbis/data/Floor1.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Header
#include <kha/audio2/ogg/vorbis/data/Header.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mapping
#include <kha/audio2/ogg/vorbis/data/Mapping.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_MappingChannel
#include <kha/audio2/ogg/vorbis/data/MappingChannel.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mode
#include <kha/audio2/ogg/vorbis/data/Mode.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ProbedPage
#include <kha/audio2/ogg/vorbis/data/ProbedPage.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError
#include <kha/audio2/ogg/vorbis/data/ReaderError.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderErrorType
#include <kha/audio2/ogg/vorbis/data/ReaderErrorType.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Residue
#include <kha/audio2/ogg/vorbis/data/Residue.h>
#endif

static const Int _hx_array_data_38[] = {
	(Int)0,(Int)1,(Int)2,(Int)2,(Int)3,(Int)3,(Int)3,(Int)3,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,
};
static const Int _hx_array_data_45[] = {
	(Int)0,(Int)1,(Int)2,(Int)2,(Int)3,(Int)3,(Int)3,(Int)3,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,
};
static const Int _hx_array_data_64[] = {
	(Int)256,(Int)128,(Int)86,(Int)64,
};
static const Int _hx_array_data_65[] = {
	(Int)0,(Int)1,(Int)2,(Int)2,(Int)3,(Int)3,(Int)3,(Int)3,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,
};
static const Int _hx_array_data_66[] = {
	(Int)0,(Int)1,(Int)2,(Int)2,(Int)3,(Int)3,(Int)3,(Int)3,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,(Int)4,
};
namespace kha{
namespace audio2{
namespace ogg{
namespace vorbis{

void VorbisDecoder_obj::__construct( ::kha::audio2::ogg::vorbis::data::Header header, ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","new",0xc43447af,"kha.audio2.ogg.vorbis.VorbisDecoder.new","kha/audio2/ogg/vorbis/VorbisDecoder.hx",44,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(header,"header")
            	HX_STACK_ARG(decodeState,"decodeState")
HXLINE(  45)		this->header = header;
HXLINE(  46)		this->decodeState = decodeState;
HXLINE(  47)		this->totalSample = null();
HXLINE(  48)		this->currentSample = (int)0;
HXLINE(  51)		this->previousLength = (int)0;
HXLINE(  53)		Int length = header->channel;
HXDLIN(  53)		HX_VARI_NAME( ::Array< ::Dynamic>,this1,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  53)		_hx_array_set_size_exact(this1,length);
HXDLIN(  53)		this->channelBuffers = this1;
HXLINE(  54)		Int length1 = header->channel;
HXDLIN(  54)		HX_VARI_NAME( ::Array< ::Dynamic>,this2,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  54)		_hx_array_set_size_exact(this2,length1);
HXDLIN(  54)		this->previousWindow = this2;
HXLINE(  55)		Int length2 = header->channel;
HXDLIN(  55)		HX_VARI_NAME( ::Array< ::Dynamic>,this3,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  55)		_hx_array_set_size_exact(this3,length2);
HXDLIN(  55)		this->finalY = this3;
HXLINE(  57)		{
HXLINE(  57)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(  57)			HX_VARI( Int,_g) = header->channel;
HXDLIN(  57)			while((_g1 < _g)){
HXLINE(  57)				HX_VARI( Int,i) = _g1++;
HXLINE(  58)				{
HXLINE(  58)					Int len = header->blocksize1;
HXDLIN(  58)					HX_VARI_NAME( ::Array< Float >,this4,"this") = ::Array_obj< Float >::__new();
HXDLIN(  58)					_hx_array_set_size_exact(this4,len);
HXDLIN(  58)					this->channelBuffers->__unsafe_set(i,this4);
            				}
HXLINE(  59)				{
HXLINE(  59)					Float _hx_tmp = ((Float)header->blocksize1 / (Float)(int)2);
HXDLIN(  59)					Int len1 = ::Std_obj::_hx_int(_hx_tmp);
HXDLIN(  59)					HX_VARI_NAME( ::Array< Float >,this5,"this") = ::Array_obj< Float >::__new();
HXDLIN(  59)					_hx_array_set_size_exact(this5,len1);
HXDLIN(  59)					this->previousWindow->__unsafe_set(i,this5);
            				}
HXLINE(  60)				{
HXLINE(  60)					::Array< Int > val = ::Array_obj< Int >::__new();
HXDLIN(  60)					this->finalY->__unsafe_set(i,val);
            				}
            			}
            		}
HXLINE(  63)		HX_VARI_NAME( ::Array< ::Dynamic>,this6,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  63)		_hx_array_set_size_exact(this6,(int)2);
HXDLIN(  63)		this->a = this6;
HXLINE(  64)		HX_VARI_NAME( ::Array< ::Dynamic>,this7,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  64)		_hx_array_set_size_exact(this7,(int)2);
HXDLIN(  64)		this->b = this7;
HXLINE(  65)		HX_VARI_NAME( ::Array< ::Dynamic>,this8,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  65)		_hx_array_set_size_exact(this8,(int)2);
HXDLIN(  65)		this->c = this8;
HXLINE(  66)		HX_VARI_NAME( ::Array< ::Dynamic>,this9,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  66)		_hx_array_set_size_exact(this9,(int)2);
HXDLIN(  66)		this->window = this9;
HXLINE(  67)		HX_VARI_NAME( ::Array< ::Dynamic>,this10,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN(  67)		_hx_array_set_size_exact(this10,(int)2);
HXDLIN(  67)		this->bitReverseData = this10;
HXLINE(  68)		this->initBlocksize((int)0,header->blocksize0);
HXLINE(  69)		this->initBlocksize((int)1,header->blocksize1);
            	}

Dynamic VorbisDecoder_obj::__CreateEmpty() { return new VorbisDecoder_obj; }

hx::ObjectPtr< VorbisDecoder_obj > VorbisDecoder_obj::__new( ::kha::audio2::ogg::vorbis::data::Header header, ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState)
{
	hx::ObjectPtr< VorbisDecoder_obj > _hx_result = new VorbisDecoder_obj();
	_hx_result->__construct(header,decodeState);
	return _hx_result;
}

Dynamic VorbisDecoder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VorbisDecoder_obj > _hx_result = new VorbisDecoder_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

Int VorbisDecoder_obj::read(::Array< Float > output,Int samples,Int channels,Int sampleRate,Bool useFloat){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","read",0xec2f3927,"kha.audio2.ogg.vorbis.VorbisDecoder.read","kha/audio2/ogg/vorbis/VorbisDecoder.hx",82,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(output,"output")
            	HX_STACK_ARG(samples,"samples")
            	HX_STACK_ARG(channels,"channels")
            	HX_STACK_ARG(sampleRate,"sampleRate")
            	HX_STACK_ARG(useFloat,"useFloat")
HXLINE(  83)		Int b = this->header->sampleRate;
HXDLIN(  83)		Float _hx_tmp;
HXDLIN(  83)		if ((sampleRate < (int)0)) {
HXLINE(  83)			_hx_tmp = (((Float)4294967296.0) + sampleRate);
            		}
            		else {
HXLINE(  83)			_hx_tmp = (sampleRate + ((Float)0.0));
            		}
HXDLIN(  83)		HX_VARI_NAME( Int,_hx_int,"int") = b;
HXDLIN(  83)		Float _hx_tmp1;
HXDLIN(  83)		if ((_hx_int < (int)0)) {
HXLINE(  83)			_hx_tmp1 = (((Float)4294967296.0) + _hx_int);
            		}
            		else {
HXLINE(  83)			_hx_tmp1 = (_hx_int + ((Float)0.0));
            		}
HXDLIN(  83)		Int a = ::Std_obj::_hx_int(hx::Mod(_hx_tmp,_hx_tmp1));
HXDLIN(  83)		if ((a != (int)0)) {
HXLINE(  84)			Int this1 = this->header->sampleRate;
HXDLIN(  84)			Float _hx_tmp2;
HXDLIN(  84)			if ((this1 < (int)0)) {
HXLINE(  84)				_hx_tmp2 = (((Float)4294967296.0) + this1);
            			}
            			else {
HXLINE(  84)				_hx_tmp2 = (this1 + ((Float)0.0));
            			}
HXDLIN(  84)			::String _hx_tmp3 = ::Std_obj::string(_hx_tmp2);
HXDLIN(  84)			HX_STACK_DO_THROW((((HX_("Unsupported sampleRate : can't convert ",a1,80,14,2c) + _hx_tmp3) + HX_(" to ",25,3a,7f,15)) + sampleRate));
            		}
HXLINE(  86)		if ((hx::Mod(channels,this->header->channel) != (int)0)) {
HXLINE(  87)			HX_STACK_DO_THROW((((HX_("Unsupported channels : can't convert ",7b,f0,64,21) + this->header->channel) + HX_(" to ",25,3a,7f,15)) + channels));
            		}
HXLINE(  90)		Int b1 = this->header->sampleRate;
HXDLIN(  90)		Float _hx_tmp4;
HXDLIN(  90)		if ((sampleRate < (int)0)) {
HXLINE(  90)			_hx_tmp4 = (((Float)4294967296.0) + sampleRate);
            		}
            		else {
HXLINE(  90)			_hx_tmp4 = (sampleRate + ((Float)0.0));
            		}
HXDLIN(  90)		HX_VARI_NAME( Int,int1,"int") = b1;
HXDLIN(  90)		Float _hx_tmp5;
HXDLIN(  90)		if ((int1 < (int)0)) {
HXLINE(  90)			_hx_tmp5 = (((Float)4294967296.0) + int1);
            		}
            		else {
HXLINE(  90)			_hx_tmp5 = (int1 + ((Float)0.0));
            		}
HXDLIN(  90)		HX_VARI( Int,sampleRepeat) = ::Std_obj::_hx_int(((Float)_hx_tmp4 / (Float)_hx_tmp5));
HXLINE(  91)		Float _hx_tmp6 = ((Float)channels / (Float)this->header->channel);
HXDLIN(  91)		HX_VARI( Int,channelRepeat) = ::Std_obj::_hx_int(_hx_tmp6);
HXLINE(  93)		HX_VARI( Int,n) = (int)0;
HXLINE(  94)		HX_VARI( Int,len) = ::Math_obj::floor(((Float)samples / (Float)sampleRepeat));
HXLINE(  95)		Bool _hx_tmp7;
HXDLIN(  95)		Bool _hx_tmp8 = hx::IsNotNull( this->totalSample );
HXDLIN(  95)		if (_hx_tmp8) {
HXLINE(  95)			_hx_tmp7 = (len > (this->totalSample - this->currentSample));
            		}
            		else {
HXLINE(  95)			_hx_tmp7 = false;
            		}
HXDLIN(  95)		if (_hx_tmp7) {
HXLINE(  96)			len = (this->totalSample - this->currentSample);
            		}
HXLINE(  99)		HX_VARI( Int,index) = (int)0;
HXLINE( 100)		while((n < len)){
HXLINE( 101)			HX_VARI( Int,k) = (this->channelBufferEnd - this->channelBufferStart);
HXLINE( 102)			Bool _hx_tmp9 = (k >= (len - n));
HXDLIN( 102)			if (_hx_tmp9) {
HXLINE( 102)				k = (len - n);
            			}
HXLINE( 103)			{
HXLINE( 103)				HX_VARI( Int,_g1) = this->channelBufferStart;
HXDLIN( 103)				HX_VARI( Int,_g) = (this->channelBufferStart + k);
HXDLIN( 103)				while((_g1 < _g)){
HXLINE( 103)					HX_VARI( Int,j) = _g1++;
HXLINE( 104)					{
HXLINE( 104)						HX_VARI( Int,_g3) = (int)0;
HXDLIN( 104)						while((_g3 < sampleRepeat)){
HXLINE( 104)							++_g3;
HXLINE( 105)							{
HXLINE( 105)								HX_VARI( Int,_g5) = (int)0;
HXDLIN( 105)								HX_VARI( Int,_g4) = this->header->channel;
HXDLIN( 105)								while((_g5 < _g4)){
HXLINE( 105)									HX_VARI( Int,i) = _g5++;
HXLINE( 106)									{
HXLINE( 106)										HX_VARI( Int,_g7) = (int)0;
HXDLIN( 106)										while((_g7 < channelRepeat)){
HXLINE( 106)											++_g7;
HXLINE( 107)											::Array< Float > this2 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) );
HXDLIN( 107)											HX_VARI( Float,value) = ( (Float)(_hx_array_unsafe_get(this2,j)) );
HXLINE( 108)											Bool _hx_tmp10 = (value > (int)1);
HXDLIN( 108)											if (_hx_tmp10) {
HXLINE( 109)												value = (int)1;
            											}
            											else {
HXLINE( 110)												Bool _hx_tmp11 = (value < (int)-1);
HXDLIN( 110)												if (_hx_tmp11) {
HXLINE( 111)													value = (int)-1;
            												}
            											}
HXLINE( 114)											if (useFloat) {
HXLINE( 116)												output->__unsafe_set(index,value);
HXLINE( 117)												++index;
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE( 125)			hx::AddEq(n,k);
HXLINE( 126)			hx::AddEq(this->channelBufferStart,k);
HXLINE( 127)			Bool _hx_tmp12;
HXDLIN( 127)			if ((n != len)) {
HXLINE( 127)				Int _hx_tmp13 = this->getFrameFloat();
HXDLIN( 127)				_hx_tmp12 = (_hx_tmp13 == (int)0);
            			}
            			else {
HXLINE( 127)				_hx_tmp12 = true;
            			}
HXDLIN( 127)			if (_hx_tmp12) {
HXLINE( 128)				goto _hx_goto_1;
            			}
            		}
            		_hx_goto_1:;
HXLINE( 132)		{
HXLINE( 132)			HX_VARI_NAME( Int,_g11,"_g1") = n;
HXDLIN( 132)			HX_VARI_NAME( Int,_g2,"_g") = len;
HXDLIN( 132)			while((_g11 < _g2)){
HXLINE( 132)				++_g11;
HXLINE( 133)				{
HXLINE( 133)					HX_VARI_NAME( Int,_g31,"_g3") = (int)0;
HXDLIN( 133)					while((_g31 < sampleRepeat)){
HXLINE( 133)						++_g31;
HXLINE( 134)						{
HXLINE( 134)							HX_VARI_NAME( Int,_g51,"_g5") = (int)0;
HXDLIN( 134)							HX_VARI_NAME( Int,_g41,"_g4") = this->header->channel;
HXDLIN( 134)							while((_g51 < _g41)){
HXLINE( 134)								++_g51;
HXLINE( 135)								{
HXLINE( 135)									HX_VARI_NAME( Int,_g71,"_g7") = (int)0;
HXDLIN( 135)									while((_g71 < channelRepeat)){
HXLINE( 135)										++_g71;
HXLINE( 136)										if (useFloat) {
HXLINE( 138)											output->__unsafe_set(index,(int)0);
HXLINE( 139)											++index;
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 148)		hx::AddEq(this->currentSample,len);
HXLINE( 149)		return (len * sampleRepeat);
            	}


HX_DEFINE_DYNAMIC_FUNC5(VorbisDecoder_obj,read,return )

Int VorbisDecoder_obj::skipSamples(Int len){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","skipSamples",0x136a1299,"kha.audio2.ogg.vorbis.VorbisDecoder.skipSamples","kha/audio2/ogg/vorbis/VorbisDecoder.hx",152,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(len,"len")
HXLINE( 153)		HX_VARI( Int,n) = (int)0;
HXLINE( 154)		Bool _hx_tmp;
HXDLIN( 154)		Bool _hx_tmp1 = hx::IsNotNull( this->totalSample );
HXDLIN( 154)		if (_hx_tmp1) {
HXLINE( 154)			_hx_tmp = (len > (this->totalSample - this->currentSample));
            		}
            		else {
HXLINE( 154)			_hx_tmp = false;
            		}
HXDLIN( 154)		if (_hx_tmp) {
HXLINE( 155)			len = (this->totalSample - this->currentSample);
            		}
HXLINE( 157)		while((n < len)){
HXLINE( 158)			HX_VARI( Int,k) = (this->channelBufferEnd - this->channelBufferStart);
HXLINE( 159)			Bool _hx_tmp2 = (k >= (len - n));
HXDLIN( 159)			if (_hx_tmp2) {
HXLINE( 159)				k = (len - n);
            			}
HXLINE( 160)			hx::AddEq(n,k);
HXLINE( 161)			hx::AddEq(this->channelBufferStart,k);
HXLINE( 162)			Bool _hx_tmp3;
HXDLIN( 162)			if ((n != len)) {
HXLINE( 162)				Int _hx_tmp4 = this->getFrameFloat();
HXDLIN( 162)				_hx_tmp3 = (_hx_tmp4 == (int)0);
            			}
            			else {
HXLINE( 162)				_hx_tmp3 = true;
            			}
HXDLIN( 162)			if (_hx_tmp3) {
HXLINE( 163)				goto _hx_goto_10;
            			}
            		}
            		_hx_goto_10:;
HXLINE( 167)		hx::AddEq(this->currentSample,len);
HXLINE( 168)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,skipSamples,return )

void VorbisDecoder_obj::setupSampleNumber( ::Dynamic seekFunc,Int inputLength){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","setupSampleNumber",0xd3bc1c3f,"kha.audio2.ogg.vorbis.VorbisDecoder.setupSampleNumber","kha/audio2/ogg/vorbis/VorbisDecoder.hx",172,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(inputLength,"inputLength")
HXLINE( 172)		Bool _hx_tmp = hx::IsNull( this->totalSample );
HXDLIN( 172)		if (_hx_tmp) {
HXLINE( 173)			this->totalSample = this->decodeState->getSampleNumber(seekFunc,inputLength);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,setupSampleNumber,(void))

void VorbisDecoder_obj::seek( ::Dynamic seekFunc,Int inputLength,Int sampleNumber){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","seek",0xecd87349,"kha.audio2.ogg.vorbis.VorbisDecoder.seek","kha/audio2/ogg/vorbis/VorbisDecoder.hx",178,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(inputLength,"inputLength")
            	HX_STACK_ARG(sampleNumber,"sampleNumber")
HXLINE( 179)		if ((this->currentSample == sampleNumber)) {
HXLINE( 180)			return;
            		}
HXLINE( 184)		Bool _hx_tmp = hx::IsNull( this->totalSample );
HXDLIN( 184)		if (_hx_tmp) {
HXLINE( 185)			this->setupSampleNumber(seekFunc,inputLength);
HXLINE( 186)			if (hx::IsEq( this->totalSample,(int)0 )) {
HXLINE( 187)				HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::CANT_FIND_LAST_PAGE_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),187,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            			}
            		}
HXLINE( 191)		Bool _hx_tmp1 = (sampleNumber < (int)0);
HXDLIN( 191)		if (_hx_tmp1) {
HXLINE( 192)			sampleNumber = (int)0;
            		}
HXLINE( 195)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::ProbedPage,p0) = this->decodeState->pFirst;
HXLINE( 196)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::ProbedPage,p1) = this->decodeState->pLast;
HXLINE( 198)		Bool _hx_tmp2 = hx::IsGreaterEq( sampleNumber,p1->lastDecodedSample );
HXDLIN( 198)		if (_hx_tmp2) {
HXLINE( 199)			sampleNumber = (p1->lastDecodedSample - (int)1);
            		}
HXLINE( 202)		Bool _hx_tmp3 = hx::IsLess( sampleNumber,p0->lastDecodedSample );
HXDLIN( 202)		if (_hx_tmp3) {
HXLINE( 203)			this->seekFrameFromPage(seekFunc,p0->pageStart,(int)0,sampleNumber);
            		}
            		else {
HXLINE( 205)			HX_VARI( Int,attempts) = (int)0;
HXLINE( 207)			while((p0->pageEnd < p1->pageStart)){
HXLINE( 212)				HX_VARI( Int,startOffset) = p0->pageEnd;
HXLINE( 213)				HX_VARI( Int,endOffset) = p1->afterPreviousPageStart;
HXLINE( 214)				HX_VARI(  ::Dynamic,startSample) = p0->lastDecodedSample;
HXLINE( 215)				HX_VARI(  ::Dynamic,endSample) = p1->lastDecodedSample;
HXLINE( 218)				Bool _hx_tmp4;
HXDLIN( 218)				Bool _hx_tmp5 = hx::IsNotNull( startSample );
HXDLIN( 218)				if (_hx_tmp5) {
HXLINE( 218)					_hx_tmp4 = hx::IsNull( endSample );
            				}
            				else {
HXLINE( 218)					_hx_tmp4 = true;
            				}
HXDLIN( 218)				if (_hx_tmp4) {
HXLINE( 219)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),219,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 225)				HX_VARI( Int,a) = (startOffset + (int)4000);
HXDLIN( 225)				HX_VARI( Bool,aNeg) = (endOffset < (int)0);
HXDLIN( 225)				HX_VARI( Bool,bNeg) = (a < (int)0);
HXDLIN( 225)				Bool _hx_tmp6;
HXDLIN( 225)				if ((aNeg != bNeg)) {
HXLINE( 225)					_hx_tmp6 = aNeg;
            				}
            				else {
HXLINE( 225)					_hx_tmp6 = (endOffset > a);
            				}
HXDLIN( 225)				if (_hx_tmp6) {
HXLINE( 226)					endOffset = (endOffset - (int)4000);
            				}
HXLINE( 230)				HX_VARI_NAME( Int,_hx_int,"int") = (endOffset - startOffset);
HXDLIN( 230)				Float _hx_tmp7;
HXDLIN( 230)				if ((_hx_int < (int)0)) {
HXLINE( 230)					_hx_tmp7 = (((Float)4294967296.0) + _hx_int);
            				}
            				else {
HXLINE( 230)					_hx_tmp7 = (_hx_int + ((Float)0.0));
            				}
HXDLIN( 230)				HX_VARI_NAME( Int,int1,"int") = (endSample - startSample);
HXDLIN( 230)				Float _hx_tmp8;
HXDLIN( 230)				if ((int1 < (int)0)) {
HXLINE( 230)					_hx_tmp8 = (((Float)4294967296.0) + int1);
            				}
            				else {
HXLINE( 230)					_hx_tmp8 = (int1 + ((Float)0.0));
            				}
HXDLIN( 230)				Int b = ::Math_obj::floor((((Float)_hx_tmp7 / (Float)_hx_tmp8) * (sampleNumber - startSample)));
HXDLIN( 230)				HX_VARI( Int,probe) = (startOffset + b);
HXLINE( 234)				if ((attempts >= (int)4)) {
HXLINE( 235)					HX_VARI( Int,probe2) = (startOffset + hx::UShr((endOffset - startOffset),(int)1));
HXLINE( 236)					if ((attempts >= (int)8)) {
HXLINE( 237)						probe = probe2;
            					}
            					else {
HXLINE( 238)						HX_VARI_NAME( Bool,aNeg1,"aNeg") = (probe2 < (int)0);
HXDLIN( 238)						HX_VARI_NAME( Bool,bNeg1,"bNeg") = (probe < (int)0);
HXDLIN( 238)						Bool _hx_tmp9;
HXDLIN( 238)						if ((aNeg1 != bNeg1)) {
HXLINE( 238)							_hx_tmp9 = aNeg1;
            						}
            						else {
HXLINE( 238)							_hx_tmp9 = (probe2 > probe);
            						}
HXDLIN( 238)						if (_hx_tmp9) {
HXLINE( 239)							probe = (probe + hx::UShr((probe2 - probe),(int)1));
            						}
            						else {
HXLINE( 241)							probe = (probe2 + hx::UShr((probe - probe2),(int)1));
            						}
            					}
            				}
HXLINE( 244)				++attempts;
HXLINE( 245)				Int _hx_tmp10 = (this->decodeState->inputPosition = probe);
HXDLIN( 245)				seekFunc(_hx_tmp10);
HXLINE( 247)				{
HXLINE( 247)					HX_VARI( ::hx::EnumBase,_g) = this->decodeState->findPage(seekFunc,inputLength);
HXDLIN( 247)					Int _hx_tmp11 = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN( 247)					switch((int)(_hx_tmp11)){
            						case (int)0: {
            						}
            						break;
            						case (int)1: {
HXLINE( 249)							HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),249,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            						}
            						break;
            					}
            				}
HXLINE( 253)				HX_VARI(  ::kha::audio2::ogg::vorbis::data::ProbedPage,q) = this->decodeState->analyzePage(seekFunc,this->header);
HXLINE( 254)				Bool _hx_tmp12 = hx::IsNull( q );
HXDLIN( 254)				if (_hx_tmp12) {
HXLINE( 255)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),255,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 257)				q->afterPreviousPageStart = probe;
HXLINE( 260)				Bool _hx_tmp13 = (q->pageStart == p1->pageStart);
HXDLIN( 260)				if (_hx_tmp13) {
HXLINE( 261)					p1 = q;
HXLINE( 262)					continue;
            				}
HXLINE( 265)				if (hx::IsLess( sampleNumber,q->lastDecodedSample )) {
HXLINE( 266)					p1 = q;
            				}
            				else {
HXLINE( 268)					p0 = q;
            				}
            			}
HXLINE( 272)			Bool _hx_tmp14;
HXDLIN( 272)			if (hx::IsLessEq( p0->lastDecodedSample,sampleNumber )) {
HXLINE( 272)				_hx_tmp14 = hx::IsLess( sampleNumber,p1->lastDecodedSample );
            			}
            			else {
HXLINE( 272)				_hx_tmp14 = false;
            			}
HXDLIN( 272)			if (_hx_tmp14) {
HXLINE( 273)				this->seekFrameFromPage(seekFunc,p1->pageStart,p0->lastDecodedSample,sampleNumber);
            			}
            			else {
HXLINE( 275)				HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),275,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,seek,(void))

void VorbisDecoder_obj::seekFrameFromPage( ::Dynamic seekFunc,Int pageStart,Int firstSample,Int targetSample){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","seekFrameFromPage",0x14f3151d,"kha.audio2.ogg.vorbis.VorbisDecoder.seekFrameFromPage","kha/audio2/ogg/vorbis/VorbisDecoder.hx",280,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(pageStart,"pageStart")
            	HX_STACK_ARG(firstSample,"firstSample")
            	HX_STACK_ARG(targetSample,"targetSample")
HXLINE( 281)		HX_VARI( Int,frame) = (int)0;
HXLINE( 282)		HX_VARI( Int,frameStart) = firstSample;
HXLINE( 287)		Int _hx_tmp = (this->decodeState->inputPosition = pageStart);
HXDLIN( 287)		seekFunc(_hx_tmp);
HXLINE( 288)		this->decodeState->nextSeg = (int)-1;
HXLINE( 297)		HX_VARI( Int,leftEnd) = (int)0;
HXLINE( 298)		HX_VARI( Int,leftStart) = (int)0;
HXLINE( 300)		HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,prevState) = null();
HXLINE( 301)		HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,lastState) = null();
HXLINE( 303)		while(true){
HXLINE( 304)			prevState = lastState;
HXLINE( 305)			lastState = this->decodeState->clone(seekFunc);
HXLINE( 307)			HX_VARI(  ::Dynamic,initialResult) = this->decodeInitial();
HXLINE( 308)			Bool _hx_tmp1 = hx::IsNull( initialResult );
HXDLIN( 308)			if (_hx_tmp1) {
HXLINE( 309)				lastState = prevState;
HXLINE( 310)				goto _hx_goto_12;
            			}
HXLINE( 313)			leftStart = ( (Int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) );
HXLINE( 314)			leftEnd = ( (Int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("end",db,03,4d,00),hx::paccDynamic)) );
HXLINE( 316)			HX_VAR( Int,start);
HXDLIN( 316)			if ((frame == (int)0)) {
HXLINE( 316)				start = leftEnd;
            			}
            			else {
HXLINE( 316)				start = leftStart;
            			}
HXLINE( 324)			if ((targetSample < ((frameStart + ( (Int)( ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) )) - start))) {
HXLINE( 325)				goto _hx_goto_12;
            			}
HXLINE( 328)			{
HXLINE( 328)				HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 328)				while(true){
HXLINE( 328)					Bool _hx_tmp2;
HXDLIN( 328)					Bool _hx_tmp3 = (_this->bytesInSeg == (int)0);
HXDLIN( 328)					if (_hx_tmp3) {
HXLINE( 328)						Bool _hx_tmp4 = !(_this->lastSeg);
HXDLIN( 328)						if (_hx_tmp4) {
HXLINE( 328)							Int _hx_tmp5 = _this->next();
HXDLIN( 328)							_hx_tmp2 = (_hx_tmp5 != (int)0);
            						}
            						else {
HXLINE( 328)							_hx_tmp2 = false;
            						}
            					}
            					else {
HXLINE( 328)						_hx_tmp2 = true;
            					}
HXDLIN( 328)					if (!(_hx_tmp2)) {
HXLINE( 328)						goto _hx_goto_13;
            					}
HXDLIN( 328)					_this->bytesInSeg--;
HXDLIN( 328)					{
HXLINE( 328)						hx::AddEq(_this->inputPosition,(int)1);
HXDLIN( 328)						_this->input->readByte();
            					}
            				}
            				_hx_goto_13:;
            			}
HXLINE( 329)			hx::AddEq(frameStart,(( (Int)( ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) ) - start));
HXLINE( 330)			++frame;
            		}
            		_hx_goto_12:;
HXLINE( 333)		this->decodeState = lastState;
HXLINE( 334)		seekFunc(this->decodeState->inputPosition);
HXLINE( 336)		this->previousLength = (int)0;
HXLINE( 337)		this->pumpFirstFrame();
HXLINE( 339)		this->currentSample = frameStart;
HXLINE( 340)		this->skipSamples((targetSample - frameStart));
            	}


HX_DEFINE_DYNAMIC_FUNC4(VorbisDecoder_obj,seekFrameFromPage,(void))

 ::kha::audio2::ogg::vorbis::VorbisDecoder VorbisDecoder_obj::clone( ::Dynamic seekFunc){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","clone",0x1ecb3c6c,"kha.audio2.ogg.vorbis.VorbisDecoder.clone","kha/audio2/ogg/vorbis/VorbisDecoder.hx",343,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
HXLINE( 344)		HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecoder,decoder) = ( ( ::kha::audio2::ogg::vorbis::VorbisDecoder)(::Type_obj::createEmptyInstance(hx::ClassOf< ::kha::audio2::ogg::vorbis::VorbisDecoder >())) );
HXLINE( 346)		decoder->currentSample = this->currentSample;
HXLINE( 347)		decoder->totalSample = this->totalSample;
HXLINE( 348)		decoder->previousLength = this->previousLength;
HXLINE( 349)		decoder->channelBufferStart = this->channelBufferStart;
HXLINE( 350)		decoder->channelBufferEnd = this->channelBufferEnd;
HXLINE( 353)		decoder->a = this->a;
HXLINE( 354)		decoder->b = this->b;
HXLINE( 355)		decoder->c = this->c;
HXLINE( 356)		decoder->window = this->window;
HXLINE( 357)		decoder->bitReverseData = this->bitReverseData;
HXLINE( 358)		decoder->header = this->header;
HXLINE( 361)		decoder->decodeState = this->decodeState->clone(seekFunc);
HXLINE( 362)		Int length = this->header->channel;
HXDLIN( 362)		HX_VARI_NAME( ::Array< ::Dynamic>,this1,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN( 362)		_hx_array_set_size_exact(this1,length);
HXDLIN( 362)		decoder->channelBuffers = this1;
HXLINE( 363)		Int length1 = this->header->channel;
HXDLIN( 363)		HX_VARI_NAME( ::Array< ::Dynamic>,this2,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN( 363)		_hx_array_set_size_exact(this2,length1);
HXDLIN( 363)		decoder->previousWindow = this2;
HXLINE( 364)		Int length2 = this->header->channel;
HXDLIN( 364)		HX_VARI_NAME( ::Array< ::Dynamic>,this3,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN( 364)		_hx_array_set_size_exact(this3,length2);
HXDLIN( 364)		decoder->finalY = this3;
HXLINE( 366)		{
HXLINE( 366)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 366)			HX_VARI( Int,_g) = this->header->channel;
HXDLIN( 366)			while((_g1 < _g)){
HXLINE( 366)				HX_VARI( Int,i) = _g1++;
HXLINE( 367)				{
HXLINE( 367)					::Array< Float > val = ::kha::audio2::ogg::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) ));
HXDLIN( 367)					decoder->channelBuffers->__unsafe_set(i,val);
            				}
HXLINE( 368)				{
HXLINE( 368)					::Array< Float > val1 = ::kha::audio2::ogg::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) ));
HXDLIN( 368)					decoder->previousWindow->__unsafe_set(i,val1);
            				}
HXLINE( 369)				{
HXLINE( 369)					::Array< Int > val2 = ::Lambda_obj::array(( (::Array< Int >)(_hx_array_unsafe_get(this->finalY,i)) ));
HXDLIN( 369)					decoder->finalY->__unsafe_set(i,val2);
            				}
            			}
            		}
HXLINE( 372)		return decoder;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,clone,return )

void VorbisDecoder_obj::ensurePosition( ::Dynamic seekFunc){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","ensurePosition",0x02f8fd98,"kha.audio2.ogg.vorbis.VorbisDecoder.ensurePosition","kha/audio2/ogg/vorbis/VorbisDecoder.hx",376,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
HXLINE( 376)		seekFunc(this->decodeState->inputPosition);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,ensurePosition,(void))

Int VorbisDecoder_obj::getFrameFloat(){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","getFrameFloat",0xc68da674,"kha.audio2.ogg.vorbis.VorbisDecoder.getFrameFloat","kha/audio2/ogg/vorbis/VorbisDecoder.hx",379,0xbe2976a1)
            	HX_STACK_THIS(this)
HXLINE( 380)		HX_VARI(  ::Dynamic,result) = this->decodePacket();
HXLINE( 381)		Bool _hx_tmp = hx::IsNull( result );
HXDLIN( 381)		if (_hx_tmp) {
HXLINE( 382)			this->channelBufferStart = (this->channelBufferEnd = (int)0);
HXLINE( 383)			return (int)0;
            		}
HXLINE( 386)		HX_VARI( Int,len) = this->finishFrame(result);
HXLINE( 388)		this->channelBufferStart = ( (Int)(result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 389)		this->channelBufferEnd = (( (Int)(result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) ) + len);
HXLINE( 391)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,getFrameFloat,return )

void VorbisDecoder_obj::pumpFirstFrame(){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","pumpFirstFrame",0xf5d8f1b6,"kha.audio2.ogg.vorbis.VorbisDecoder.pumpFirstFrame","kha/audio2/ogg/vorbis/VorbisDecoder.hx",395,0xbe2976a1)
            	HX_STACK_THIS(this)
HXLINE( 395)		 ::Dynamic _hx_tmp = this->decodePacket();
HXDLIN( 395)		this->finishFrame(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,pumpFirstFrame,(void))

Int VorbisDecoder_obj::finishFrame( ::Dynamic r){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","finishFrame",0x21b77929,"kha.audio2.ogg.vorbis.VorbisDecoder.finishFrame","kha/audio2/ogg/vorbis/VorbisDecoder.hx",398,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
HXLINE( 399)		HX_VARI( Int,len) = ( (Int)(r->__Field(HX_("len",d5,4b,52,00),hx::paccDynamic)) );
HXLINE( 400)		HX_VARI( Int,right) = ( (Int)(r->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic)) );
HXLINE( 401)		HX_VARI( Int,left) = ( (Int)(r->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 412)		Bool _hx_tmp = (this->previousLength != (int)0);
HXDLIN( 412)		if (_hx_tmp) {
HXLINE( 413)			HX_VARI( Int,n) = this->previousLength;
HXLINE( 414)			HX_VARI( ::Array< Float >,w) = this->getWindow(n);
HXLINE( 415)			{
HXLINE( 415)				HX_VARI( Int,_g1) = (int)0;
HXDLIN( 415)				HX_VARI( Int,_g) = this->header->channel;
HXDLIN( 415)				while((_g1 < _g)){
HXLINE( 415)					HX_VARI( Int,i) = _g1++;
HXLINE( 416)					HX_VARI( ::Array< Float >,cb) = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) );
HXLINE( 417)					HX_VARI( ::Array< Float >,pw) = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) );
HXLINE( 418)					{
HXLINE( 418)						HX_VARI( Int,_g3) = (int)0;
HXDLIN( 418)						while((_g3 < n)){
HXLINE( 418)							HX_VARI( Int,j) = _g3++;
HXLINE( 419)							{
HXLINE( 419)								Float _hx_tmp1 = ( (Float)(_hx_array_unsafe_get(cb,(left + j))) );
HXDLIN( 419)								Float _hx_tmp2 = (_hx_tmp1 * ( (Float)(_hx_array_unsafe_get(w,j)) ));
HXDLIN( 419)								Float _hx_tmp3 = ( (Float)(_hx_array_unsafe_get(pw,j)) );
HXDLIN( 419)								Float _hx_tmp4 = (_hx_tmp3 * ( (Float)(_hx_array_unsafe_get(w,((n - (int)1) - j))) ));
HXDLIN( 419)								cb->__unsafe_set((left + j),(_hx_tmp2 + _hx_tmp4));
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 424)		HX_VARI( Int,prev) = this->previousLength;
HXLINE( 427)		this->previousLength = (len - right);
HXLINE( 435)		{
HXLINE( 435)			HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN( 435)			HX_VARI_NAME( Int,_g2,"_g") = this->header->channel;
HXDLIN( 435)			while((_g11 < _g2)){
HXLINE( 435)				HX_VARI_NAME( Int,i1,"i") = _g11++;
HXLINE( 436)				HX_VARI_NAME( ::Array< Float >,pw1,"pw") = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i1)) );
HXLINE( 437)				HX_VARI_NAME( ::Array< Float >,cb1,"cb") = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i1)) );
HXLINE( 438)				{
HXLINE( 438)					HX_VARI_NAME( Int,_g31,"_g3") = (int)0;
HXDLIN( 438)					HX_VARI_NAME( Int,_g21,"_g2") = (len - right);
HXDLIN( 438)					while((_g31 < _g21)){
HXLINE( 438)						HX_VARI_NAME( Int,j1,"j") = _g31++;
HXLINE( 439)						{
HXLINE( 439)							Float val = ( (Float)(_hx_array_unsafe_get(cb1,(right + j1))) );
HXDLIN( 439)							pw1->__unsafe_set(j1,val);
            						}
            					}
            				}
            			}
            		}
HXLINE( 443)		if ((prev == (int)0)) {
HXLINE( 447)			return (int)0;
            		}
HXLINE( 451)		Bool _hx_tmp5 = (len < right);
HXDLIN( 451)		if (_hx_tmp5) {
HXLINE( 452)			right = len;
            		}
HXLINE( 455)		return (right - left);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,finishFrame,return )

::Array< Float > VorbisDecoder_obj::getWindow(Int len){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","getWindow",0x0a1679b5,"kha.audio2.ogg.vorbis.VorbisDecoder.getWindow","kha/audio2/ogg/vorbis/VorbisDecoder.hx",459,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(len,"len")
HXLINE( 460)		hx::ShlEq(len,(int)1);
HXLINE( 461)		Bool _hx_tmp = (len == this->header->blocksize0);
HXDLIN( 461)		if (_hx_tmp) {
HXLINE( 461)			return ( (::Array< Float >)(_hx_array_unsafe_get(this->window,(int)0)) );
            		}
            		else {
HXLINE( 463)			Bool _hx_tmp1 = (len == this->header->blocksize1);
HXDLIN( 463)			if (_hx_tmp1) {
HXLINE( 461)				return ( (::Array< Float >)(_hx_array_unsafe_get(this->window,(int)1)) );
            			}
            			else {
HXLINE( 461)				return null();
            			}
            		}
HXDLIN( 461)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,getWindow,return )

void VorbisDecoder_obj::initBlocksize(Int bs,Int n){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","initBlocksize",0x6667536d,"kha.audio2.ogg.vorbis.VorbisDecoder.initBlocksize","kha/audio2/ogg/vorbis/VorbisDecoder.hx",472,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bs,"bs")
            	HX_STACK_ARG(n,"n")
HXLINE( 473)		HX_VARI( Int,n2) = ((int)n >> (int)(int)1);
HXDLIN( 473)		HX_VARI( Int,n4) = ((int)n >> (int)(int)2);
HXDLIN( 473)		HX_VARI( Int,n8) = ((int)n >> (int)(int)3);
HXLINE( 474)		{
HXLINE( 474)			HX_VARI_NAME( ::Array< Float >,this1,"this") = ::Array_obj< Float >::__new();
HXDLIN( 474)			_hx_array_set_size_exact(this1,n2);
HXDLIN( 474)			this->a->__unsafe_set(bs,this1);
            		}
HXLINE( 475)		{
HXLINE( 475)			HX_VARI_NAME( ::Array< Float >,this2,"this") = ::Array_obj< Float >::__new();
HXDLIN( 475)			_hx_array_set_size_exact(this2,n2);
HXDLIN( 475)			this->b->__unsafe_set(bs,this2);
            		}
HXLINE( 476)		{
HXLINE( 476)			HX_VARI_NAME( ::Array< Float >,this3,"this") = ::Array_obj< Float >::__new();
HXDLIN( 476)			_hx_array_set_size_exact(this3,n4);
HXDLIN( 476)			this->c->__unsafe_set(bs,this3);
            		}
HXLINE( 477)		{
HXLINE( 477)			HX_VARI_NAME( ::Array< Float >,this4,"this") = ::Array_obj< Float >::__new();
HXDLIN( 477)			_hx_array_set_size_exact(this4,n2);
HXDLIN( 477)			this->window->__unsafe_set(bs,this4);
            		}
HXLINE( 478)		{
HXLINE( 478)			HX_VARI_NAME( ::Array< Int >,this5,"this") = ::Array_obj< Int >::__new();
HXDLIN( 478)			_hx_array_set_size_exact(this5,n8);
HXDLIN( 478)			this->bitReverseData->__unsafe_set(bs,this5);
            		}
HXLINE( 480)		::Array< Float > _hx_tmp = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bs)) );
HXDLIN( 480)		::Array< Float > _hx_tmp1 = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bs)) );
HXDLIN( 480)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeTwiddleFactors(n,_hx_tmp,_hx_tmp1,( (::Array< Float >)(_hx_array_unsafe_get(this->c,bs)) ));
HXLINE( 481)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeWindow(n,( (::Array< Float >)(_hx_array_unsafe_get(this->window,bs)) ));
HXLINE( 482)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeBitReverse(n,( (::Array< Int >)(_hx_array_unsafe_get(this->bitReverseData,bs)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,initBlocksize,(void))

void VorbisDecoder_obj::inverseMdct(::Array< Float > buffer,Int n,Bool blocktype){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","inverseMdct",0x15d967e7,"kha.audio2.ogg.vorbis.VorbisDecoder.inverseMdct","kha/audio2/ogg/vorbis/VorbisDecoder.hx",485,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(blocktype,"blocktype")
HXLINE( 486)		HX_VAR( Int,bt);
HXDLIN( 486)		if (blocktype) {
HXLINE( 486)			bt = (int)1;
            		}
            		else {
HXLINE( 486)			bt = (int)0;
            		}
HXLINE( 487)		{
HXLINE( 487)			HX_VARI( ::Array< Float >,a) = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bt)) );
HXDLIN( 487)			HX_VARI( ::Array< Float >,b) = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bt)) );
HXDLIN( 487)			HX_VARI( ::Array< Float >,c) = ( (::Array< Float >)(_hx_array_unsafe_get(this->c,bt)) );
HXDLIN( 487)			HX_VARI( ::Array< Int >,bitReverse) = ( (::Array< Int >)(_hx_array_unsafe_get(this->bitReverseData,bt)) );
HXDLIN( 487)			HX_VARI( Int,n2) = ((int)n >> (int)(int)1);
HXDLIN( 487)			HX_VARI( Int,n4) = ((int)n >> (int)(int)2);
HXDLIN( 487)			HX_VARI( Int,n8) = ((int)n >> (int)(int)3);
HXDLIN( 487)			HX_VARI_NAME( ::Array< Float >,this1,"this") = ::Array_obj< Float >::__new();
HXDLIN( 487)			_hx_array_set_size_exact(this1,n2);
HXDLIN( 487)			HX_VARI( ::Array< Float >,buf2) = this1;
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,dOffset) = (n2 - (int)2);
HXDLIN( 487)				HX_VARI( Int,aaOffset) = (int)0;
HXDLIN( 487)				HX_VARI( Int,eOffset) = (int)0;
HXDLIN( 487)				while((eOffset != n2)){
HXLINE( 487)					{
HXLINE( 487)						Float _hx_tmp = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 487)						Float _hx_tmp1 = (_hx_tmp * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						Float _hx_tmp2 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) );
HXDLIN( 487)						Float _hx_tmp3 = (_hx_tmp2 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 487)						buf2->__unsafe_set((dOffset + (int)1),(_hx_tmp1 - _hx_tmp3));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp4 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 487)						Float _hx_tmp5 = (_hx_tmp4 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 487)						Float _hx_tmp6 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) );
HXDLIN( 487)						Float _hx_tmp7 = (_hx_tmp6 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						buf2->__unsafe_set(dOffset,(_hx_tmp5 + _hx_tmp7));
            					}
HXDLIN( 487)					hx::SubEq(dOffset,(int)2);
HXDLIN( 487)					hx::AddEq(aaOffset,(int)2);
HXDLIN( 487)					hx::AddEq(eOffset,(int)4);
            				}
HXDLIN( 487)				eOffset = (n2 - (int)3);
HXDLIN( 487)				while((dOffset >= (int)0)){
HXLINE( 487)					{
HXLINE( 487)						Float _hx_tmp8 = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) ));
HXDLIN( 487)						Float _hx_tmp9 = (_hx_tmp8 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						Float _hx_tmp10 = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 487)						Float _hx_tmp11 = (_hx_tmp10 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 487)						buf2->__unsafe_set((dOffset + (int)1),(_hx_tmp9 - _hx_tmp11));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp12 = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) ));
HXDLIN( 487)						Float _hx_tmp13 = (_hx_tmp12 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 487)						Float _hx_tmp14 = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 487)						Float _hx_tmp15 = (_hx_tmp14 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						buf2->__unsafe_set(dOffset,(_hx_tmp13 + _hx_tmp15));
            					}
HXDLIN( 487)					hx::SubEq(dOffset,(int)2);
HXDLIN( 487)					hx::AddEq(aaOffset,(int)2);
HXDLIN( 487)					hx::SubEq(eOffset,(int)4);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,aaOffset1,"aaOffset") = (n2 - (int)8);
HXDLIN( 487)				HX_VARI( Int,eOffset0) = n4;
HXDLIN( 487)				HX_VARI( Int,eOffset1) = (int)0;
HXDLIN( 487)				HX_VARI( Int,dOffset0) = n4;
HXDLIN( 487)				HX_VARI( Int,dOffset1) = (int)0;
HXDLIN( 487)				while((aaOffset1 >= (int)0)){
HXLINE( 487)					Float _hx_tmp16 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)1))) );
HXDLIN( 487)					HX_VARI( Float,v41_21) = (_hx_tmp16 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)1))) ));
HXDLIN( 487)					Float _hx_tmp17 = ( (Float)(_hx_array_unsafe_get(buf2,eOffset0)) );
HXDLIN( 487)					HX_VARI( Float,v40_20) = (_hx_tmp17 - ( (Float)(_hx_array_unsafe_get(buf2,eOffset1)) ));
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp18 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)1))) );
HXDLIN( 487)						Float val = (_hx_tmp18 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset0 + (int)1),val);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp19 = ( (Float)(_hx_array_unsafe_get(buf2,eOffset0)) );
HXDLIN( 487)						Float val1 = (_hx_tmp19 + ( (Float)(_hx_array_unsafe_get(buf2,eOffset1)) ));
HXDLIN( 487)						buffer->__unsafe_set(dOffset0,val1);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp20 = (v41_21 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)4))) ));
HXDLIN( 487)						Float _hx_tmp21 = (v40_20 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)5))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset1 + (int)1),(_hx_tmp20 - _hx_tmp21));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp22 = (v40_20 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)4))) ));
HXDLIN( 487)						Float _hx_tmp23 = (v41_21 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)5))) ));
HXDLIN( 487)						buffer->__unsafe_set(dOffset1,(_hx_tmp22 + _hx_tmp23));
            					}
HXDLIN( 487)					Float _hx_tmp24 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)3))) );
HXDLIN( 487)					v41_21 = (_hx_tmp24 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)3))) ));
HXDLIN( 487)					Float _hx_tmp25 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)2))) );
HXDLIN( 487)					v40_20 = (_hx_tmp25 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)2))) ));
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp26 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)3))) );
HXDLIN( 487)						Float val2 = (_hx_tmp26 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)3))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset0 + (int)3),val2);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp27 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)2))) );
HXDLIN( 487)						Float val3 = (_hx_tmp27 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)2))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset0 + (int)2),val3);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp28 = (v41_21 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 487)						Float _hx_tmp29 = (v40_20 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset1 + (int)3),(_hx_tmp28 - _hx_tmp29));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp30 = (v40_20 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 487)						Float _hx_tmp31 = (v41_21 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((dOffset1 + (int)2),(_hx_tmp30 + _hx_tmp31));
            					}
HXDLIN( 487)					hx::SubEq(aaOffset1,(int)8);
HXDLIN( 487)					hx::AddEq(dOffset0,(int)4);
HXDLIN( 487)					hx::AddEq(dOffset1,(int)4);
HXDLIN( 487)					hx::AddEq(eOffset0,(int)4);
HXDLIN( 487)					hx::AddEq(eOffset1,(int)4);
            				}
            			}
HXDLIN( 487)			HX_VARI( ::Array< Int >,log2_4) = ::Array_obj< Int >::fromData( _hx_array_data_38,16);
HXDLIN( 487)			Int _hx_tmp32;
HXDLIN( 487)			if ((n < (int)16384)) {
HXLINE( 487)				if ((n < (int)16)) {
HXLINE( 487)					_hx_tmp32 = log2_4->__get(n);
            				}
            				else {
HXLINE( 487)					if ((n < (int)512)) {
HXLINE( 487)						_hx_tmp32 = ((int)5 + log2_4->__get(((int)n >> (int)(int)5)));
            					}
            					else {
HXLINE( 487)						_hx_tmp32 = ((int)10 + log2_4->__get(((int)n >> (int)(int)10)));
            					}
            				}
            			}
            			else {
HXLINE( 487)				if ((n < (int)16777216)) {
HXLINE( 487)					if ((n < (int)524288)) {
HXLINE( 487)						_hx_tmp32 = ((int)15 + log2_4->__get(((int)n >> (int)(int)15)));
            					}
            					else {
HXLINE( 487)						_hx_tmp32 = ((int)20 + log2_4->__get(((int)n >> (int)(int)20)));
            					}
            				}
            				else {
HXLINE( 487)					if ((n < (int)536870912)) {
HXLINE( 487)						_hx_tmp32 = ((int)25 + log2_4->__get(((int)n >> (int)(int)25)));
            					}
            					else {
HXLINE( 487)						if ((n < (int)-2147483648)) {
HXLINE( 487)							_hx_tmp32 = ((int)30 + log2_4->__get(((int)n >> (int)(int)30)));
            						}
            						else {
HXLINE( 487)							_hx_tmp32 = (int)0;
            						}
            					}
            				}
            			}
HXDLIN( 487)			HX_VARI( Int,ld) = (_hx_tmp32 - (int)1);
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,i_off) = ((n2 - (int)1) - (n4 * (int)0));
HXDLIN( 487)				HX_VARI( Int,eeOffset0) = i_off;
HXDLIN( 487)				HX_VARI( Int,eeOffset2) = (i_off + -(((int)n >> (int)(int)3)));
HXDLIN( 487)				HX_VARI( Int,aOffset) = (int)0;
HXDLIN( 487)				HX_VARI( Int,i) = (((int)((int)n >> (int)(int)4) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 310)					Int _hx_tmp33 = --i;
HXLINE( 487)					if (!((_hx_tmp33 > (int)0))) {
HXLINE( 487)						goto _hx_goto_22;
            					}
HXDLIN( 487)					Float _hx_tmp34 = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset0)) );
HXDLIN( 487)					HX_VARI( Float,k00_20) = (_hx_tmp34 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset2)) ));
HXDLIN( 487)					Float _hx_tmp35 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-1))) );
HXDLIN( 487)					HX_VARI( Float,k01_21) = (_hx_tmp35 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI( Int,_g) = eeOffset0;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp36 = ( (Float)(_hx_array_unsafe_get(buffer,_g)) );
HXDLIN( 487)							Float val4 = (_hx_tmp36 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset2)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g,val4);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g1,"_g") = (eeOffset0 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp37 = ( (Float)(_hx_array_unsafe_get(buffer,_g1)) );
HXDLIN( 487)							Float val5 = (_hx_tmp37 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g1,val5);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp38 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp39 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eeOffset2,(_hx_tmp38 - _hx_tmp39));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp40 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp41 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-1),(_hx_tmp40 + _hx_tmp41));
            					}
HXDLIN( 487)					hx::AddEq(aOffset,(int)8);
HXDLIN( 487)					Float _hx_tmp42 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-2))) );
HXDLIN( 487)					k00_20 = (_hx_tmp42 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp43 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-3))) );
HXDLIN( 487)					k01_21 = (_hx_tmp43 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g2,"_g") = (eeOffset0 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp44 = ( (Float)(_hx_array_unsafe_get(buffer,_g2)) );
HXDLIN( 487)							Float val6 = (_hx_tmp44 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g2,val6);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g3,"_g") = (eeOffset0 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp45 = ( (Float)(_hx_array_unsafe_get(buffer,_g3)) );
HXDLIN( 487)							Float val7 = (_hx_tmp45 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g3,val7);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp46 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp47 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-2),(_hx_tmp46 - _hx_tmp47));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp48 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp49 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-3),(_hx_tmp48 + _hx_tmp49));
            					}
HXDLIN( 487)					hx::AddEq(aOffset,(int)8);
HXDLIN( 487)					Float _hx_tmp50 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-4))) );
HXDLIN( 487)					k00_20 = (_hx_tmp50 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp51 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-5))) );
HXDLIN( 487)					k01_21 = (_hx_tmp51 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g4,"_g") = (eeOffset0 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp52 = ( (Float)(_hx_array_unsafe_get(buffer,_g4)) );
HXDLIN( 487)							Float val8 = (_hx_tmp52 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g4,val8);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g5,"_g") = (eeOffset0 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp53 = ( (Float)(_hx_array_unsafe_get(buffer,_g5)) );
HXDLIN( 487)							Float val9 = (_hx_tmp53 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g5,val9);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp54 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp55 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-4),(_hx_tmp54 - _hx_tmp55));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp56 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp57 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-5),(_hx_tmp56 + _hx_tmp57));
            					}
HXDLIN( 487)					hx::AddEq(aOffset,(int)8);
HXDLIN( 487)					Float _hx_tmp58 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-6))) );
HXDLIN( 487)					k00_20 = (_hx_tmp58 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp59 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-7))) );
HXDLIN( 487)					k01_21 = (_hx_tmp59 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g6,"_g") = (eeOffset0 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp60 = ( (Float)(_hx_array_unsafe_get(buffer,_g6)) );
HXDLIN( 487)							Float val10 = (_hx_tmp60 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g6,val10);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g7,"_g") = (eeOffset0 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp61 = ( (Float)(_hx_array_unsafe_get(buffer,_g7)) );
HXDLIN( 487)							Float val11 = (_hx_tmp61 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g7,val11);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp62 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp63 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-6),(_hx_tmp62 - _hx_tmp63));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp64 = (k01_21 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float _hx_tmp65 = (k00_20 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset2 + (int)-7),(_hx_tmp64 + _hx_tmp65));
            					}
HXDLIN( 487)					hx::AddEq(aOffset,(int)8);
HXDLIN( 487)					hx::SubEq(eeOffset0,(int)8);
HXDLIN( 487)					hx::SubEq(eeOffset2,(int)8);
            				}
            				_hx_goto_22:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,i_off1,"i_off") = ((n2 - (int)1) - n4);
HXDLIN( 487)				HX_VARI_NAME( Int,eeOffset01,"eeOffset0") = i_off1;
HXDLIN( 487)				HX_VARI_NAME( Int,eeOffset21,"eeOffset2") = (i_off1 + -(((int)n >> (int)(int)3)));
HXDLIN( 487)				HX_VARI_NAME( Int,aOffset1,"aOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,i1,"i") = (((int)((int)n >> (int)(int)4) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 310)					Int _hx_tmp66 = --i1;
HXLINE( 487)					if (!((_hx_tmp66 > (int)0))) {
HXLINE( 487)						goto _hx_goto_23;
            					}
HXDLIN( 487)					Float _hx_tmp67 = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset01)) );
HXDLIN( 487)					HX_VARI_NAME( Float,k00_201,"k00_20") = (_hx_tmp67 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset21)) ));
HXDLIN( 487)					Float _hx_tmp68 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-1))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k01_211,"k01_21") = (_hx_tmp68 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g8,"_g") = eeOffset01;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp69 = ( (Float)(_hx_array_unsafe_get(buffer,_g8)) );
HXDLIN( 487)							Float val12 = (_hx_tmp69 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset21)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g8,val12);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g9,"_g") = (eeOffset01 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp70 = ( (Float)(_hx_array_unsafe_get(buffer,_g9)) );
HXDLIN( 487)							Float val13 = (_hx_tmp70 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g9,val13);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp71 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp72 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eeOffset21,(_hx_tmp71 - _hx_tmp72));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp73 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp74 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-1),(_hx_tmp73 + _hx_tmp74));
            					}
HXDLIN( 487)					hx::AddEq(aOffset1,(int)8);
HXDLIN( 487)					Float _hx_tmp75 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-2))) );
HXDLIN( 487)					k00_201 = (_hx_tmp75 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp76 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-3))) );
HXDLIN( 487)					k01_211 = (_hx_tmp76 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g10,"_g") = (eeOffset01 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp77 = ( (Float)(_hx_array_unsafe_get(buffer,_g10)) );
HXDLIN( 487)							Float val14 = (_hx_tmp77 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g10,val14);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g11,"_g") = (eeOffset01 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp78 = ( (Float)(_hx_array_unsafe_get(buffer,_g11)) );
HXDLIN( 487)							Float val15 = (_hx_tmp78 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g11,val15);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp79 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp80 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-2),(_hx_tmp79 - _hx_tmp80));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp81 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp82 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-3),(_hx_tmp81 + _hx_tmp82));
            					}
HXDLIN( 487)					hx::AddEq(aOffset1,(int)8);
HXDLIN( 487)					Float _hx_tmp83 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-4))) );
HXDLIN( 487)					k00_201 = (_hx_tmp83 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp84 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-5))) );
HXDLIN( 487)					k01_211 = (_hx_tmp84 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g12,"_g") = (eeOffset01 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp85 = ( (Float)(_hx_array_unsafe_get(buffer,_g12)) );
HXDLIN( 487)							Float val16 = (_hx_tmp85 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g12,val16);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g13,"_g") = (eeOffset01 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp86 = ( (Float)(_hx_array_unsafe_get(buffer,_g13)) );
HXDLIN( 487)							Float val17 = (_hx_tmp86 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g13,val17);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp87 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp88 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-4),(_hx_tmp87 - _hx_tmp88));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp89 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp90 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-5),(_hx_tmp89 + _hx_tmp90));
            					}
HXDLIN( 487)					hx::AddEq(aOffset1,(int)8);
HXDLIN( 487)					Float _hx_tmp91 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-6))) );
HXDLIN( 487)					k00_201 = (_hx_tmp91 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp92 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-7))) );
HXDLIN( 487)					k01_211 = (_hx_tmp92 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g14,"_g") = (eeOffset01 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp93 = ( (Float)(_hx_array_unsafe_get(buffer,_g14)) );
HXDLIN( 487)							Float val18 = (_hx_tmp93 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g14,val18);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g15,"_g") = (eeOffset01 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp94 = ( (Float)(_hx_array_unsafe_get(buffer,_g15)) );
HXDLIN( 487)							Float val19 = (_hx_tmp94 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g15,val19);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp95 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp96 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-6),(_hx_tmp95 - _hx_tmp96));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp97 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float _hx_tmp98 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eeOffset21 + (int)-7),(_hx_tmp97 + _hx_tmp98));
            					}
HXDLIN( 487)					hx::AddEq(aOffset1,(int)8);
HXDLIN( 487)					hx::SubEq(eeOffset01,(int)8);
HXDLIN( 487)					hx::SubEq(eeOffset21,(int)8);
            				}
            				_hx_goto_23:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,d0) = ((n2 - (int)1) - (n8 * (int)0));
HXDLIN( 487)				HX_VARI_NAME( Int,aOffset2,"aOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset01,"eOffset0") = d0;
HXDLIN( 487)				HX_VARI( Int,eOffset2) = (d0 + -(((int)n >> (int)(int)4)));
HXDLIN( 487)				HX_VARI_NAME( Int,i2,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 355)					Int _hx_tmp99 = --i2;
HXLINE( 487)					if (!((_hx_tmp99 > (int)0))) {
HXLINE( 487)						goto _hx_goto_24;
            					}
HXDLIN( 487)					Float _hx_tmp100 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset01)) );
HXDLIN( 487)					HX_VARI_NAME( Float,k00_202,"k00_20") = (_hx_tmp100 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset2)) ));
HXDLIN( 487)					Float _hx_tmp101 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-1))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k01_212,"k01_21") = (_hx_tmp101 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g16,"_g") = eOffset01;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp102 = ( (Float)(_hx_array_unsafe_get(buffer,_g16)) );
HXDLIN( 487)							Float val20 = (_hx_tmp102 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset2)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g16,val20);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g17,"_g") = (eOffset01 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp103 = ( (Float)(_hx_array_unsafe_get(buffer,_g17)) );
HXDLIN( 487)							Float val21 = (_hx_tmp103 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g17,val21);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp104 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp105 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eOffset2,(_hx_tmp104 - _hx_tmp105));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp106 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp107 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-1),(_hx_tmp106 + _hx_tmp107));
            					}
HXDLIN( 487)					hx::AddEq(aOffset2,(int)16);
HXDLIN( 487)					Float _hx_tmp108 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-2))) );
HXDLIN( 487)					k00_202 = (_hx_tmp108 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp109 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-3))) );
HXDLIN( 487)					k01_212 = (_hx_tmp109 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g18,"_g") = (eOffset01 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp110 = ( (Float)(_hx_array_unsafe_get(buffer,_g18)) );
HXDLIN( 487)							Float val22 = (_hx_tmp110 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g18,val22);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g19,"_g") = (eOffset01 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp111 = ( (Float)(_hx_array_unsafe_get(buffer,_g19)) );
HXDLIN( 487)							Float val23 = (_hx_tmp111 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g19,val23);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp112 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp113 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-2),(_hx_tmp112 - _hx_tmp113));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp114 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp115 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-3),(_hx_tmp114 + _hx_tmp115));
            					}
HXDLIN( 487)					hx::AddEq(aOffset2,(int)16);
HXDLIN( 487)					Float _hx_tmp116 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-4))) );
HXDLIN( 487)					k00_202 = (_hx_tmp116 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp117 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-5))) );
HXDLIN( 487)					k01_212 = (_hx_tmp117 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g20,"_g") = (eOffset01 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp118 = ( (Float)(_hx_array_unsafe_get(buffer,_g20)) );
HXDLIN( 487)							Float val24 = (_hx_tmp118 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g20,val24);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g21,"_g") = (eOffset01 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp119 = ( (Float)(_hx_array_unsafe_get(buffer,_g21)) );
HXDLIN( 487)							Float val25 = (_hx_tmp119 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g21,val25);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp120 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp121 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-4),(_hx_tmp120 - _hx_tmp121));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp122 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp123 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-5),(_hx_tmp122 + _hx_tmp123));
            					}
HXDLIN( 487)					hx::AddEq(aOffset2,(int)16);
HXDLIN( 487)					Float _hx_tmp124 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-6))) );
HXDLIN( 487)					k00_202 = (_hx_tmp124 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp125 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-7))) );
HXDLIN( 487)					k01_212 = (_hx_tmp125 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g22,"_g") = (eOffset01 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp126 = ( (Float)(_hx_array_unsafe_get(buffer,_g22)) );
HXDLIN( 487)							Float val26 = (_hx_tmp126 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g22,val26);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g23,"_g") = (eOffset01 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp127 = ( (Float)(_hx_array_unsafe_get(buffer,_g23)) );
HXDLIN( 487)							Float val27 = (_hx_tmp127 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g23,val27);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp128 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp129 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-6),(_hx_tmp128 - _hx_tmp129));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp130 = (k01_212 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float _hx_tmp131 = (k00_202 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset2 + (int)-7),(_hx_tmp130 + _hx_tmp131));
            					}
HXDLIN( 487)					hx::SubEq(eOffset01,(int)8);
HXDLIN( 487)					hx::SubEq(eOffset2,(int)8);
HXDLIN( 487)					hx::AddEq(aOffset2,(int)16);
            				}
            				_hx_goto_24:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,d01,"d0") = ((n2 - (int)1) - n8);
HXDLIN( 487)				HX_VARI_NAME( Int,aOffset3,"aOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset02,"eOffset0") = d01;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset21,"eOffset2") = (d01 + -(((int)n >> (int)(int)4)));
HXDLIN( 487)				HX_VARI_NAME( Int,i3,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 355)					Int _hx_tmp132 = --i3;
HXLINE( 487)					if (!((_hx_tmp132 > (int)0))) {
HXLINE( 487)						goto _hx_goto_25;
            					}
HXDLIN( 487)					Float _hx_tmp133 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset02)) );
HXDLIN( 487)					HX_VARI_NAME( Float,k00_203,"k00_20") = (_hx_tmp133 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset21)) ));
HXDLIN( 487)					Float _hx_tmp134 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-1))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k01_213,"k01_21") = (_hx_tmp134 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g24,"_g") = eOffset02;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp135 = ( (Float)(_hx_array_unsafe_get(buffer,_g24)) );
HXDLIN( 487)							Float val28 = (_hx_tmp135 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset21)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g24,val28);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g25,"_g") = (eOffset02 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp136 = ( (Float)(_hx_array_unsafe_get(buffer,_g25)) );
HXDLIN( 487)							Float val29 = (_hx_tmp136 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g25,val29);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp137 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp138 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eOffset21,(_hx_tmp137 - _hx_tmp138));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp139 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp140 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-1),(_hx_tmp139 + _hx_tmp140));
            					}
HXDLIN( 487)					hx::AddEq(aOffset3,(int)16);
HXDLIN( 487)					Float _hx_tmp141 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-2))) );
HXDLIN( 487)					k00_203 = (_hx_tmp141 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp142 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-3))) );
HXDLIN( 487)					k01_213 = (_hx_tmp142 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g26,"_g") = (eOffset02 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp143 = ( (Float)(_hx_array_unsafe_get(buffer,_g26)) );
HXDLIN( 487)							Float val30 = (_hx_tmp143 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g26,val30);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g27,"_g") = (eOffset02 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp144 = ( (Float)(_hx_array_unsafe_get(buffer,_g27)) );
HXDLIN( 487)							Float val31 = (_hx_tmp144 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g27,val31);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp145 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp146 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-2),(_hx_tmp145 - _hx_tmp146));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp147 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp148 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-3),(_hx_tmp147 + _hx_tmp148));
            					}
HXDLIN( 487)					hx::AddEq(aOffset3,(int)16);
HXDLIN( 487)					Float _hx_tmp149 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-4))) );
HXDLIN( 487)					k00_203 = (_hx_tmp149 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp150 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-5))) );
HXDLIN( 487)					k01_213 = (_hx_tmp150 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g28,"_g") = (eOffset02 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp151 = ( (Float)(_hx_array_unsafe_get(buffer,_g28)) );
HXDLIN( 487)							Float val32 = (_hx_tmp151 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g28,val32);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g29,"_g") = (eOffset02 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp152 = ( (Float)(_hx_array_unsafe_get(buffer,_g29)) );
HXDLIN( 487)							Float val33 = (_hx_tmp152 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g29,val33);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp153 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp154 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-4),(_hx_tmp153 - _hx_tmp154));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp155 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp156 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-5),(_hx_tmp155 + _hx_tmp156));
            					}
HXDLIN( 487)					hx::AddEq(aOffset3,(int)16);
HXDLIN( 487)					Float _hx_tmp157 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-6))) );
HXDLIN( 487)					k00_203 = (_hx_tmp157 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp158 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-7))) );
HXDLIN( 487)					k01_213 = (_hx_tmp158 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g30,"_g") = (eOffset02 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp159 = ( (Float)(_hx_array_unsafe_get(buffer,_g30)) );
HXDLIN( 487)							Float val34 = (_hx_tmp159 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g30,val34);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g31,"_g") = (eOffset02 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp160 = ( (Float)(_hx_array_unsafe_get(buffer,_g31)) );
HXDLIN( 487)							Float val35 = (_hx_tmp160 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g31,val35);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp161 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp162 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-6),(_hx_tmp161 - _hx_tmp162));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp163 = (k01_213 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float _hx_tmp164 = (k00_203 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset21 + (int)-7),(_hx_tmp163 + _hx_tmp164));
            					}
HXDLIN( 487)					hx::SubEq(eOffset02,(int)8);
HXDLIN( 487)					hx::SubEq(eOffset21,(int)8);
HXDLIN( 487)					hx::AddEq(aOffset3,(int)16);
            				}
            				_hx_goto_25:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,d02,"d0") = ((n2 - (int)1) - (n8 * (int)2));
HXDLIN( 487)				HX_VARI_NAME( Int,aOffset4,"aOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset03,"eOffset0") = d02;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset22,"eOffset2") = (d02 + -(((int)n >> (int)(int)4)));
HXDLIN( 487)				HX_VARI_NAME( Int,i4,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 355)					Int _hx_tmp165 = --i4;
HXLINE( 487)					if (!((_hx_tmp165 > (int)0))) {
HXLINE( 487)						goto _hx_goto_26;
            					}
HXDLIN( 487)					Float _hx_tmp166 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset03)) );
HXDLIN( 487)					HX_VARI_NAME( Float,k00_204,"k00_20") = (_hx_tmp166 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset22)) ));
HXDLIN( 487)					Float _hx_tmp167 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-1))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k01_214,"k01_21") = (_hx_tmp167 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g32,"_g") = eOffset03;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp168 = ( (Float)(_hx_array_unsafe_get(buffer,_g32)) );
HXDLIN( 487)							Float val36 = (_hx_tmp168 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset22)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g32,val36);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g33,"_g") = (eOffset03 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp169 = ( (Float)(_hx_array_unsafe_get(buffer,_g33)) );
HXDLIN( 487)							Float val37 = (_hx_tmp169 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g33,val37);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp170 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp171 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eOffset22,(_hx_tmp170 - _hx_tmp171));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp172 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp173 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-1),(_hx_tmp172 + _hx_tmp173));
            					}
HXDLIN( 487)					hx::AddEq(aOffset4,(int)16);
HXDLIN( 487)					Float _hx_tmp174 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-2))) );
HXDLIN( 487)					k00_204 = (_hx_tmp174 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp175 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-3))) );
HXDLIN( 487)					k01_214 = (_hx_tmp175 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g34,"_g") = (eOffset03 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp176 = ( (Float)(_hx_array_unsafe_get(buffer,_g34)) );
HXDLIN( 487)							Float val38 = (_hx_tmp176 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g34,val38);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g35,"_g") = (eOffset03 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp177 = ( (Float)(_hx_array_unsafe_get(buffer,_g35)) );
HXDLIN( 487)							Float val39 = (_hx_tmp177 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g35,val39);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp178 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp179 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-2),(_hx_tmp178 - _hx_tmp179));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp180 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp181 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-3),(_hx_tmp180 + _hx_tmp181));
            					}
HXDLIN( 487)					hx::AddEq(aOffset4,(int)16);
HXDLIN( 487)					Float _hx_tmp182 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-4))) );
HXDLIN( 487)					k00_204 = (_hx_tmp182 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp183 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-5))) );
HXDLIN( 487)					k01_214 = (_hx_tmp183 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g36,"_g") = (eOffset03 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp184 = ( (Float)(_hx_array_unsafe_get(buffer,_g36)) );
HXDLIN( 487)							Float val40 = (_hx_tmp184 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g36,val40);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g37,"_g") = (eOffset03 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp185 = ( (Float)(_hx_array_unsafe_get(buffer,_g37)) );
HXDLIN( 487)							Float val41 = (_hx_tmp185 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g37,val41);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp186 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp187 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-4),(_hx_tmp186 - _hx_tmp187));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp188 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp189 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-5),(_hx_tmp188 + _hx_tmp189));
            					}
HXDLIN( 487)					hx::AddEq(aOffset4,(int)16);
HXDLIN( 487)					Float _hx_tmp190 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-6))) );
HXDLIN( 487)					k00_204 = (_hx_tmp190 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp191 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-7))) );
HXDLIN( 487)					k01_214 = (_hx_tmp191 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g38,"_g") = (eOffset03 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp192 = ( (Float)(_hx_array_unsafe_get(buffer,_g38)) );
HXDLIN( 487)							Float val42 = (_hx_tmp192 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g38,val42);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g39,"_g") = (eOffset03 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp193 = ( (Float)(_hx_array_unsafe_get(buffer,_g39)) );
HXDLIN( 487)							Float val43 = (_hx_tmp193 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g39,val43);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp194 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp195 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-6),(_hx_tmp194 - _hx_tmp195));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp196 = (k01_214 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float _hx_tmp197 = (k00_204 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset22 + (int)-7),(_hx_tmp196 + _hx_tmp197));
            					}
HXDLIN( 487)					hx::SubEq(eOffset03,(int)8);
HXDLIN( 487)					hx::SubEq(eOffset22,(int)8);
HXDLIN( 487)					hx::AddEq(aOffset4,(int)16);
            				}
            				_hx_goto_26:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,d03,"d0") = ((n2 - (int)1) - (n8 * (int)3));
HXDLIN( 487)				HX_VARI_NAME( Int,aOffset5,"aOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset04,"eOffset0") = d03;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset23,"eOffset2") = (d03 + -(((int)n >> (int)(int)4)));
HXDLIN( 487)				HX_VARI_NAME( Int,i5,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 487)				while(true){
HXLINE( 355)					Int _hx_tmp198 = --i5;
HXLINE( 487)					if (!((_hx_tmp198 > (int)0))) {
HXLINE( 487)						goto _hx_goto_27;
            					}
HXDLIN( 487)					Float _hx_tmp199 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset04)) );
HXDLIN( 487)					HX_VARI_NAME( Float,k00_205,"k00_20") = (_hx_tmp199 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset23)) ));
HXDLIN( 487)					Float _hx_tmp200 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-1))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k01_215,"k01_21") = (_hx_tmp200 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-1))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g40,"_g") = eOffset04;
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp201 = ( (Float)(_hx_array_unsafe_get(buffer,_g40)) );
HXDLIN( 487)							Float val44 = (_hx_tmp201 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset23)) ));
HXDLIN( 487)							buffer->__unsafe_set(_g40,val44);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g41,"_g") = (eOffset04 + (int)-1);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp202 = ( (Float)(_hx_array_unsafe_get(buffer,_g41)) );
HXDLIN( 487)							Float val45 = (_hx_tmp202 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-1))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g41,val45);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp203 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp204 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set(eOffset23,(_hx_tmp203 - _hx_tmp204));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp205 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp206 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-1),(_hx_tmp205 + _hx_tmp206));
            					}
HXDLIN( 487)					hx::AddEq(aOffset5,(int)16);
HXDLIN( 487)					Float _hx_tmp207 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-2))) );
HXDLIN( 487)					k00_205 = (_hx_tmp207 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-2))) ));
HXDLIN( 487)					Float _hx_tmp208 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-3))) );
HXDLIN( 487)					k01_215 = (_hx_tmp208 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-3))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g42,"_g") = (eOffset04 + (int)-2);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp209 = ( (Float)(_hx_array_unsafe_get(buffer,_g42)) );
HXDLIN( 487)							Float val46 = (_hx_tmp209 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-2))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g42,val46);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g43,"_g") = (eOffset04 + (int)-3);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp210 = ( (Float)(_hx_array_unsafe_get(buffer,_g43)) );
HXDLIN( 487)							Float val47 = (_hx_tmp210 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-3))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g43,val47);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp211 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp212 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-2),(_hx_tmp211 - _hx_tmp212));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp213 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp214 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-3),(_hx_tmp213 + _hx_tmp214));
            					}
HXDLIN( 487)					hx::AddEq(aOffset5,(int)16);
HXDLIN( 487)					Float _hx_tmp215 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-4))) );
HXDLIN( 487)					k00_205 = (_hx_tmp215 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-4))) ));
HXDLIN( 487)					Float _hx_tmp216 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-5))) );
HXDLIN( 487)					k01_215 = (_hx_tmp216 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-5))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g44,"_g") = (eOffset04 + (int)-4);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp217 = ( (Float)(_hx_array_unsafe_get(buffer,_g44)) );
HXDLIN( 487)							Float val48 = (_hx_tmp217 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-4))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g44,val48);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g45,"_g") = (eOffset04 + (int)-5);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp218 = ( (Float)(_hx_array_unsafe_get(buffer,_g45)) );
HXDLIN( 487)							Float val49 = (_hx_tmp218 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-5))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g45,val49);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp219 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp220 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-4),(_hx_tmp219 - _hx_tmp220));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp221 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp222 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-5),(_hx_tmp221 + _hx_tmp222));
            					}
HXDLIN( 487)					hx::AddEq(aOffset5,(int)16);
HXDLIN( 487)					Float _hx_tmp223 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-6))) );
HXDLIN( 487)					k00_205 = (_hx_tmp223 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-6))) ));
HXDLIN( 487)					Float _hx_tmp224 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-7))) );
HXDLIN( 487)					k01_215 = (_hx_tmp224 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-7))) ));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g46,"_g") = (eOffset04 + (int)-6);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp225 = ( (Float)(_hx_array_unsafe_get(buffer,_g46)) );
HXDLIN( 487)							Float val50 = (_hx_tmp225 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-6))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g46,val50);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g47,"_g") = (eOffset04 + (int)-7);
HXDLIN( 487)						{
HXLINE( 487)							Float _hx_tmp226 = ( (Float)(_hx_array_unsafe_get(buffer,_g47)) );
HXDLIN( 487)							Float val51 = (_hx_tmp226 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-7))) ));
HXDLIN( 487)							buffer->__unsafe_set(_g47,val51);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp227 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp228 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-6),(_hx_tmp227 - _hx_tmp228));
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float _hx_tmp229 = (k01_215 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float _hx_tmp230 = (k00_205 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) ));
HXDLIN( 487)						buffer->__unsafe_set((eOffset23 + (int)-7),(_hx_tmp229 + _hx_tmp230));
            					}
HXDLIN( 487)					hx::SubEq(eOffset04,(int)8);
HXDLIN( 487)					hx::SubEq(eOffset23,(int)8);
HXDLIN( 487)					hx::AddEq(aOffset5,(int)16);
            				}
            				_hx_goto_27:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,_g110,"_g1") = (int)2;
HXDLIN( 487)				HX_VARI_NAME( Int,_g48,"_g") = ((int)(ld - (int)3) >> (int)(int)1);
HXDLIN( 487)				while((_g110 < _g48)){
HXLINE( 487)					HX_VARI( Int,l) = _g110++;
HXDLIN( 487)					HX_VARI( Int,k0) = ((int)n >> (int)(l + (int)2));
HXDLIN( 487)					HX_VARI( Int,k0_2) = ((int)k0 >> (int)(int)1);
HXDLIN( 487)					HX_VARI( Int,lim) = ((int)(int)1 << (int)(l + (int)1));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,_g310,"_g3") = (int)0;
HXDLIN( 487)						while((_g310 < lim)){
HXLINE( 487)							HX_VARI_NAME( Int,i6,"i") = _g310++;
HXDLIN( 487)							{
HXLINE( 487)								HX_VARI_NAME( Int,d04,"d0") = ((n2 - (int)1) - (k0 * i6));
HXDLIN( 487)								HX_VARI( Int,k1) = ((int)(int)1 << (int)(l + (int)3));
HXDLIN( 487)								HX_VARI_NAME( Int,aOffset6,"aOffset") = (int)0;
HXDLIN( 487)								HX_VARI_NAME( Int,eOffset05,"eOffset0") = d04;
HXDLIN( 487)								HX_VARI_NAME( Int,eOffset24,"eOffset2") = (d04 + -(k0_2));
HXDLIN( 487)								HX_VARI_NAME( Int,i7,"i") = (((int)((int)n >> (int)(l + (int)4)) >> (int)(int)2) + (int)1);
HXDLIN( 487)								while(true){
HXLINE( 355)									Int _hx_tmp231 = --i7;
HXLINE( 487)									if (!((_hx_tmp231 > (int)0))) {
HXLINE( 487)										goto _hx_goto_30;
            									}
HXDLIN( 487)									Float _hx_tmp232 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset05)) );
HXDLIN( 487)									HX_VARI_NAME( Float,k00_206,"k00_20") = (_hx_tmp232 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset24)) ));
HXDLIN( 487)									Float _hx_tmp233 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-1))) );
HXDLIN( 487)									HX_VARI_NAME( Float,k01_216,"k01_21") = (_hx_tmp233 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-1))) ));
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g49,"_g") = eOffset05;
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp234 = ( (Float)(_hx_array_unsafe_get(buffer,_g49)) );
HXDLIN( 487)											Float val52 = (_hx_tmp234 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset24)) ));
HXDLIN( 487)											buffer->__unsafe_set(_g49,val52);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g50,"_g") = (eOffset05 + (int)-1);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp235 = ( (Float)(_hx_array_unsafe_get(buffer,_g50)) );
HXDLIN( 487)											Float val53 = (_hx_tmp235 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-1))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g50,val53);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp236 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp237 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set(eOffset24,(_hx_tmp236 - _hx_tmp237));
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp238 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp239 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-1),(_hx_tmp238 + _hx_tmp239));
            									}
HXDLIN( 487)									hx::AddEq(aOffset6,k1);
HXDLIN( 487)									Float _hx_tmp240 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-2))) );
HXDLIN( 487)									k00_206 = (_hx_tmp240 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-2))) ));
HXDLIN( 487)									Float _hx_tmp241 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-3))) );
HXDLIN( 487)									k01_216 = (_hx_tmp241 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-3))) ));
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g51,"_g") = (eOffset05 + (int)-2);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp242 = ( (Float)(_hx_array_unsafe_get(buffer,_g51)) );
HXDLIN( 487)											Float val54 = (_hx_tmp242 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-2))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g51,val54);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g52,"_g") = (eOffset05 + (int)-3);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp243 = ( (Float)(_hx_array_unsafe_get(buffer,_g52)) );
HXDLIN( 487)											Float val55 = (_hx_tmp243 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-3))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g52,val55);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp244 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp245 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-2),(_hx_tmp244 - _hx_tmp245));
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp246 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp247 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-3),(_hx_tmp246 + _hx_tmp247));
            									}
HXDLIN( 487)									hx::AddEq(aOffset6,k1);
HXDLIN( 487)									Float _hx_tmp248 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-4))) );
HXDLIN( 487)									k00_206 = (_hx_tmp248 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-4))) ));
HXDLIN( 487)									Float _hx_tmp249 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-5))) );
HXDLIN( 487)									k01_216 = (_hx_tmp249 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-5))) ));
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g53,"_g") = (eOffset05 + (int)-4);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp250 = ( (Float)(_hx_array_unsafe_get(buffer,_g53)) );
HXDLIN( 487)											Float val56 = (_hx_tmp250 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-4))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g53,val56);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g54,"_g") = (eOffset05 + (int)-5);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp251 = ( (Float)(_hx_array_unsafe_get(buffer,_g54)) );
HXDLIN( 487)											Float val57 = (_hx_tmp251 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-5))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g54,val57);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp252 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp253 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-4),(_hx_tmp252 - _hx_tmp253));
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp254 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp255 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-5),(_hx_tmp254 + _hx_tmp255));
            									}
HXDLIN( 487)									hx::AddEq(aOffset6,k1);
HXDLIN( 487)									Float _hx_tmp256 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-6))) );
HXDLIN( 487)									k00_206 = (_hx_tmp256 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-6))) ));
HXDLIN( 487)									Float _hx_tmp257 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-7))) );
HXDLIN( 487)									k01_216 = (_hx_tmp257 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-7))) ));
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g55,"_g") = (eOffset05 + (int)-6);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp258 = ( (Float)(_hx_array_unsafe_get(buffer,_g55)) );
HXDLIN( 487)											Float val58 = (_hx_tmp258 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-6))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g55,val58);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										HX_VARI_NAME( Int,_g56,"_g") = (eOffset05 + (int)-7);
HXDLIN( 487)										{
HXLINE( 487)											Float _hx_tmp259 = ( (Float)(_hx_array_unsafe_get(buffer,_g56)) );
HXDLIN( 487)											Float val59 = (_hx_tmp259 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-7))) ));
HXDLIN( 487)											buffer->__unsafe_set(_g56,val59);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp260 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp261 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-6),(_hx_tmp260 - _hx_tmp261));
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float _hx_tmp262 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float _hx_tmp263 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) ));
HXDLIN( 487)										buffer->__unsafe_set((eOffset24 + (int)-7),(_hx_tmp262 + _hx_tmp263));
            									}
HXDLIN( 487)									hx::SubEq(eOffset05,(int)8);
HXDLIN( 487)									hx::SubEq(eOffset24,(int)8);
HXDLIN( 487)									hx::AddEq(aOffset6,k1);
            								}
            								_hx_goto_30:;
            							}
            						}
            					}
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,_g111,"_g1") = ((int)(ld - (int)3) >> (int)(int)1);
HXDLIN( 487)				HX_VARI_NAME( Int,_g57,"_g") = (ld - (int)6);
HXDLIN( 487)				while((_g111 < _g57)){
HXLINE( 487)					HX_VARI_NAME( Int,l1,"l") = _g111++;
HXDLIN( 487)					HX_VARI_NAME( Int,k01,"k0") = ((int)n >> (int)(l1 + (int)2));
HXDLIN( 487)					HX_VARI_NAME( Int,k11,"k1") = ((int)(int)1 << (int)(l1 + (int)3));
HXDLIN( 487)					HX_VARI_NAME( Int,k0_21,"k0_2") = ((int)k01 >> (int)(int)1);
HXDLIN( 487)					HX_VARI( Int,rlim) = ((int)n >> (int)(l1 + (int)6));
HXDLIN( 487)					HX_VARI_NAME( Int,lim1,"lim") = ((int)(int)1 << (int)(l1 + (int)1));
HXDLIN( 487)					HX_VARI_NAME( Int,aOffset7,"aOffset") = (int)0;
HXDLIN( 487)					HX_VARI_NAME( Int,i_off2,"i_off") = (n2 - (int)1);
HXDLIN( 487)					HX_VARI( Int,r) = (rlim + (int)1);
HXDLIN( 487)					while(true){
HXLINE( 144)						Int _hx_tmp264 = --r;
HXLINE( 487)						if (!((_hx_tmp264 > (int)0))) {
HXLINE( 487)							goto _hx_goto_32;
            						}
HXDLIN( 487)						{
HXLINE( 487)							HX_VARI( Float,A0) = ( (Float)(_hx_array_unsafe_get(a,aOffset7)) );
HXDLIN( 487)							HX_VARI( Float,A1) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (int)1))) );
HXDLIN( 487)							HX_VARI( Float,A2) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + k11))) );
HXDLIN( 487)							HX_VARI( Float,A3) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + k11) + (int)1))) );
HXDLIN( 487)							HX_VARI( Float,A4) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * (int)2)))) );
HXDLIN( 487)							HX_VARI( Float,A5) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * (int)2)) + (int)1))) );
HXDLIN( 487)							HX_VARI( Float,A6) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * (int)3)))) );
HXDLIN( 487)							HX_VARI( Float,A7) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * (int)3)) + (int)1))) );
HXDLIN( 487)							HX_VARI_NAME( Int,eeOffset02,"eeOffset0") = i_off2;
HXDLIN( 487)							HX_VARI_NAME( Int,eeOffset22,"eeOffset2") = (i_off2 + -(k0_21));
HXDLIN( 487)							HX_VARI_NAME( Int,i8,"i") = (lim1 + (int)1);
HXDLIN( 487)							while(true){
HXLINE( 411)								Int _hx_tmp265 = --i8;
HXLINE( 487)								if (!((_hx_tmp265 > (int)0))) {
HXLINE( 487)									goto _hx_goto_33;
            								}
HXDLIN( 487)								Float _hx_tmp266 = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset02)) );
HXDLIN( 487)								HX_VARI( Float,k00) = (_hx_tmp266 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset22)) ));
HXDLIN( 487)								Float _hx_tmp267 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-1))) );
HXDLIN( 487)								HX_VARI_NAME( Float,k111,"k11") = (_hx_tmp267 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-1))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp268 = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset02)) );
HXDLIN( 487)									Float val60 = (_hx_tmp268 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset22)) ));
HXDLIN( 487)									buffer->__unsafe_set(eeOffset02,val60);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp269 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-1))) );
HXDLIN( 487)									Float val61 = (_hx_tmp269 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-1))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-1),val61);
            								}
HXDLIN( 487)								buffer->__unsafe_set(eeOffset22,((k00 * A0) - (k111 * A1)));
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-1),((k111 * A0) + (k00 * A1)));
HXDLIN( 487)								Float _hx_tmp270 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-2))) );
HXDLIN( 487)								k00 = (_hx_tmp270 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-2))) ));
HXDLIN( 487)								Float _hx_tmp271 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-3))) );
HXDLIN( 487)								k111 = (_hx_tmp271 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-3))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp272 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-2))) );
HXDLIN( 487)									Float val62 = (_hx_tmp272 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-2))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-2),val62);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp273 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-3))) );
HXDLIN( 487)									Float val63 = (_hx_tmp273 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-3))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-3),val63);
            								}
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-2),((k00 * A2) - (k111 * A3)));
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-3),((k111 * A2) + (k00 * A3)));
HXDLIN( 487)								Float _hx_tmp274 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-4))) );
HXDLIN( 487)								k00 = (_hx_tmp274 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-4))) ));
HXDLIN( 487)								Float _hx_tmp275 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-5))) );
HXDLIN( 487)								k111 = (_hx_tmp275 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-5))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp276 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-4))) );
HXDLIN( 487)									Float val64 = (_hx_tmp276 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-4))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-4),val64);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp277 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-5))) );
HXDLIN( 487)									Float val65 = (_hx_tmp277 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-5))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-5),val65);
            								}
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-4),((k00 * A4) - (k111 * A5)));
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-5),((k111 * A4) + (k00 * A5)));
HXDLIN( 487)								Float _hx_tmp278 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-6))) );
HXDLIN( 487)								k00 = (_hx_tmp278 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-6))) ));
HXDLIN( 487)								Float _hx_tmp279 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-7))) );
HXDLIN( 487)								k111 = (_hx_tmp279 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-7))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp280 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-6))) );
HXDLIN( 487)									Float val66 = (_hx_tmp280 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-6))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-6),val66);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float _hx_tmp281 = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-7))) );
HXDLIN( 487)									Float val67 = (_hx_tmp281 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-7))) ));
HXDLIN( 487)									buffer->__unsafe_set((eeOffset02 + (int)-7),val67);
            								}
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-6),((k00 * A6) - (k111 * A7)));
HXDLIN( 487)								buffer->__unsafe_set((eeOffset22 + (int)-7),((k111 * A6) + (k00 * A7)));
HXDLIN( 487)								hx::SubEq(eeOffset02,k01);
HXDLIN( 487)								hx::SubEq(eeOffset22,k01);
            							}
            							_hx_goto_33:;
            						}
HXDLIN( 487)						hx::AddEq(aOffset7,(k11 * (int)4));
HXDLIN( 487)						hx::SubEq(i_off2,(int)8);
            					}
            					_hx_goto_32:;
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI_NAME( Int,i_off3,"i_off") = (n2 - (int)1);
HXDLIN( 487)				HX_VARI_NAME( Float,A21,"A2") = ( (Float)(_hx_array_unsafe_get(a,((int)n >> (int)(int)3))) );
HXDLIN( 487)				HX_VARI( Int,zOffset) = i_off3;
HXDLIN( 487)				HX_VARI( Int,baseOffset) = (i_off3 - ((int)16 * ((int)n >> (int)(int)5)));
HXDLIN( 487)				while((zOffset > baseOffset)){
HXLINE( 487)					HX_VARI( Float,t0) = ( (Float)(_hx_array_unsafe_get(buffer,zOffset)) );
HXDLIN( 487)					HX_VARI( Float,t1) = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-8))) );
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-8),(t0 - t1));
HXDLIN( 487)					buffer->__unsafe_set(zOffset,(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-1))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-9))) );
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-9),(t0 - t1));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-1),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-2))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-10))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k001,"k00") = (t0 - t1);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-2),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-11))) );
HXDLIN( 487)					HX_VARI_NAME( Float,k112,"k11") = (t0 - t1);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-3),(t0 + t1));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-10),((k001 + k112) * A21));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-11),((k112 - k001) * A21));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-4))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-12))) );
HXDLIN( 487)					k001 = (t1 - t0);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-4),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-5))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-13))) );
HXDLIN( 487)					k112 = (t0 - t1);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-5),(t0 + t1));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-12),k112);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-13),k001);
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-6))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-14))) );
HXDLIN( 487)					k001 = (t1 - t0);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-6),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-15))) );
HXDLIN( 487)					k112 = (t0 - t1);
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-7),(t0 + t1));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-14),((k001 + k112) * A21));
HXDLIN( 487)					buffer->__unsafe_set((zOffset + (int)-15),((k001 - k112) * A21));
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Float,t01,"t0") = ( (Float)(_hx_array_unsafe_get(buffer,zOffset)) );
HXDLIN( 487)						HX_VARI_NAME( Float,t11,"t1") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-4))) );
HXDLIN( 487)						HX_VARI_NAME( Float,k002,"k00") = (t01 - t11);
HXDLIN( 487)						HX_VARI( Float,y0) = (t01 + t11);
HXDLIN( 487)						t01 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-2))) );
HXDLIN( 487)						t11 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-6))) );
HXDLIN( 487)						HX_VARI( Float,y2) = (t01 + t11);
HXDLIN( 487)						HX_VARI( Float,k22) = (t01 - t11);
HXDLIN( 487)						buffer->__unsafe_set(zOffset,(y0 + y2));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-2),(y0 - y2));
HXDLIN( 487)						Float _hx_tmp282 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 487)						HX_VARI( Float,k33) = (_hx_tmp282 - ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) ));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-4),(k002 + k33));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-6),(k002 - k33));
HXDLIN( 487)						t01 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-1))) );
HXDLIN( 487)						t11 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-5))) );
HXDLIN( 487)						HX_VARI_NAME( Float,k113,"k11") = (t01 - t11);
HXDLIN( 487)						HX_VARI( Float,y1) = (t01 + t11);
HXDLIN( 487)						Float _hx_tmp283 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 487)						HX_VARI( Float,y3) = (_hx_tmp283 + ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) ));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-1),(y1 + y3));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-3),(y1 - y3));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-5),(k113 - k22));
HXDLIN( 487)						buffer->__unsafe_set((zOffset + (int)-7),(k113 + k22));
            					}
HXDLIN( 487)					{
HXLINE( 487)						HX_VARI_NAME( Int,zOffset1,"zOffset") = (zOffset - (int)8);
HXDLIN( 487)						HX_VARI_NAME( Float,t02,"t0") = ( (Float)(_hx_array_unsafe_get(buffer,zOffset1)) );
HXDLIN( 487)						HX_VARI_NAME( Float,t12,"t1") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-4))) );
HXDLIN( 487)						HX_VARI_NAME( Float,k003,"k00") = (t02 - t12);
HXDLIN( 487)						HX_VARI_NAME( Float,y01,"y0") = (t02 + t12);
HXDLIN( 487)						t02 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-2))) );
HXDLIN( 487)						t12 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-6))) );
HXDLIN( 487)						HX_VARI_NAME( Float,y21,"y2") = (t02 + t12);
HXDLIN( 487)						HX_VARI_NAME( Float,k221,"k22") = (t02 - t12);
HXDLIN( 487)						buffer->__unsafe_set(zOffset1,(y01 + y21));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-2),(y01 - y21));
HXDLIN( 487)						Float _hx_tmp284 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-3))) );
HXDLIN( 487)						HX_VARI_NAME( Float,k331,"k33") = (_hx_tmp284 - ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-7))) ));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-4),(k003 + k331));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-6),(k003 - k331));
HXDLIN( 487)						t02 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-1))) );
HXDLIN( 487)						t12 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-5))) );
HXDLIN( 487)						HX_VARI_NAME( Float,k114,"k11") = (t02 - t12);
HXDLIN( 487)						HX_VARI_NAME( Float,y11,"y1") = (t02 + t12);
HXDLIN( 487)						Float _hx_tmp285 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-3))) );
HXDLIN( 487)						HX_VARI_NAME( Float,y31,"y3") = (_hx_tmp285 + ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-7))) ));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-1),(y11 + y31));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-3),(y11 - y31));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-5),(k114 - k221));
HXDLIN( 487)						buffer->__unsafe_set((zOffset1 + (int)-7),(k114 + k221));
            					}
HXDLIN( 487)					hx::SubEq(zOffset,(int)16);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,brOffset) = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset01,"dOffset0") = (n4 - (int)4);
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset11,"dOffset1") = (n2 - (int)4);
HXDLIN( 487)				while((dOffset01 >= (int)0)){
HXLINE( 487)					HX_VARI( Int,k4) = ( (Int)(_hx_array_unsafe_get(bitReverse,brOffset)) );
HXDLIN( 487)					{
HXLINE( 487)						Float val68 = ( (Float)(_hx_array_unsafe_get(buffer,k4)) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset11 + (int)3),val68);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val69 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)1))) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset11 + (int)2),val69);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val70 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)2))) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset01 + (int)3),val70);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val71 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)3))) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset01 + (int)2),val71);
            					}
HXDLIN( 487)					k4 = ( (Int)(_hx_array_unsafe_get(bitReverse,(brOffset + (int)1))) );
HXDLIN( 487)					{
HXLINE( 487)						Float val72 = ( (Float)(_hx_array_unsafe_get(buffer,k4)) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset11 + (int)1),val72);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val73 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)1))) );
HXDLIN( 487)						buf2->__unsafe_set(dOffset11,val73);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val74 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)2))) );
HXDLIN( 487)						buf2->__unsafe_set((dOffset01 + (int)1),val74);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val75 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)3))) );
HXDLIN( 487)						buf2->__unsafe_set(dOffset01,val75);
            					}
HXDLIN( 487)					hx::SubEq(dOffset01,(int)4);
HXDLIN( 487)					hx::SubEq(dOffset11,(int)4);
HXDLIN( 487)					hx::AddEq(brOffset,(int)2);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,cOffset) = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset2,"dOffset") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset3,"eOffset") = (n2 - (int)4);
HXDLIN( 487)				while((dOffset2 < eOffset3)){
HXLINE( 487)					Float _hx_tmp286 = ( (Float)(_hx_array_unsafe_get(buf2,dOffset2)) );
HXDLIN( 487)					HX_VARI( Float,a02) = (_hx_tmp286 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)2))) ));
HXDLIN( 487)					Float _hx_tmp287 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)1))) );
HXDLIN( 487)					HX_VARI( Float,a11) = (_hx_tmp287 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)3))) ));
HXDLIN( 487)					Float _hx_tmp288 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)1))) ) * a02);
HXDLIN( 487)					Float _hx_tmp289 = (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a11);
HXDLIN( 487)					HX_VARI( Float,b0) = (_hx_tmp288 + _hx_tmp289);
HXDLIN( 487)					Float _hx_tmp290 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)1))) ) * a11);
HXDLIN( 487)					Float _hx_tmp291 = (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a02);
HXDLIN( 487)					HX_VARI( Float,b1) = (_hx_tmp290 - _hx_tmp291);
HXDLIN( 487)					Float _hx_tmp292 = ( (Float)(_hx_array_unsafe_get(buf2,dOffset2)) );
HXDLIN( 487)					HX_VARI( Float,b2) = (_hx_tmp292 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)2))) ));
HXDLIN( 487)					Float _hx_tmp293 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)1))) );
HXDLIN( 487)					HX_VARI( Float,b3) = (_hx_tmp293 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)3))) ));
HXDLIN( 487)					buf2->__unsafe_set(dOffset2,(b2 + b0));
HXDLIN( 487)					buf2->__unsafe_set((dOffset2 + (int)1),(b3 + b1));
HXDLIN( 487)					buf2->__unsafe_set((eOffset3 + (int)2),(b2 - b0));
HXDLIN( 487)					buf2->__unsafe_set((eOffset3 + (int)3),(b1 - b3));
HXDLIN( 487)					Float _hx_tmp294 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)2))) );
HXDLIN( 487)					a02 = (_hx_tmp294 - ( (Float)(_hx_array_unsafe_get(buf2,eOffset3)) ));
HXDLIN( 487)					Float _hx_tmp295 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)3))) );
HXDLIN( 487)					a11 = (_hx_tmp295 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)1))) ));
HXDLIN( 487)					Float _hx_tmp296 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)3))) ) * a02);
HXDLIN( 487)					Float _hx_tmp297 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)2))) ) * a11);
HXDLIN( 487)					b0 = (_hx_tmp296 + _hx_tmp297);
HXDLIN( 487)					Float _hx_tmp298 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)3))) ) * a11);
HXDLIN( 487)					Float _hx_tmp299 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)2))) ) * a02);
HXDLIN( 487)					b1 = (_hx_tmp298 - _hx_tmp299);
HXDLIN( 487)					Float _hx_tmp300 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)2))) );
HXDLIN( 487)					b2 = (_hx_tmp300 + ( (Float)(_hx_array_unsafe_get(buf2,eOffset3)) ));
HXDLIN( 487)					Float _hx_tmp301 = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)3))) );
HXDLIN( 487)					b3 = (_hx_tmp301 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)1))) ));
HXDLIN( 487)					buf2->__unsafe_set((dOffset2 + (int)2),(b2 + b0));
HXDLIN( 487)					buf2->__unsafe_set((dOffset2 + (int)3),(b3 + b1));
HXDLIN( 487)					buf2->__unsafe_set(eOffset3,(b2 - b0));
HXDLIN( 487)					buf2->__unsafe_set((eOffset3 + (int)1),(b1 - b3));
HXDLIN( 487)					hx::AddEq(cOffset,(int)4);
HXDLIN( 487)					hx::AddEq(dOffset2,(int)4);
HXDLIN( 487)					hx::SubEq(eOffset3,(int)4);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				HX_VARI( Int,bOffset) = (n2 - (int)8);
HXDLIN( 487)				HX_VARI_NAME( Int,eOffset4,"eOffset") = (n2 - (int)8);
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset02,"dOffset0") = (int)0;
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset12,"dOffset1") = (n2 - (int)4);
HXDLIN( 487)				HX_VARI_NAME( Int,dOffset21,"dOffset2") = n2;
HXDLIN( 487)				HX_VARI( Int,dOffset3) = (n - (int)4);
HXDLIN( 487)				while((eOffset4 >= (int)0)){
HXLINE( 487)					Float _hx_tmp302 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)6))) );
HXDLIN( 487)					Float _hx_tmp303 = (_hx_tmp302 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)7))) ));
HXDLIN( 487)					Float _hx_tmp304 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)7))) );
HXDLIN( 487)					Float _hx_tmp305 = (_hx_tmp304 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)6))) ));
HXDLIN( 487)					HX_VARI( Float,p3) = (_hx_tmp303 - _hx_tmp305);
HXDLIN( 487)					Float _hx_tmp306 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)6))) ));
HXDLIN( 487)					Float _hx_tmp307 = (_hx_tmp306 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)6))) ));
HXDLIN( 487)					Float _hx_tmp308 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)7))) );
HXDLIN( 487)					Float _hx_tmp309 = (_hx_tmp308 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)7))) ));
HXDLIN( 487)					HX_VARI( Float,p2) = (_hx_tmp307 - _hx_tmp309);
HXDLIN( 487)					buffer->__unsafe_set(dOffset02,p3);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + (int)3),-(p3));
HXDLIN( 487)					buffer->__unsafe_set(dOffset21,p2);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + (int)3),p2);
HXDLIN( 487)					Float _hx_tmp310 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)4))) );
HXDLIN( 487)					Float _hx_tmp311 = (_hx_tmp310 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)5))) ));
HXDLIN( 487)					Float _hx_tmp312 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)5))) );
HXDLIN( 487)					Float _hx_tmp313 = (_hx_tmp312 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)4))) ));
HXDLIN( 487)					HX_VARI( Float,p1) = (_hx_tmp311 - _hx_tmp313);
HXDLIN( 487)					Float _hx_tmp314 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)4))) ));
HXDLIN( 487)					Float _hx_tmp315 = (_hx_tmp314 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)4))) ));
HXDLIN( 487)					Float _hx_tmp316 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)5))) );
HXDLIN( 487)					Float _hx_tmp317 = (_hx_tmp316 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)5))) ));
HXDLIN( 487)					HX_VARI( Float,p0) = (_hx_tmp315 - _hx_tmp317);
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + (int)1),p1);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + (int)2),-(p1));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + (int)1),p0);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + (int)2),p0);
HXDLIN( 487)					Float _hx_tmp318 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)2))) );
HXDLIN( 487)					Float _hx_tmp319 = (_hx_tmp318 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)3))) ));
HXDLIN( 487)					Float _hx_tmp320 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)3))) );
HXDLIN( 487)					Float _hx_tmp321 = (_hx_tmp320 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)2))) ));
HXDLIN( 487)					p3 = (_hx_tmp319 - _hx_tmp321);
HXDLIN( 487)					Float _hx_tmp322 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)2))) ));
HXDLIN( 487)					Float _hx_tmp323 = (_hx_tmp322 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)2))) ));
HXDLIN( 487)					Float _hx_tmp324 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)3))) );
HXDLIN( 487)					Float _hx_tmp325 = (_hx_tmp324 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)3))) ));
HXDLIN( 487)					p2 = (_hx_tmp323 - _hx_tmp325);
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + (int)2),p3);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + (int)1),-(p3));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + (int)2),p2);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + (int)1),p2);
HXDLIN( 487)					Float _hx_tmp326 = ( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) );
HXDLIN( 487)					Float _hx_tmp327 = (_hx_tmp326 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)1))) ));
HXDLIN( 487)					Float _hx_tmp328 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)1))) );
HXDLIN( 487)					Float _hx_tmp329 = (_hx_tmp328 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) ));
HXDLIN( 487)					p1 = (_hx_tmp327 - _hx_tmp329);
HXDLIN( 487)					Float _hx_tmp330 = -(( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) ));
HXDLIN( 487)					Float _hx_tmp331 = (_hx_tmp330 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) ));
HXDLIN( 487)					Float _hx_tmp332 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)1))) );
HXDLIN( 487)					Float _hx_tmp333 = (_hx_tmp332 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)1))) ));
HXDLIN( 487)					p0 = (_hx_tmp331 - _hx_tmp333);
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + (int)3),p1);
HXDLIN( 487)					buffer->__unsafe_set(dOffset12,-(p1));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + (int)3),p0);
HXDLIN( 487)					buffer->__unsafe_set(dOffset3,p0);
HXDLIN( 487)					hx::SubEq(bOffset,(int)8);
HXDLIN( 487)					hx::SubEq(eOffset4,(int)8);
HXDLIN( 487)					hx::AddEq(dOffset02,(int)4);
HXDLIN( 487)					hx::AddEq(dOffset21,(int)4);
HXDLIN( 487)					hx::SubEq(dOffset12,(int)4);
HXDLIN( 487)					hx::SubEq(dOffset3,(int)4);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,inverseMdct,(void))

 ::Dynamic VorbisDecoder_obj::decodePacket(){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","decodePacket",0xe6ace627,"kha.audio2.ogg.vorbis.VorbisDecoder.decodePacket","kha/audio2/ogg/vorbis/VorbisDecoder.hx",491,0xbe2976a1)
            	HX_STACK_THIS(this)
HXLINE( 492)		HX_VARI(  ::Dynamic,result) = this->decodeInitial();
HXLINE( 493)		Bool _hx_tmp = hx::IsNull( result );
HXDLIN( 493)		if (_hx_tmp) {
HXLINE( 494)			return null();
            		}
HXLINE( 496)		HX_VARI(  ::Dynamic,rest) = this->decodePacketRest(result);
HXLINE( 497)		return rest;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodePacket,return )

 ::Dynamic VorbisDecoder_obj::decodeInitial(){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","decodeInitial",0x7a874d05,"kha.audio2.ogg.vorbis.VorbisDecoder.decodeInitial","kha/audio2/ogg/vorbis/VorbisDecoder.hx",501,0xbe2976a1)
            	HX_STACK_THIS(this)
HXLINE( 502)		this->channelBufferStart = (this->channelBufferEnd = (int)0);
HXLINE( 504)		while(true){
HXLINE( 505)			Bool _hx_tmp = !(this->decodeState->maybeStartPacket());
HXDLIN( 505)			if (_hx_tmp) {
HXLINE( 506)				return null();
            			}
HXLINE( 510)			HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 510)			Int _hx_tmp1;
HXDLIN( 510)			Bool _hx_tmp2 = (_this->validBits < (int)0);
HXDLIN( 510)			if (_hx_tmp2) {
HXLINE( 510)				_hx_tmp1 = (int)0;
            			}
            			else {
HXLINE( 510)				Bool _hx_tmp3 = (_this->validBits < (int)1);
HXDLIN( 510)				if (_hx_tmp3) {
HXLINE( 510)					Bool _hx_tmp4 = (_this->validBits == (int)0);
HXDLIN( 510)					if (_hx_tmp4) {
HXLINE( 510)						_this->acc = (int)0;
            					}
HXDLIN( 510)					while(true){
HXLINE( 510)						Bool _hx_tmp5;
HXDLIN( 510)						Bool _hx_tmp6 = (_this->bytesInSeg == (int)0);
HXDLIN( 510)						if (_hx_tmp6) {
HXLINE( 510)							Bool _hx_tmp7 = !(_this->lastSeg);
HXDLIN( 510)							if (_hx_tmp7) {
HXLINE( 510)								Int _hx_tmp8 = _this->next();
HXDLIN( 510)								_hx_tmp5 = (_hx_tmp8 == (int)0);
            							}
            							else {
HXLINE( 510)								_hx_tmp5 = true;
            							}
            						}
            						else {
HXLINE( 510)							_hx_tmp5 = false;
            						}
HXDLIN( 510)						if (_hx_tmp5) {
HXLINE( 510)							_this->validBits = (int)-1;
HXDLIN( 510)							goto _hx_goto_40;
            						}
            						else {
HXLINE( 510)							_this->bytesInSeg--;
HXDLIN( 510)							Int a = _this->acc;
HXDLIN( 510)							hx::AddEq(_this->inputPosition,(int)1);
HXDLIN( 510)							Int _hx_tmp9 = _this->input->readByte();
HXDLIN( 510)							Int _hx_tmp10 = (a + ((int)_hx_tmp9 << (int)_this->validBits));
HXDLIN( 510)							_this->acc = _hx_tmp10;
HXDLIN( 510)							hx::AddEq(_this->validBits,(int)8);
            						}
HXDLIN( 510)						if (!((_this->validBits < (int)1))) {
HXLINE( 510)							goto _hx_goto_40;
            						}
            					}
            					_hx_goto_40:;
HXDLIN( 510)					Bool _hx_tmp11 = (_this->validBits < (int)0);
HXDLIN( 510)					if (_hx_tmp11) {
HXLINE( 510)						_hx_tmp1 = (int)0;
            					}
            					else {
HXLINE( 510)						HX_VARI( Int,z) = ((int)_this->acc & (int)(int)1);
HXDLIN( 510)						Int _hx_tmp12 = hx::UShr(_this->acc,(int)1);
HXDLIN( 510)						_this->acc = _hx_tmp12;
HXDLIN( 510)						hx::SubEq(_this->validBits,(int)1);
HXDLIN( 510)						_hx_tmp1 = z;
            					}
            				}
            				else {
HXLINE( 510)					HX_VARI_NAME( Int,z1,"z") = ((int)_this->acc & (int)(int)1);
HXDLIN( 510)					Int _hx_tmp13 = hx::UShr(_this->acc,(int)1);
HXDLIN( 510)					_this->acc = _hx_tmp13;
HXDLIN( 510)					hx::SubEq(_this->validBits,(int)1);
HXDLIN( 510)					_hx_tmp1 = z1;
            				}
            			}
HXDLIN( 510)			if ((_hx_tmp1 != (int)0)) {
HXLINE( 511)				while(true){
HXLINE( 511)					HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this1,"_this") = this->decodeState;
HXDLIN( 511)					HX_VAR( Int,x);
HXDLIN( 511)					Bool _hx_tmp14;
HXDLIN( 511)					Bool _hx_tmp15 = (_this1->bytesInSeg == (int)0);
HXDLIN( 511)					if (_hx_tmp15) {
HXLINE( 511)						Bool _hx_tmp16 = !(_this1->lastSeg);
HXDLIN( 511)						if (_hx_tmp16) {
HXLINE( 511)							Int _hx_tmp17 = _this1->next();
HXDLIN( 511)							_hx_tmp14 = (_hx_tmp17 == (int)0);
            						}
            						else {
HXLINE( 511)							_hx_tmp14 = true;
            						}
            					}
            					else {
HXLINE( 511)						_hx_tmp14 = false;
            					}
HXDLIN( 511)					if (_hx_tmp14) {
HXLINE( 511)						x = (int)-1;
            					}
            					else {
HXLINE( 511)						_this1->bytesInSeg--;
HXDLIN( 511)						hx::AddEq(_this1->inputPosition,(int)1);
HXDLIN( 511)						x = _this1->input->readByte();
            					}
HXDLIN( 511)					_this1->validBits = (int)0;
HXDLIN( 511)					if (!(((int)-1 != x))) {
HXLINE( 511)						goto _hx_goto_41;
            					}
            				}
            				_hx_goto_41:;
HXLINE( 512)				continue;
            			}
HXLINE( 514)			goto _hx_goto_39;
            		}
            		_hx_goto_39:;
HXLINE( 517)		HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this2,"_this") = this->decodeState;
HXDLIN( 517)		HX_VARI( Int,n) = (this->header->modes->length - (int)1);
HXDLIN( 517)		HX_VARI( ::Array< Int >,log2_4) = ::Array_obj< Int >::fromData( _hx_array_data_45,16);
HXDLIN( 517)		HX_VAR_NAME( Int,n1,"n");
HXDLIN( 517)		if ((n < (int)16384)) {
HXLINE( 517)			if ((n < (int)16)) {
HXLINE( 517)				n1 = log2_4->__get(n);
            			}
            			else {
HXLINE( 517)				if ((n < (int)512)) {
HXLINE( 517)					n1 = ((int)5 + log2_4->__get(((int)n >> (int)(int)5)));
            				}
            				else {
HXLINE( 517)					n1 = ((int)10 + log2_4->__get(((int)n >> (int)(int)10)));
            				}
            			}
            		}
            		else {
HXLINE( 517)			if ((n < (int)16777216)) {
HXLINE( 517)				if ((n < (int)524288)) {
HXLINE( 517)					n1 = ((int)15 + log2_4->__get(((int)n >> (int)(int)15)));
            				}
            				else {
HXLINE( 517)					n1 = ((int)20 + log2_4->__get(((int)n >> (int)(int)20)));
            				}
            			}
            			else {
HXLINE( 517)				if ((n < (int)536870912)) {
HXLINE( 517)					n1 = ((int)25 + log2_4->__get(((int)n >> (int)(int)25)));
            				}
            				else {
HXLINE( 517)					if ((n < (int)-2147483648)) {
HXLINE( 517)						n1 = ((int)30 + log2_4->__get(((int)n >> (int)(int)30)));
            					}
            					else {
HXLINE( 517)						n1 = (int)0;
            					}
            				}
            			}
            		}
HXDLIN( 517)		HX_VAR( Int,i);
HXDLIN( 517)		Bool _hx_tmp18 = (_this2->validBits < (int)0);
HXDLIN( 517)		if (_hx_tmp18) {
HXLINE( 517)			i = (int)0;
            		}
            		else {
HXLINE( 517)			Bool _hx_tmp19 = (_this2->validBits < n1);
HXDLIN( 517)			if (_hx_tmp19) {
HXLINE( 517)				if ((n1 > (int)24)) {
HXLINE( 517)					Int _hx_tmp20 = _this2->readBits((int)24);
HXDLIN( 517)					Int _hx_tmp21 = _this2->readBits((n1 - (int)24));
HXDLIN( 517)					i = (_hx_tmp20 + ((int)_hx_tmp21 << (int)(int)24));
            				}
            				else {
HXLINE( 517)					Bool _hx_tmp22 = (_this2->validBits == (int)0);
HXDLIN( 517)					if (_hx_tmp22) {
HXLINE( 517)						_this2->acc = (int)0;
            					}
HXDLIN( 517)					while(true){
HXLINE( 517)						Bool _hx_tmp23;
HXDLIN( 517)						Bool _hx_tmp24 = (_this2->bytesInSeg == (int)0);
HXDLIN( 517)						if (_hx_tmp24) {
HXLINE( 517)							Bool _hx_tmp25 = !(_this2->lastSeg);
HXDLIN( 517)							if (_hx_tmp25) {
HXLINE( 517)								Int _hx_tmp26 = _this2->next();
HXDLIN( 517)								_hx_tmp23 = (_hx_tmp26 == (int)0);
            							}
            							else {
HXLINE( 517)								_hx_tmp23 = true;
            							}
            						}
            						else {
HXLINE( 517)							_hx_tmp23 = false;
            						}
HXDLIN( 517)						if (_hx_tmp23) {
HXLINE( 517)							_this2->validBits = (int)-1;
HXDLIN( 517)							goto _hx_goto_42;
            						}
            						else {
HXLINE( 517)							_this2->bytesInSeg--;
HXDLIN( 517)							Int a1 = _this2->acc;
HXDLIN( 517)							hx::AddEq(_this2->inputPosition,(int)1);
HXDLIN( 517)							Int _hx_tmp27 = _this2->input->readByte();
HXDLIN( 517)							Int _hx_tmp28 = (a1 + ((int)_hx_tmp27 << (int)_this2->validBits));
HXDLIN( 517)							_this2->acc = _hx_tmp28;
HXDLIN( 517)							hx::AddEq(_this2->validBits,(int)8);
            						}
HXDLIN( 517)						if (!((_this2->validBits < n1))) {
HXLINE( 517)							goto _hx_goto_42;
            						}
            					}
            					_hx_goto_42:;
HXDLIN( 517)					Bool _hx_tmp29 = (_this2->validBits < (int)0);
HXDLIN( 517)					if (_hx_tmp29) {
HXLINE( 517)						i = (int)0;
            					}
            					else {
HXLINE( 517)						HX_VARI_NAME( Int,z2,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 517)						Int _hx_tmp30 = hx::UShr(_this2->acc,n1);
HXDLIN( 517)						_this2->acc = _hx_tmp30;
HXDLIN( 517)						hx::SubEq(_this2->validBits,n1);
HXDLIN( 517)						i = z2;
            					}
            				}
            			}
            			else {
HXLINE( 517)				HX_VARI_NAME( Int,z3,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 517)				Int _hx_tmp31 = hx::UShr(_this2->acc,n1);
HXDLIN( 517)				_this2->acc = _hx_tmp31;
HXDLIN( 517)				hx::SubEq(_this2->validBits,n1);
HXDLIN( 517)				i = z3;
            			}
            		}
HXLINE( 518)		Bool _hx_tmp32;
HXDLIN( 518)		if ((i != (int)-1)) {
HXLINE( 518)			_hx_tmp32 = (i >= this->header->modes->length);
            		}
            		else {
HXLINE( 518)			_hx_tmp32 = true;
            		}
HXDLIN( 518)		if (_hx_tmp32) {
HXLINE( 519)			HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),519,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("decodeInitial",f6,fc,28,f6))));
            		}
HXLINE( 522)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::Mode,m) = ( ( ::kha::audio2::ogg::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,i)) );
HXLINE( 523)		HX_VAR_NAME( Int,n2,"n");
HXDLIN( 523)		HX_VAR( Int,prev);
HXDLIN( 523)		HX_VAR( Int,next);
HXLINE( 525)		Bool _hx_tmp33 = m->blockflag;
HXDLIN( 525)		if (_hx_tmp33) {
HXLINE( 526)			n2 = this->header->blocksize1;
HXLINE( 527)			HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this3,"_this") = this->decodeState;
HXDLIN( 527)			Bool _hx_tmp34 = (_this3->validBits < (int)0);
HXDLIN( 527)			if (_hx_tmp34) {
HXLINE( 527)				prev = (int)0;
            			}
            			else {
HXLINE( 527)				Bool _hx_tmp35 = (_this3->validBits < (int)1);
HXDLIN( 527)				if (_hx_tmp35) {
HXLINE( 527)					Bool _hx_tmp36 = (_this3->validBits == (int)0);
HXDLIN( 527)					if (_hx_tmp36) {
HXLINE( 527)						_this3->acc = (int)0;
            					}
HXDLIN( 527)					while(true){
HXLINE( 527)						Bool _hx_tmp37;
HXDLIN( 527)						Bool _hx_tmp38 = (_this3->bytesInSeg == (int)0);
HXDLIN( 527)						if (_hx_tmp38) {
HXLINE( 527)							Bool _hx_tmp39 = !(_this3->lastSeg);
HXDLIN( 527)							if (_hx_tmp39) {
HXLINE( 527)								Int _hx_tmp40 = _this3->next();
HXDLIN( 527)								_hx_tmp37 = (_hx_tmp40 == (int)0);
            							}
            							else {
HXLINE( 527)								_hx_tmp37 = true;
            							}
            						}
            						else {
HXLINE( 527)							_hx_tmp37 = false;
            						}
HXDLIN( 527)						if (_hx_tmp37) {
HXLINE( 527)							_this3->validBits = (int)-1;
HXDLIN( 527)							goto _hx_goto_43;
            						}
            						else {
HXLINE( 527)							_this3->bytesInSeg--;
HXDLIN( 527)							Int a2 = _this3->acc;
HXDLIN( 527)							hx::AddEq(_this3->inputPosition,(int)1);
HXDLIN( 527)							Int _hx_tmp41 = _this3->input->readByte();
HXDLIN( 527)							Int _hx_tmp42 = (a2 + ((int)_hx_tmp41 << (int)_this3->validBits));
HXDLIN( 527)							_this3->acc = _hx_tmp42;
HXDLIN( 527)							hx::AddEq(_this3->validBits,(int)8);
            						}
HXDLIN( 527)						if (!((_this3->validBits < (int)1))) {
HXLINE( 527)							goto _hx_goto_43;
            						}
            					}
            					_hx_goto_43:;
HXDLIN( 527)					Bool _hx_tmp43 = (_this3->validBits < (int)0);
HXDLIN( 527)					if (_hx_tmp43) {
HXLINE( 527)						prev = (int)0;
            					}
            					else {
HXLINE( 527)						HX_VARI_NAME( Int,z4,"z") = ((int)_this3->acc & (int)(int)1);
HXDLIN( 527)						Int _hx_tmp44 = hx::UShr(_this3->acc,(int)1);
HXDLIN( 527)						_this3->acc = _hx_tmp44;
HXDLIN( 527)						hx::SubEq(_this3->validBits,(int)1);
HXDLIN( 527)						prev = z4;
            					}
            				}
            				else {
HXLINE( 527)					HX_VARI_NAME( Int,z5,"z") = ((int)_this3->acc & (int)(int)1);
HXDLIN( 527)					Int _hx_tmp45 = hx::UShr(_this3->acc,(int)1);
HXDLIN( 527)					_this3->acc = _hx_tmp45;
HXDLIN( 527)					hx::SubEq(_this3->validBits,(int)1);
HXDLIN( 527)					prev = z5;
            				}
            			}
HXLINE( 528)			HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this4,"_this") = this->decodeState;
HXDLIN( 528)			Bool _hx_tmp46 = (_this4->validBits < (int)0);
HXDLIN( 528)			if (_hx_tmp46) {
HXLINE( 528)				next = (int)0;
            			}
            			else {
HXLINE( 528)				Bool _hx_tmp47 = (_this4->validBits < (int)1);
HXDLIN( 528)				if (_hx_tmp47) {
HXLINE( 528)					Bool _hx_tmp48 = (_this4->validBits == (int)0);
HXDLIN( 528)					if (_hx_tmp48) {
HXLINE( 528)						_this4->acc = (int)0;
            					}
HXDLIN( 528)					while(true){
HXLINE( 528)						Bool _hx_tmp49;
HXDLIN( 528)						Bool _hx_tmp50 = (_this4->bytesInSeg == (int)0);
HXDLIN( 528)						if (_hx_tmp50) {
HXLINE( 528)							Bool _hx_tmp51 = !(_this4->lastSeg);
HXDLIN( 528)							if (_hx_tmp51) {
HXLINE( 528)								Int _hx_tmp52 = _this4->next();
HXDLIN( 528)								_hx_tmp49 = (_hx_tmp52 == (int)0);
            							}
            							else {
HXLINE( 528)								_hx_tmp49 = true;
            							}
            						}
            						else {
HXLINE( 528)							_hx_tmp49 = false;
            						}
HXDLIN( 528)						if (_hx_tmp49) {
HXLINE( 528)							_this4->validBits = (int)-1;
HXDLIN( 528)							goto _hx_goto_44;
            						}
            						else {
HXLINE( 528)							_this4->bytesInSeg--;
HXDLIN( 528)							Int a3 = _this4->acc;
HXDLIN( 528)							hx::AddEq(_this4->inputPosition,(int)1);
HXDLIN( 528)							Int _hx_tmp53 = _this4->input->readByte();
HXDLIN( 528)							Int _hx_tmp54 = (a3 + ((int)_hx_tmp53 << (int)_this4->validBits));
HXDLIN( 528)							_this4->acc = _hx_tmp54;
HXDLIN( 528)							hx::AddEq(_this4->validBits,(int)8);
            						}
HXDLIN( 528)						if (!((_this4->validBits < (int)1))) {
HXLINE( 528)							goto _hx_goto_44;
            						}
            					}
            					_hx_goto_44:;
HXDLIN( 528)					Bool _hx_tmp55 = (_this4->validBits < (int)0);
HXDLIN( 528)					if (_hx_tmp55) {
HXLINE( 528)						next = (int)0;
            					}
            					else {
HXLINE( 528)						HX_VARI_NAME( Int,z6,"z") = ((int)_this4->acc & (int)(int)1);
HXDLIN( 528)						Int _hx_tmp56 = hx::UShr(_this4->acc,(int)1);
HXDLIN( 528)						_this4->acc = _hx_tmp56;
HXDLIN( 528)						hx::SubEq(_this4->validBits,(int)1);
HXDLIN( 528)						next = z6;
            					}
            				}
            				else {
HXLINE( 528)					HX_VARI_NAME( Int,z7,"z") = ((int)_this4->acc & (int)(int)1);
HXDLIN( 528)					Int _hx_tmp57 = hx::UShr(_this4->acc,(int)1);
HXDLIN( 528)					_this4->acc = _hx_tmp57;
HXDLIN( 528)					hx::SubEq(_this4->validBits,(int)1);
HXDLIN( 528)					next = z7;
            				}
            			}
            		}
            		else {
HXLINE( 530)			next = (int)0;
HXDLIN( 530)			prev = (int)0;
HXLINE( 531)			n2 = this->header->blocksize0;
            		}
HXLINE( 535)		HX_VARI( Int,windowCenter) = ((int)n2 >> (int)(int)1);
HXLINE( 539)		 ::Dynamic _hx_tmp58;
HXDLIN( 539)		Bool _hx_tmp59;
HXDLIN( 539)		if (m->blockflag) {
HXLINE( 539)			_hx_tmp59 = (prev == (int)0);
            		}
            		else {
HXLINE( 539)			_hx_tmp59 = false;
            		}
HXDLIN( 539)		if (_hx_tmp59) {
HXLINE( 539)			_hx_tmp58 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),((int)(n2 - this->header->blocksize0) >> (int)(int)2))
            				->setFixed(1,HX_("end",db,03,4d,00),((int)(n2 + this->header->blocksize0) >> (int)(int)2)));
            		}
            		else {
HXLINE( 539)			_hx_tmp58 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),(int)0)
            				->setFixed(1,HX_("end",db,03,4d,00),windowCenter));
            		}
HXLINE( 546)		 ::Dynamic _hx_tmp60;
HXDLIN( 546)		Bool _hx_tmp61;
HXDLIN( 546)		if (m->blockflag) {
HXLINE( 546)			_hx_tmp61 = (next == (int)0);
            		}
            		else {
HXLINE( 546)			_hx_tmp61 = false;
            		}
HXDLIN( 546)		if (_hx_tmp61) {
HXLINE( 546)			_hx_tmp60 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),((int)((n2 * (int)3) - this->header->blocksize0) >> (int)(int)2))
            				->setFixed(1,HX_("end",db,03,4d,00),((int)((n2 * (int)3) + this->header->blocksize0) >> (int)(int)2)));
            		}
            		else {
HXLINE( 546)			_hx_tmp60 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),windowCenter)
            				->setFixed(1,HX_("end",db,03,4d,00),n2));
            		}
HXLINE( 537)		return  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("right",dc,0b,64,e9),_hx_tmp60)
            			->setFixed(1,HX_("left",07,08,b0,47),_hx_tmp58)
            			->setFixed(2,HX_("mode",63,d3,60,48),i));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodeInitial,return )

 ::Dynamic VorbisDecoder_obj::decodePacketRest( ::Dynamic r){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","decodePacketRest",0x81390cdb,"kha.audio2.ogg.vorbis.VorbisDecoder.decodePacketRest","kha/audio2/ogg/vorbis/VorbisDecoder.hx",558,0xbe2976a1)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
HXLINE( 560)		Int index = ( (Int)(r->__Field(HX_("mode",63,d3,60,48),hx::paccDynamic)) );
HXDLIN( 560)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::Mode,m) = ( ( ::kha::audio2::ogg::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,index)) );
HXLINE( 562)		HX_VARI_NAME( ::Array< Bool >,this1,"this") = ::Array_obj< Bool >::__new();
HXDLIN( 562)		_hx_array_set_size_exact(this1,(int)256);
HXDLIN( 562)		HX_VARI( ::Array< Bool >,zeroChannel) = this1;
HXLINE( 563)		HX_VARI_NAME( ::Array< Bool >,this2,"this") = ::Array_obj< Bool >::__new();
HXDLIN( 563)		_hx_array_set_size_exact(this2,(int)256);
HXDLIN( 563)		HX_VARI( ::Array< Bool >,reallyZeroChannel) = this2;
HXLINE( 567)		HX_VAR( Int,n);
HXDLIN( 567)		if (m->blockflag) {
HXLINE( 567)			n = this->header->blocksize1;
            		}
            		else {
HXLINE( 567)			n = this->header->blocksize0;
            		}
HXLINE( 568)		Int index1 = m->mapping;
HXDLIN( 568)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::Mapping,map) = ( ( ::kha::audio2::ogg::vorbis::data::Mapping)(_hx_array_unsafe_get(this->header->mapping,index1)) );
HXLINE( 571)		HX_VARI( Int,n2) = ((int)n >> (int)(int)1);
HXLINE( 573)		HX_VARI( ::Array< Int >,rangeList) = ::Array_obj< Int >::fromData( _hx_array_data_64,4);
HXLINE( 574)		HX_VARI( ::Array< ::Dynamic>,codebooks) = this->header->codebooks;
HXLINE( 576)		{
HXLINE( 576)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 576)			HX_VARI( Int,_g) = this->header->channel;
HXDLIN( 576)			while((_g1 < _g)){
HXLINE( 576)				HX_VARI( Int,i) = _g1++;
HXLINE( 577)				HX_VARI( Int,s) = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i)) )->mux;
HXLINE( 578)				zeroChannel->__unsafe_set(i,false);
HXLINE( 579)				Int index2 = ( (Int)(_hx_array_unsafe_get(map->submapFloor,s)) );
HXDLIN( 579)				HX_VARI(  ::kha::audio2::ogg::vorbis::data::Floor,floor) = ( ( ::kha::audio2::ogg::vorbis::data::Floor)(_hx_array_unsafe_get(this->header->floorConfig,index2)) );
HXLINE( 580)				Bool _hx_tmp = (floor->type == (int)0);
HXDLIN( 580)				if (_hx_tmp) {
HXLINE( 581)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__new(::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::INVALID_STREAM_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),581,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("decodePacketRest",8a,29,db,8b))));
            				}
            				else {
HXLINE( 583)					HX_VARI(  ::kha::audio2::ogg::vorbis::data::Floor1,g) = floor->floor1;
HXLINE( 584)					HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 584)					Int _hx_tmp1;
HXDLIN( 584)					Bool _hx_tmp2 = (_this->validBits < (int)0);
HXDLIN( 584)					if (_hx_tmp2) {
HXLINE( 584)						_hx_tmp1 = (int)0;
            					}
            					else {
HXLINE( 584)						Bool _hx_tmp3 = (_this->validBits < (int)1);
HXDLIN( 584)						if (_hx_tmp3) {
HXLINE( 584)							Bool _hx_tmp4 = (_this->validBits == (int)0);
HXDLIN( 584)							if (_hx_tmp4) {
HXLINE( 584)								_this->acc = (int)0;
            							}
HXDLIN( 584)							while(true){
HXLINE( 584)								Bool _hx_tmp5;
HXDLIN( 584)								Bool _hx_tmp6 = (_this->bytesInSeg == (int)0);
HXDLIN( 584)								if (_hx_tmp6) {
HXLINE( 584)									Bool _hx_tmp7 = !(_this->lastSeg);
HXDLIN( 584)									if (_hx_tmp7) {
HXLINE( 584)										Int _hx_tmp8 = _this->next();
HXDLIN( 584)										_hx_tmp5 = (_hx_tmp8 == (int)0);
            									}
            									else {
HXLINE( 584)										_hx_tmp5 = true;
            									}
            								}
            								else {
HXLINE( 584)									_hx_tmp5 = false;
            								}
HXDLIN( 584)								if (_hx_tmp5) {
HXLINE( 584)									_this->validBits = (int)-1;
HXDLIN( 584)									goto _hx_goto_47;
            								}
            								else {
HXLINE( 584)									_this->bytesInSeg--;
HXDLIN( 584)									Int a = _this->acc;
HXDLIN( 584)									hx::AddEq(_this->inputPosition,(int)1);
HXDLIN( 584)									Int _hx_tmp9 = _this->input->readByte();
HXDLIN( 584)									Int _hx_tmp10 = (a + ((int)_hx_tmp9 << (int)_this->validBits));
HXDLIN( 584)									_this->acc = _hx_tmp10;
HXDLIN( 584)									hx::AddEq(_this->validBits,(int)8);
            								}
HXDLIN( 584)								if (!((_this->validBits < (int)1))) {
HXLINE( 584)									goto _hx_goto_47;
            								}
            							}
            							_hx_goto_47:;
HXDLIN( 584)							Bool _hx_tmp11 = (_this->validBits < (int)0);
HXDLIN( 584)							if (_hx_tmp11) {
HXLINE( 584)								_hx_tmp1 = (int)0;
            							}
            							else {
HXLINE( 584)								HX_VARI( Int,z) = ((int)_this->acc & (int)(int)1);
HXDLIN( 584)								Int _hx_tmp12 = hx::UShr(_this->acc,(int)1);
HXDLIN( 584)								_this->acc = _hx_tmp12;
HXDLIN( 584)								hx::SubEq(_this->validBits,(int)1);
HXDLIN( 584)								_hx_tmp1 = z;
            							}
            						}
            						else {
HXLINE( 584)							HX_VARI_NAME( Int,z1,"z") = ((int)_this->acc & (int)(int)1);
HXDLIN( 584)							Int _hx_tmp13 = hx::UShr(_this->acc,(int)1);
HXDLIN( 584)							_this->acc = _hx_tmp13;
HXDLIN( 584)							hx::SubEq(_this->validBits,(int)1);
HXDLIN( 584)							_hx_tmp1 = z1;
            						}
            					}
HXDLIN( 584)					if ((_hx_tmp1 != (int)0)) {
HXLINE( 585)						HX_VARI( ::Array< Int >,fy) = ::Array_obj< Int >::__new();
HXLINE( 586)						HX_VARI_NAME( ::Array< Bool >,this3,"this") = ::Array_obj< Bool >::__new();
HXDLIN( 586)						_hx_array_set_size_exact(this3,(int)256);
HXDLIN( 586)						HX_VARI( ::Array< Bool >,step2Flag) = this3;
HXLINE( 587)						HX_VARI( Int,range) = rangeList->__get((g->floor1Multiplier - (int)1));
HXLINE( 588)						HX_VARI( Int,offset) = (int)2;
HXLINE( 589)						fy = ( (::Array< Int >)(_hx_array_unsafe_get(this->finalY,i)) );
HXLINE( 590)						HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this1,"_this") = this->decodeState;
HXDLIN( 590)						HX_VARI( ::Array< Int >,log2_4) = ::Array_obj< Int >::fromData( _hx_array_data_65,16);
HXDLIN( 590)						Int _hx_tmp14;
HXDLIN( 590)						if ((range < (int)16384)) {
HXLINE( 590)							if ((range < (int)16)) {
HXLINE( 590)								_hx_tmp14 = log2_4->__get(range);
            							}
            							else {
HXLINE( 590)								if ((range < (int)512)) {
HXLINE( 590)									_hx_tmp14 = ((int)5 + log2_4->__get(((int)range >> (int)(int)5)));
            								}
            								else {
HXLINE( 590)									_hx_tmp14 = ((int)10 + log2_4->__get(((int)range >> (int)(int)10)));
            								}
            							}
            						}
            						else {
HXLINE( 590)							if ((range < (int)16777216)) {
HXLINE( 590)								if ((range < (int)524288)) {
HXLINE( 590)									_hx_tmp14 = ((int)15 + log2_4->__get(((int)range >> (int)(int)15)));
            								}
            								else {
HXLINE( 590)									_hx_tmp14 = ((int)20 + log2_4->__get(((int)range >> (int)(int)20)));
            								}
            							}
            							else {
HXLINE( 590)								if ((range < (int)536870912)) {
HXLINE( 590)									_hx_tmp14 = ((int)25 + log2_4->__get(((int)range >> (int)(int)25)));
            								}
            								else {
HXLINE( 590)									if ((range < (int)-2147483648)) {
HXLINE( 590)										_hx_tmp14 = ((int)30 + log2_4->__get(((int)range >> (int)(int)30)));
            									}
            									else {
HXLINE( 590)										_hx_tmp14 = (int)0;
            									}
            								}
            							}
            						}
HXDLIN( 590)						HX_VARI_NAME( Int,n1,"n") = (_hx_tmp14 - (int)1);
HXDLIN( 590)						Int _hx_tmp15;
HXDLIN( 590)						Bool _hx_tmp16 = (_this1->validBits < (int)0);
HXDLIN( 590)						if (_hx_tmp16) {
HXLINE( 590)							_hx_tmp15 = (int)0;
            						}
            						else {
HXLINE( 590)							Bool _hx_tmp17 = (_this1->validBits < n1);
HXDLIN( 590)							if (_hx_tmp17) {
HXLINE( 590)								if ((n1 > (int)24)) {
HXLINE( 590)									Int _hx_tmp18 = _this1->readBits((int)24);
HXDLIN( 590)									Int _hx_tmp19 = _this1->readBits((n1 - (int)24));
HXDLIN( 590)									_hx_tmp15 = (_hx_tmp18 + ((int)_hx_tmp19 << (int)(int)24));
            								}
            								else {
HXLINE( 590)									Bool _hx_tmp20 = (_this1->validBits == (int)0);
HXDLIN( 590)									if (_hx_tmp20) {
HXLINE( 590)										_this1->acc = (int)0;
            									}
HXDLIN( 590)									while(true){
HXLINE( 590)										Bool _hx_tmp21;
HXDLIN( 590)										Bool _hx_tmp22 = (_this1->bytesInSeg == (int)0);
HXDLIN( 590)										if (_hx_tmp22) {
HXLINE( 590)											Bool _hx_tmp23 = !(_this1->lastSeg);
HXDLIN( 590)											if (_hx_tmp23) {
HXLINE( 590)												Int _hx_tmp24 = _this1->next();
HXDLIN( 590)												_hx_tmp21 = (_hx_tmp24 == (int)0);
            											}
            											else {
HXLINE( 590)												_hx_tmp21 = true;
            											}
            										}
            										else {
HXLINE( 590)											_hx_tmp21 = false;
            										}
HXDLIN( 590)										if (_hx_tmp21) {
HXLINE( 590)											_this1->validBits = (int)-1;
HXDLIN( 590)											goto _hx_goto_48;
            										}
            										else {
HXLINE( 590)											_this1->bytesInSeg--;
HXDLIN( 590)											Int a1 = _this1->acc;
HXDLIN( 590)											hx::AddEq(_this1->inputPosition,(int)1);
HXDLIN( 590)											Int _hx_tmp25 = _this1->input->readByte();
HXDLIN( 590)											Int _hx_tmp26 = (a1 + ((int)_hx_tmp25 << (int)_this1->validBits));
HXDLIN( 590)											_this1->acc = _hx_tmp26;
HXDLIN( 590)											hx::AddEq(_this1->validBits,(int)8);
            										}
HXDLIN( 590)										if (!((_this1->validBits < n1))) {
HXLINE( 590)											goto _hx_goto_48;
            										}
            									}
            									_hx_goto_48:;
HXDLIN( 590)									Bool _hx_tmp27 = (_this1->validBits < (int)0);
HXDLIN( 590)									if (_hx_tmp27) {
HXLINE( 590)										_hx_tmp15 = (int)0;
            									}
            									else {
HXLINE( 590)										HX_VARI_NAME( Int,z2,"z") = ((int)_this1->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 590)										Int _hx_tmp28 = hx::UShr(_this1->acc,n1);
HXDLIN( 590)										_this1->acc = _hx_tmp28;
HXDLIN( 590)										hx::SubEq(_this1->validBits,n1);
HXDLIN( 590)										_hx_tmp15 = z2;
            									}
            								}
            							}
            							else {
HXLINE( 590)								HX_VARI_NAME( Int,z3,"z") = ((int)_this1->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 590)								Int _hx_tmp29 = hx::UShr(_this1->acc,n1);
HXDLIN( 590)								_this1->acc = _hx_tmp29;
HXDLIN( 590)								hx::SubEq(_this1->validBits,n1);
HXDLIN( 590)								_hx_tmp15 = z3;
            							}
            						}
HXDLIN( 590)						fy[(int)0] = _hx_tmp15;
HXLINE( 591)						HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this2,"_this") = this->decodeState;
HXDLIN( 591)						HX_VARI_NAME( ::Array< Int >,log2_41,"log2_4") = ::Array_obj< Int >::fromData( _hx_array_data_66,16);
HXDLIN( 591)						Int _hx_tmp30;
HXDLIN( 591)						if ((range < (int)16384)) {
HXLINE( 591)							if ((range < (int)16)) {
HXLINE( 591)								_hx_tmp30 = log2_41->__get(range);
            							}
            							else {
HXLINE( 591)								if ((range < (int)512)) {
HXLINE( 591)									_hx_tmp30 = ((int)5 + log2_41->__get(((int)range >> (int)(int)5)));
            								}
            								else {
HXLINE( 591)									_hx_tmp30 = ((int)10 + log2_41->__get(((int)range >> (int)(int)10)));
            								}
            							}
            						}
            						else {
HXLINE( 591)							if ((range < (int)16777216)) {
HXLINE( 591)								if ((range < (int)524288)) {
HXLINE( 591)									_hx_tmp30 = ((int)15 + log2_41->__get(((int)range >> (int)(int)15)));
            								}
            								else {
HXLINE( 591)									_hx_tmp30 = ((int)20 + log2_41->__get(((int)range >> (int)(int)20)));
            								}
            							}
            							else {
HXLINE( 591)								if ((range < (int)536870912)) {
HXLINE( 591)									_hx_tmp30 = ((int)25 + log2_41->__get(((int)range >> (int)(int)25)));
            								}
            								else {
HXLINE( 591)									if ((range < (int)-2147483648)) {
HXLINE( 591)										_hx_tmp30 = ((int)30 + log2_41->__get(((int)range >> (int)(int)30)));
            									}
            									else {
HXLINE( 591)										_hx_tmp30 = (int)0;
            									}
            								}
            							}
            						}
HXDLIN( 591)						HX_VARI_NAME( Int,n3,"n") = (_hx_tmp30 - (int)1);
HXDLIN( 591)						Int _hx_tmp31;
HXDLIN( 591)						Bool _hx_tmp32 = (_this2->validBits < (int)0);
HXDLIN( 591)						if (_hx_tmp32) {
HXLINE( 591)							_hx_tmp31 = (int)0;
            						}
            						else {
HXLINE( 591)							Bool _hx_tmp33 = (_this2->validBits < n3);
HXDLIN( 591)							if (_hx_tmp33) {
HXLINE( 591)								if ((n3 > (int)24)) {
HXLINE( 591)									Int _hx_tmp34 = _this2->readBits((int)24);
HXDLIN( 591)									Int _hx_tmp35 = _this2->readBits((n3 - (int)24));
HXDLIN( 591)									_hx_tmp31 = (_hx_tmp34 + ((int)_hx_tmp35 << (int)(int)24));
            								}
            								else {
HXLINE( 591)									Bool _hx_tmp36 = (_this2->validBits == (int)0);
HXDLIN( 591)									if (_hx_tmp36) {
HXLINE( 591)										_this2->acc = (int)0;
            									}
HXDLIN( 591)									while(true){
HXLINE( 591)										Bool _hx_tmp37;
HXDLIN( 591)										Bool _hx_tmp38 = (_this2->bytesInSeg == (int)0);
HXDLIN( 591)										if (_hx_tmp38) {
HXLINE( 591)											Bool _hx_tmp39 = !(_this2->lastSeg);
HXDLIN( 591)											if (_hx_tmp39) {
HXLINE( 591)												Int _hx_tmp40 = _this2->next();
HXDLIN( 591)												_hx_tmp37 = (_hx_tmp40 == (int)0);
            											}
            											else {
HXLINE( 591)												_hx_tmp37 = true;
            											}
            										}
            										else {
HXLINE( 591)											_hx_tmp37 = false;
            										}
HXDLIN( 591)										if (_hx_tmp37) {
HXLINE( 591)											_this2->validBits = (int)-1;
HXDLIN( 591)											goto _hx_goto_49;
            										}
            										else {
HXLINE( 591)											_this2->bytesInSeg--;
HXDLIN( 591)											Int a2 = _this2->acc;
HXDLIN( 591)											hx::AddEq(_this2->inputPosition,(int)1);
HXDLIN( 591)											Int _hx_tmp41 = _this2->input->readByte();
HXDLIN( 591)											Int _hx_tmp42 = (a2 + ((int)_hx_tmp41 << (int)_this2->validBits));
HXDLIN( 591)											_this2->acc = _hx_tmp42;
HXDLIN( 591)											hx::AddEq(_this2->validBits,(int)8);
            										}
HXDLIN( 591)										if (!((_this2->validBits < n3))) {
HXLINE( 591)											goto _hx_goto_49;
            										}
            									}
            									_hx_goto_49:;
HXDLIN( 591)									Bool _hx_tmp43 = (_this2->validBits < (int)0);
HXDLIN( 591)									if (_hx_tmp43) {
HXLINE( 591)										_hx_tmp31 = (int)0;
            									}
            									else {
HXLINE( 591)										HX_VARI_NAME( Int,z4,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n3) - (int)1));
HXDLIN( 591)										Int _hx_tmp44 = hx::UShr(_this2->acc,n3);
HXDLIN( 591)										_this2->acc = _hx_tmp44;
HXDLIN( 591)										hx::SubEq(_this2->validBits,n3);
HXDLIN( 591)										_hx_tmp31 = z4;
            									}
            								}
            							}
            							else {
HXLINE( 591)								HX_VARI_NAME( Int,z5,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n3) - (int)1));
HXDLIN( 591)								Int _hx_tmp45 = hx::UShr(_this2->acc,n3);
HXDLIN( 591)								_this2->acc = _hx_tmp45;
HXDLIN( 591)								hx::SubEq(_this2->validBits,n3);
HXDLIN( 591)								_hx_tmp31 = z5;
            							}
            						}
HXDLIN( 591)						fy[(int)1] = _hx_tmp31;
HXLINE( 592)						{
HXLINE( 592)							HX_VARI( Int,_g3) = (int)0;
HXDLIN( 592)							HX_VARI( Int,_g2) = g->partitions;
HXDLIN( 592)							while((_g3 < _g2)){
HXLINE( 592)								HX_VARI( Int,j) = _g3++;
HXLINE( 593)								HX_VARI( Int,pclass) = ( (Int)(_hx_array_unsafe_get(g->partitionClassList,j)) );
HXLINE( 594)								HX_VARI( Int,cdim) = ( (Int)(_hx_array_unsafe_get(g->classDimensions,pclass)) );
HXLINE( 595)								HX_VARI( Int,cbits) = ( (Int)(_hx_array_unsafe_get(g->classSubclasses,pclass)) );
HXLINE( 596)								HX_VARI( Int,csub) = (((int)(int)1 << (int)cbits) - (int)1);
HXLINE( 597)								HX_VARI( Int,cval) = (int)0;
HXLINE( 598)								if ((cbits != (int)0)) {
HXLINE( 599)									Int index3 = ( (Int)(_hx_array_unsafe_get(g->classMasterbooks,pclass)) );
HXDLIN( 599)									HX_VARI(  ::kha::audio2::ogg::vorbis::data::Codebook,c) = ( ( ::kha::audio2::ogg::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,index3)) );
HXLINE( 600)									HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this3,"_this") = this->decodeState;
HXDLIN( 600)									Bool _hx_tmp46 = (_this3->validBits < (int)10);
HXDLIN( 600)									if (_hx_tmp46) {
HXLINE( 600)										_this3->prepHuffman();
            									}
HXDLIN( 600)									Int index4 = ((int)_this3->acc & (int)(int)1023);
HXDLIN( 600)									HX_VARI_NAME( Int,i1,"i") = ( (Int)(_hx_array_unsafe_get(c->fastHuffman,index4)) );
HXDLIN( 600)									HX_VAR( Int,val);
HXDLIN( 600)									if ((i1 >= (int)0)) {
HXLINE( 600)										HX_VARI( Int,l) = ( (Int)(_hx_array_unsafe_get(c->codewordLengths,i1)) );
HXDLIN( 600)										Int _hx_tmp47 = hx::UShr(_this3->acc,l);
HXDLIN( 600)										_this3->acc = _hx_tmp47;
HXDLIN( 600)										hx::SubEq(_this3->validBits,l);
HXDLIN( 600)										Bool _hx_tmp48 = (_this3->validBits < (int)0);
HXDLIN( 600)										if (_hx_tmp48) {
HXLINE( 600)											_this3->validBits = (int)0;
HXDLIN( 600)											val = (int)-1;
            										}
            										else {
HXLINE( 600)											val = i1;
            										}
            									}
            									else {
HXLINE( 600)										val = _this3->decodeScalarRaw(c);
            									}
HXDLIN( 600)									Bool _hx_tmp49 = c->sparse;
HXDLIN( 600)									if (_hx_tmp49) {
HXLINE( 600)										val = ( (Int)(_hx_array_unsafe_get(c->sortedValues,val)) );
            									}
HXDLIN( 600)									cval = val;
            								}
HXLINE( 603)								HX_VARI( ::Array< Int >,books) = ( (::Array< Int >)(_hx_array_unsafe_get(g->subclassBooks,pclass)) );
HXLINE( 604)								{
HXLINE( 604)									HX_VARI( Int,_g5) = (int)0;
HXDLIN( 604)									while((_g5 < cdim)){
HXLINE( 604)										++_g5;
HXLINE( 605)										HX_VARI( Int,book) = ( (Int)(_hx_array_unsafe_get(books,((int)cval & (int)csub))) );
HXLINE( 606)										hx::ShrEq(cval,cbits);
HXLINE( 607)										Int _hx_tmp50 = offset++;
HXDLIN( 607)										Int _hx_tmp51;
HXDLIN( 607)										if ((book >= (int)0)) {
HXLINE( 608)											HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this4,"_this") = this->decodeState;
HXDLIN( 608)											HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::data::Codebook,c1,"c") = ( ( ::kha::audio2::ogg::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,book)) );
HXDLIN( 608)											Bool _hx_tmp52 = (_this4->validBits < (int)10);
HXDLIN( 608)											if (_hx_tmp52) {
HXLINE( 608)												_this4->prepHuffman();
            											}
HXDLIN( 608)											Int index5 = ((int)_this4->acc & (int)(int)1023);
HXDLIN( 608)											HX_VARI_NAME( Int,i2,"i") = ( (Int)(_hx_array_unsafe_get(c1->fastHuffman,index5)) );
HXDLIN( 608)											HX_VAR_NAME( Int,val1,"val");
HXDLIN( 608)											if ((i2 >= (int)0)) {
HXLINE( 608)												HX_VARI_NAME( Int,l1,"l") = ( (Int)(_hx_array_unsafe_get(c1->codewordLengths,i2)) );
HXDLIN( 608)												Int _hx_tmp53 = hx::UShr(_this4->acc,l1);
HXDLIN( 608)												_this4->acc = _hx_tmp53;
HXDLIN( 608)												hx::SubEq(_this4->validBits,l1);
HXDLIN( 608)												Bool _hx_tmp54 = (_this4->validBits < (int)0);
HXDLIN( 608)												if (_hx_tmp54) {
HXLINE( 608)													_this4->validBits = (int)0;
HXDLIN( 608)													val1 = (int)-1;
            												}
            												else {
HXLINE( 608)													val1 = i2;
            												}
            											}
            											else {
HXLINE( 608)												val1 = _this4->decodeScalarRaw(c1);
            											}
HXDLIN( 608)											Bool _hx_tmp55 = c1->sparse;
HXDLIN( 608)											if (_hx_tmp55) {
HXLINE( 608)												val1 = ( (Int)(_hx_array_unsafe_get(c1->sortedValues,val1)) );
            											}
HXLINE( 607)											_hx_tmp51 = val1;
            										}
            										else {
HXLINE( 607)											_hx_tmp51 = (int)0;
            										}
HXDLIN( 607)										fy[_hx_tmp50] = _hx_tmp51;
            									}
            								}
            							}
            						}
HXLINE( 615)						Bool _hx_tmp56 = (this->decodeState->validBits == (int)-1);
HXDLIN( 615)						if (_hx_tmp56) {
HXLINE( 616)							zeroChannel->__unsafe_set(i,true);
HXLINE( 617)							continue;
            						}
HXLINE( 620)						{
HXLINE( 620)							Bool val2 = ( (Bool)(step2Flag->__unsafe_set((int)1,true)) );
HXDLIN( 620)							step2Flag->__unsafe_set((int)0,val2);
            						}
HXLINE( 621)						HX_VARI( ::Array< ::Dynamic>,naighbors) = g->neighbors;
HXLINE( 622)						HX_VARI( ::Array< Int >,xlist) = g->xlist;
HXLINE( 623)						{
HXLINE( 623)							HX_VARI_NAME( Int,_g31,"_g3") = (int)2;
HXDLIN( 623)							HX_VARI_NAME( Int,_g21,"_g2") = g->values;
HXDLIN( 623)							while((_g31 < _g21)){
HXLINE( 623)								HX_VARI_NAME( Int,j1,"j") = _g31++;
HXLINE( 624)								::Array< Int > this4 = ( (::Array< Int >)(_hx_array_unsafe_get(naighbors,j1)) );
HXDLIN( 624)								HX_VARI( Int,low) = ( (Int)(_hx_array_unsafe_get(this4,(int)0)) );
HXLINE( 625)								::Array< Int > this5 = ( (::Array< Int >)(_hx_array_unsafe_get(naighbors,j1)) );
HXDLIN( 625)								HX_VARI( Int,high) = ( (Int)(_hx_array_unsafe_get(this5,(int)1)) );
HXLINE( 626)								Int x = ( (Int)(_hx_array_unsafe_get(xlist,j1)) );
HXDLIN( 626)								HX_VARI( Int,x0) = ( (Int)(_hx_array_unsafe_get(xlist,low)) );
HXDLIN( 626)								Int x1 = ( (Int)(_hx_array_unsafe_get(xlist,high)) );
HXDLIN( 626)								HX_VARI( Int,y0) = fy->__get(low);
HXDLIN( 626)								HX_VARI( Int,dy) = (fy->__get(high) - y0);
HXDLIN( 626)								HX_VARI( Int,adx) = (x1 - x0);
HXDLIN( 626)								Float _hx_tmp57 = ::Math_obj::abs(dy);
HXDLIN( 626)								HX_VARI( Int,off) = ::Std_obj::_hx_int(((Float)(_hx_tmp57 * (x - x0)) / (Float)adx));
HXDLIN( 626)								HX_VAR( Int,lowroom);
HXDLIN( 626)								if ((dy < (int)0)) {
HXLINE( 626)									lowroom = (y0 - off);
            								}
            								else {
HXLINE( 626)									lowroom = (y0 + off);
            								}
HXLINE( 627)								HX_VARI_NAME( Int,val3,"val") = fy->__get(j1);
HXLINE( 628)								HX_VARI( Int,highroom) = (range - lowroom);
HXLINE( 629)								HX_VAR( Int,room);
HXDLIN( 629)								if ((highroom < lowroom)) {
HXLINE( 629)									room = (highroom * (int)2);
            								}
            								else {
HXLINE( 629)									room = (lowroom * (int)2);
            								}
HXLINE( 634)								if ((val3 != (int)0)) {
HXLINE( 635)									{
HXLINE( 635)										Bool val4 = ( (Bool)(step2Flag->__unsafe_set(high,true)) );
HXDLIN( 635)										step2Flag->__unsafe_set(low,val4);
            									}
HXLINE( 636)									step2Flag->__unsafe_set(j1,true);
HXLINE( 637)									if ((val3 >= room)) {
HXLINE( 638)										if ((highroom > lowroom)) {
HXLINE( 639)											fy[j1] = ((val3 - lowroom) + lowroom);
            										}
            										else {
HXLINE( 641)											fy[j1] = (((lowroom - val3) + highroom) - (int)1);
            										}
            									}
            									else {
HXLINE( 644)										if ((((int)val3 & (int)(int)1) != (int)0)) {
HXLINE( 645)											fy[j1] = (lowroom - ((int)(val3 + (int)1) >> (int)(int)1));
            										}
            										else {
HXLINE( 647)											fy[j1] = (lowroom + ((int)val3 >> (int)(int)1));
            										}
            									}
            								}
            								else {
HXLINE( 651)									step2Flag->__unsafe_set(j1,false);
HXLINE( 652)									fy[j1] = lowroom;
            								}
            							}
            						}
HXLINE( 657)						{
HXLINE( 657)							HX_VARI_NAME( Int,_g32,"_g3") = (int)0;
HXDLIN( 657)							HX_VARI_NAME( Int,_g22,"_g2") = g->values;
HXDLIN( 657)							while((_g32 < _g22)){
HXLINE( 657)								HX_VARI_NAME( Int,j2,"j") = _g32++;
HXLINE( 658)								Bool _hx_tmp58 = !(( (Bool)(_hx_array_unsafe_get(step2Flag,j2)) ));
HXDLIN( 658)								if (_hx_tmp58) {
HXLINE( 659)									fy[j2] = (int)-1;
            								}
            							}
            						}
            					}
            					else {
HXLINE( 664)						zeroChannel->__unsafe_set(i,true);
            					}
            				}
            			}
            		}
HXLINE( 678)		{
HXLINE( 678)			HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN( 678)			HX_VARI_NAME( Int,_g4,"_g") = this->header->channel;
HXDLIN( 678)			while((_g11 < _g4)){
HXLINE( 678)				HX_VARI_NAME( Int,i3,"i") = _g11++;
HXLINE( 679)				{
HXLINE( 679)					Bool val5 = ( (Bool)(_hx_array_unsafe_get(zeroChannel,i3)) );
HXDLIN( 679)					reallyZeroChannel->__unsafe_set(i3,val5);
            				}
            			}
            		}
HXLINE( 681)		{
HXLINE( 681)			HX_VARI_NAME( Int,_g12,"_g1") = (int)0;
HXDLIN( 681)			HX_VARI_NAME( Int,_g6,"_g") = map->couplingSteps;
HXDLIN( 681)			while((_g12 < _g6)){
HXLINE( 681)				HX_VARI_NAME( Int,i4,"i") = _g12++;
HXLINE( 682)				Bool _hx_tmp59;
HXDLIN( 682)				Int index6 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude;
HXDLIN( 682)				Bool _hx_tmp60 = ( (Bool)(_hx_array_unsafe_get(zeroChannel,index6)) );
HXDLIN( 682)				if (!(!(_hx_tmp60))) {
HXLINE( 682)					Int index7 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle;
HXDLIN( 682)					Bool _hx_tmp61 = ( (Bool)(_hx_array_unsafe_get(zeroChannel,index7)) );
HXDLIN( 682)					_hx_tmp59 = !(_hx_tmp61);
            				}
            				else {
HXLINE( 682)					_hx_tmp59 = true;
            				}
HXDLIN( 682)				if (_hx_tmp59) {
HXLINE( 683)					Int index8 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude;
HXDLIN( 683)					Int index9 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle;
HXDLIN( 683)					Bool val6 = ( (Bool)(zeroChannel->__unsafe_set(index9,false)) );
HXDLIN( 683)					zeroChannel->__unsafe_set(index8,val6);
            				}
            			}
            		}
HXLINE( 687)		{
HXLINE( 687)			HX_VARI_NAME( Int,_g13,"_g1") = (int)0;
HXDLIN( 687)			HX_VARI_NAME( Int,_g7,"_g") = map->submaps;
HXDLIN( 687)			while((_g13 < _g7)){
HXLINE( 687)				HX_VARI_NAME( Int,i5,"i") = _g13++;
HXLINE( 688)				Int length = this->header->channel;
HXDLIN( 688)				HX_VARI_NAME( ::Array< ::Dynamic>,this6,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN( 688)				_hx_array_set_size_exact(this6,length);
HXDLIN( 688)				HX_VARI( ::Array< ::Dynamic>,residueBuffers) = this6;
HXLINE( 689)				HX_VARI_NAME( ::Array< Bool >,this7,"this") = ::Array_obj< Bool >::__new();
HXDLIN( 689)				_hx_array_set_size_exact(this7,(int)256);
HXDLIN( 689)				HX_VARI( ::Array< Bool >,doNotDecode) = this7;
HXLINE( 690)				HX_VARI( Int,ch) = (int)0;
HXLINE( 691)				{
HXLINE( 691)					HX_VARI_NAME( Int,_g33,"_g3") = (int)0;
HXDLIN( 691)					HX_VARI_NAME( Int,_g23,"_g2") = this->header->channel;
HXDLIN( 691)					while((_g33 < _g23)){
HXLINE( 691)						HX_VARI_NAME( Int,j3,"j") = _g33++;
HXLINE( 693)						Bool _hx_tmp62 = (( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,j3)) )->mux == i5);
HXDLIN( 693)						if (_hx_tmp62) {
HXLINE( 694)							Bool _hx_tmp63 = ( (Bool)(_hx_array_unsafe_get(zeroChannel,j3)) );
HXDLIN( 694)							if (_hx_tmp63) {
HXLINE( 695)								doNotDecode->__unsafe_set(ch,true);
HXLINE( 696)								residueBuffers->__unsafe_set(ch,null());
            							}
            							else {
HXLINE( 698)								doNotDecode->__unsafe_set(ch,false);
HXLINE( 699)								{
HXLINE( 699)									::Array< Float > val7 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,j3)) );
HXDLIN( 699)									residueBuffers->__unsafe_set(ch,val7);
            								}
            							}
HXLINE( 701)							++ch;
            						}
            					}
            				}
HXLINE( 705)				HX_VARI_NAME( Int,r1,"r") = ( (Int)(_hx_array_unsafe_get(map->submapResidue,i5)) );
HXLINE( 706)				HX_VARI(  ::kha::audio2::ogg::vorbis::data::Residue,residue) = ( ( ::kha::audio2::ogg::vorbis::data::Residue)(_hx_array_unsafe_get(this->header->residueConfig,r1)) );
HXLINE( 707)				residue->decode(this->decodeState,this->header,residueBuffers,ch,n2,doNotDecode,this->channelBuffers);
            			}
            		}
HXLINE( 713)		HX_VARI_NAME( Int,i6,"i") = map->couplingSteps;
HXLINE( 714)		HX_VARI_NAME( Int,n21,"n2") = ((int)n >> (int)(int)1);
HXLINE( 715)		while(true){
HXLINE( 715)			Int _hx_tmp64 = --i6;
HXDLIN( 715)			if (!((_hx_tmp64 >= (int)0))) {
HXLINE( 715)				goto _hx_goto_58;
            			}
HXLINE( 716)			Int index10 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->magnitude;
HXDLIN( 716)			HX_VARI_NAME( ::Array< Float >,m1,"m") = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,index10)) );
HXLINE( 717)			Int index11 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->angle;
HXDLIN( 717)			HX_VARI_NAME( ::Array< Float >,a3,"a") = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,index11)) );
HXLINE( 718)			{
HXLINE( 718)				HX_VARI_NAME( Int,_g14,"_g1") = (int)0;
HXDLIN( 718)				while((_g14 < n21)){
HXLINE( 718)					HX_VARI_NAME( Int,j4,"j") = _g14++;
HXLINE( 719)					HX_VAR_NAME( Float,a21,"a2");
HXDLIN( 719)					HX_VAR( Float,m2);
HXLINE( 720)					Bool _hx_tmp65 = (( (Float)(_hx_array_unsafe_get(m1,j4)) ) > (int)0);
HXDLIN( 720)					if (_hx_tmp65) {
HXLINE( 721)						Bool _hx_tmp66 = (( (Float)(_hx_array_unsafe_get(a3,j4)) ) > (int)0);
HXDLIN( 721)						if (_hx_tmp66) {
HXLINE( 722)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 723)							Float _hx_tmp67 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 723)							a21 = (_hx_tmp67 - ( (Float)(_hx_array_unsafe_get(a3,j4)) ));
            						}
            						else {
HXLINE( 725)							a21 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 726)							Float _hx_tmp68 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 726)							m2 = (_hx_tmp68 + ( (Float)(_hx_array_unsafe_get(a3,j4)) ));
            						}
            					}
            					else {
HXLINE( 729)						Bool _hx_tmp69 = (( (Float)(_hx_array_unsafe_get(a3,j4)) ) > (int)0);
HXDLIN( 729)						if (_hx_tmp69) {
HXLINE( 730)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 731)							Float _hx_tmp70 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 731)							a21 = (_hx_tmp70 + ( (Float)(_hx_array_unsafe_get(a3,j4)) ));
            						}
            						else {
HXLINE( 733)							a21 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 734)							Float _hx_tmp71 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 734)							m2 = (_hx_tmp71 - ( (Float)(_hx_array_unsafe_get(a3,j4)) ));
            						}
            					}
HXLINE( 737)					m1->__unsafe_set(j4,m2);
HXLINE( 738)					a3->__unsafe_set(j4,a21);
            				}
            			}
            		}
            		_hx_goto_58:;
HXLINE( 744)		{
HXLINE( 744)			HX_VARI_NAME( Int,_g15,"_g1") = (int)0;
HXDLIN( 744)			HX_VARI_NAME( Int,_g8,"_g") = this->header->channel;
HXDLIN( 744)			while((_g15 < _g8)){
HXLINE( 744)				HX_VARI_NAME( Int,i7,"i") = _g15++;
HXLINE( 745)				Bool _hx_tmp72 = ( (Bool)(_hx_array_unsafe_get(reallyZeroChannel,i7)) );
HXDLIN( 745)				if (_hx_tmp72) {
HXLINE( 746)					HX_VARI_NAME( Int,_g34,"_g3") = (int)0;
HXDLIN( 746)					while((_g34 < n21)){
HXLINE( 746)						HX_VARI_NAME( Int,j5,"j") = _g34++;
HXLINE( 747)						{
HXLINE( 747)							::Array< Float > this8 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) );
HXDLIN( 747)							this8->__unsafe_set(j5,(int)0);
            						}
            					}
            				}
            				else {
HXLINE( 750)					::Array< Float > _hx_tmp73 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) );
HXDLIN( 750)					map->doFloor(this->header->floorConfig,i7,n,_hx_tmp73,( (::Array< Int >)(_hx_array_unsafe_get(this->finalY,i7)) ),null());
            				}
            			}
            		}
HXLINE( 756)		{
HXLINE( 756)			HX_VARI_NAME( Int,_g16,"_g1") = (int)0;
HXDLIN( 756)			HX_VARI_NAME( Int,_g9,"_g") = this->header->channel;
HXDLIN( 756)			while((_g16 < _g9)){
HXLINE( 756)				HX_VARI_NAME( Int,i8,"i") = _g16++;
HXLINE( 757)				this->inverseMdct(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i8)) ),n,m->blockflag);
            			}
            		}
HXLINE( 763)		{
HXLINE( 763)			HX_VARI_NAME(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,_this5,"_this") = this->decodeState;
HXDLIN( 763)			while(true){
HXLINE( 763)				Bool _hx_tmp74;
HXDLIN( 763)				Bool _hx_tmp75 = (_this5->bytesInSeg == (int)0);
HXDLIN( 763)				if (_hx_tmp75) {
HXLINE( 763)					Bool _hx_tmp76 = !(_this5->lastSeg);
HXDLIN( 763)					if (_hx_tmp76) {
HXLINE( 763)						Int _hx_tmp77 = _this5->next();
HXDLIN( 763)						_hx_tmp74 = (_hx_tmp77 != (int)0);
            					}
            					else {
HXLINE( 763)						_hx_tmp74 = false;
            					}
            				}
            				else {
HXLINE( 763)					_hx_tmp74 = true;
            				}
HXDLIN( 763)				if (!(_hx_tmp74)) {
HXLINE( 763)					goto _hx_goto_63;
            				}
HXDLIN( 763)				_this5->bytesInSeg--;
HXDLIN( 763)				{
HXLINE( 763)					hx::AddEq(_this5->inputPosition,(int)1);
HXDLIN( 763)					_this5->input->readByte();
            				}
            			}
            			_hx_goto_63:;
            		}
HXLINE( 765)		return this->decodeState->finishDecodePacket(this->previousLength,n,r);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,decodePacketRest,return )

 ::kha::audio2::ogg::vorbis::VorbisDecoder VorbisDecoder_obj::start( ::haxe::io::Input input){
            	HX_STACK_FRAME("kha.audio2.ogg.vorbis.VorbisDecoder","start",0x5a739d71,"kha.audio2.ogg.vorbis.VorbisDecoder.start","kha/audio2/ogg/vorbis/VorbisDecoder.hx",72,0xbe2976a1)
            	HX_STACK_ARG(input,"input")
HXLINE(  73)		HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecodeState,decodeState) =  ::kha::audio2::ogg::vorbis::VorbisDecodeState_obj::__new(input);
HXLINE(  74)		HX_VARI(  ::kha::audio2::ogg::vorbis::data::Header,header) = ::kha::audio2::ogg::vorbis::data::Header_obj::read(decodeState);
HXLINE(  75)		HX_VARI(  ::kha::audio2::ogg::vorbis::VorbisDecoder,decoder) =  ::kha::audio2::ogg::vorbis::VorbisDecoder_obj::__new(header,decodeState);
HXLINE(  76)		decodeState->startFirstDecode();
HXLINE(  77)		decoder->pumpFirstFrame();
HXLINE(  79)		return decoder;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,start,return )


VorbisDecoder_obj::VorbisDecoder_obj()
{
}

void VorbisDecoder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VorbisDecoder);
	HX_MARK_MEMBER_NAME(previousWindow,"previousWindow");
	HX_MARK_MEMBER_NAME(previousLength,"previousLength");
	HX_MARK_MEMBER_NAME(finalY,"finalY");
	HX_MARK_MEMBER_NAME(a,"a");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(c,"c");
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_MARK_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_MARK_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_MARK_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_MARK_MEMBER_NAME(header,"header");
	HX_MARK_MEMBER_NAME(currentSample,"currentSample");
	HX_MARK_MEMBER_NAME(totalSample,"totalSample");
	HX_MARK_MEMBER_NAME(decodeState,"decodeState");
	HX_MARK_END_CLASS();
}

void VorbisDecoder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(previousWindow,"previousWindow");
	HX_VISIT_MEMBER_NAME(previousLength,"previousLength");
	HX_VISIT_MEMBER_NAME(finalY,"finalY");
	HX_VISIT_MEMBER_NAME(a,"a");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(c,"c");
	HX_VISIT_MEMBER_NAME(window,"window");
	HX_VISIT_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_VISIT_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_VISIT_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_VISIT_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_VISIT_MEMBER_NAME(header,"header");
	HX_VISIT_MEMBER_NAME(currentSample,"currentSample");
	HX_VISIT_MEMBER_NAME(totalSample,"totalSample");
	HX_VISIT_MEMBER_NAME(decodeState,"decodeState");
}

hx::Val VorbisDecoder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return hx::Val( a); }
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b); }
		if (HX_FIELD_EQ(inName,"c") ) { return hx::Val( c); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn()); }
		if (HX_FIELD_EQ(inName,"seek") ) { return hx::Val( seek_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { return hx::Val( finalY); }
		if (HX_FIELD_EQ(inName,"window") ) { return hx::Val( window); }
		if (HX_FIELD_EQ(inName,"header") ) { return hx::Val( header); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getWindow") ) { return hx::Val( getWindow_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { return hx::Val( totalSample); }
		if (HX_FIELD_EQ(inName,"decodeState") ) { return hx::Val( decodeState); }
		if (HX_FIELD_EQ(inName,"skipSamples") ) { return hx::Val( skipSamples_dyn()); }
		if (HX_FIELD_EQ(inName,"finishFrame") ) { return hx::Val( finishFrame_dyn()); }
		if (HX_FIELD_EQ(inName,"inverseMdct") ) { return hx::Val( inverseMdct_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"decodePacket") ) { return hx::Val( decodePacket_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { return hx::Val( currentSample); }
		if (HX_FIELD_EQ(inName,"getFrameFloat") ) { return hx::Val( getFrameFloat_dyn()); }
		if (HX_FIELD_EQ(inName,"initBlocksize") ) { return hx::Val( initBlocksize_dyn()); }
		if (HX_FIELD_EQ(inName,"decodeInitial") ) { return hx::Val( decodeInitial_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { return hx::Val( previousWindow); }
		if (HX_FIELD_EQ(inName,"previousLength") ) { return hx::Val( previousLength); }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { return hx::Val( bitReverseData); }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { return hx::Val( channelBuffers); }
		if (HX_FIELD_EQ(inName,"ensurePosition") ) { return hx::Val( ensurePosition_dyn()); }
		if (HX_FIELD_EQ(inName,"pumpFirstFrame") ) { return hx::Val( pumpFirstFrame_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { return hx::Val( channelBufferEnd); }
		if (HX_FIELD_EQ(inName,"decodePacketRest") ) { return hx::Val( decodePacketRest_dyn()); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setupSampleNumber") ) { return hx::Val( setupSampleNumber_dyn()); }
		if (HX_FIELD_EQ(inName,"seekFrameFromPage") ) { return hx::Val( seekFrameFromPage_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { return hx::Val( channelBufferStart); }
	}
	return super::__Field(inName,inCallProp);
}

bool VorbisDecoder_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
	}
	return false;
}

hx::Val VorbisDecoder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { a=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"c") ) { c=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { finalY=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"window") ) { window=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"header") ) { header=inValue.Cast<  ::kha::audio2::ogg::vorbis::data::Header >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { totalSample=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"decodeState") ) { decodeState=inValue.Cast<  ::kha::audio2::ogg::vorbis::VorbisDecodeState >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { currentSample=inValue.Cast< Int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { previousWindow=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"previousLength") ) { previousLength=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { bitReverseData=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { channelBuffers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { channelBufferEnd=inValue.Cast< Int >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { channelBufferStart=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VorbisDecoder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41"));
	outFields->push(HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d"));
	outFields->push(HX_HCSTRING("finalY","\x23","\x28","\x79","\x86"));
	outFields->push(HX_HCSTRING("a","\x61","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("c","\x63","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"));
	outFields->push(HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2"));
	outFields->push(HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61"));
	outFields->push(HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba"));
	outFields->push(HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4"));
	outFields->push(HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"));
	outFields->push(HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00"));
	outFields->push(HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3"));
	outFields->push(HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo VorbisDecoder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,previousWindow),HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,previousLength),HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,finalY),HX_HCSTRING("finalY","\x23","\x28","\x79","\x86")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,a),HX_HCSTRING("a","\x61","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,c),HX_HCSTRING("c","\x63","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,window),HX_HCSTRING("window","\xf0","\x93","\x8c","\x52")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,bitReverseData),HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,channelBuffers),HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferStart),HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferEnd),HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4")},
	{hx::fsObject /*::kha::audio2::ogg::vorbis::data::Header*/ ,(int)offsetof(VorbisDecoder_obj,header),HX_HCSTRING("header","\x8d","\x09","\x00","\xfd")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,currentSample),HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(VorbisDecoder_obj,totalSample),HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3")},
	{hx::fsObject /*::kha::audio2::ogg::vorbis::VorbisDecodeState*/ ,(int)offsetof(VorbisDecoder_obj,decodeState),HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VorbisDecoder_obj_sStaticStorageInfo = 0;
#endif

static ::String VorbisDecoder_obj_sMemberFields[] = {
	HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41"),
	HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d"),
	HX_HCSTRING("finalY","\x23","\x28","\x79","\x86"),
	HX_HCSTRING("a","\x61","\x00","\x00","\x00"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("c","\x63","\x00","\x00","\x00"),
	HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"),
	HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2"),
	HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61"),
	HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba"),
	HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4"),
	HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"),
	HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00"),
	HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3"),
	HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c"),
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	HX_HCSTRING("skipSamples","\x4a","\x34","\x3b","\x1f"),
	HX_HCSTRING("setupSampleNumber","\xb0","\x18","\xf3","\x16"),
	HX_HCSTRING("seek","\x78","\x85","\x50","\x4c"),
	HX_HCSTRING("seekFrameFromPage","\x8e","\x11","\x2a","\x58"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("ensurePosition","\x87","\x40","\xd1","\xb4"),
	HX_HCSTRING("getFrameFloat","\x65","\x56","\x2f","\x42"),
	HX_HCSTRING("pumpFirstFrame","\xa5","\x34","\xb1","\xa7"),
	HX_HCSTRING("finishFrame","\xda","\x9a","\x88","\x2d"),
	HX_HCSTRING("getWindow","\x26","\x1d","\xe3","\xce"),
	HX_HCSTRING("initBlocksize","\x5e","\x03","\x09","\xe2"),
	HX_HCSTRING("inverseMdct","\x98","\x89","\xaa","\x21"),
	HX_HCSTRING("decodePacket","\x56","\x3f","\xd9","\x31"),
	HX_HCSTRING("decodeInitial","\xf6","\xfc","\x28","\xf6"),
	HX_HCSTRING("decodePacketRest","\x8a","\x29","\xdb","\x8b"),
	::String(null()) };

static void VorbisDecoder_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VorbisDecoder_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VorbisDecoder_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VorbisDecoder_obj::__mClass,"__mClass");
};

#endif

hx::Class VorbisDecoder_obj::__mClass;

static ::String VorbisDecoder_obj_sStaticFields[] = {
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	::String(null())
};

void VorbisDecoder_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.audio2.ogg.vorbis.VorbisDecoder","\x3d","\x44","\x15","\x18");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &VorbisDecoder_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = VorbisDecoder_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VorbisDecoder_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = VorbisDecoder_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VorbisDecoder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VorbisDecoder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace vorbis
