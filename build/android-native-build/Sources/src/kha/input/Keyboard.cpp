// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Key
#include <kha/Key.h>
#endif
#ifndef INCLUDED_kha_SystemImpl
#include <kha/SystemImpl.h>
#endif
#ifndef INCLUDED_kha_input_Keyboard
#include <kha/input/Keyboard.h>
#endif
#ifndef INCLUDED_kha_network_Controller
#include <kha/network/Controller.h>
#endif
#ifndef INCLUDED_kha_network_Session
#include <kha/network/Session.h>
#endif

namespace kha{
namespace input{

void Keyboard_obj::__construct(){
            	HX_STACK_FRAME("kha.input.Keyboard","new",0xce3ad227,"kha.input.Keyboard.new","kha/input/Keyboard.hx",35,0xb57e4ba7)
            	HX_STACK_THIS(this)
HXLINE(  36)		super::__construct();
HXLINE(  37)		this->downListeners = ::Array_obj< ::Dynamic>::__new();
HXLINE(  38)		this->upListeners = ::Array_obj< ::Dynamic>::__new();
HXLINE(  39)		::kha::input::Keyboard_obj::instance = hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic Keyboard_obj::__CreateEmpty() { return new Keyboard_obj; }

hx::ObjectPtr< Keyboard_obj > Keyboard_obj::__new()
{
	hx::ObjectPtr< Keyboard_obj > _hx_result = new Keyboard_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Keyboard_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Keyboard_obj > _hx_result = new Keyboard_obj();
	_hx_result->__construct();
	return _hx_result;
}

void Keyboard_obj::notify( ::Dynamic downListener, ::Dynamic upListener){
            	HX_STACK_FRAME("kha.input.Keyboard","notify",0xfaf1ef62,"kha.input.Keyboard.notify","kha/input/Keyboard.hx",13,0xb57e4ba7)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(downListener,"downListener")
            	HX_STACK_ARG(upListener,"upListener")
HXLINE(  14)		Bool _hx_tmp = hx::IsNotNull( downListener );
HXDLIN(  14)		if (_hx_tmp) {
HXLINE(  14)			this->downListeners->push(downListener);
            		}
HXLINE(  15)		Bool _hx_tmp1 = hx::IsNotNull( upListener );
HXDLIN(  15)		if (_hx_tmp1) {
HXLINE(  15)			this->upListeners->push(upListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Keyboard_obj,notify,(void))

void Keyboard_obj::remove( ::Dynamic downListener, ::Dynamic upListener){
            	HX_STACK_FRAME("kha.input.Keyboard","remove",0xcdc1b0dd,"kha.input.Keyboard.remove","kha/input/Keyboard.hx",18,0xb57e4ba7)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(downListener,"downListener")
            	HX_STACK_ARG(upListener,"upListener")
HXLINE(  19)		Bool _hx_tmp = hx::IsNotNull( downListener );
HXDLIN(  19)		if (_hx_tmp) {
HXLINE(  19)			this->downListeners->remove(downListener);
            		}
HXLINE(  20)		Bool _hx_tmp1 = hx::IsNotNull( upListener );
HXDLIN(  20)		if (_hx_tmp1) {
HXLINE(  20)			this->upListeners->remove(upListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Keyboard_obj,remove,(void))

void Keyboard_obj::show(){
            	HX_STACK_FRAME("kha.input.Keyboard","show",0xa88d6156,"kha.input.Keyboard.show","kha/input/Keyboard.hx",23,0xb57e4ba7)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Keyboard_obj,show,(void))

void Keyboard_obj::hide(){
            	HX_STACK_FRAME("kha.input.Keyboard","hide",0xa148c11b,"kha.input.Keyboard.hide","kha/input/Keyboard.hx",27,0xb57e4ba7)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Keyboard_obj,hide,(void))

void Keyboard_obj::sendDownEvent(::hx::EnumBase key,::String _hx_char){
            	HX_STACK_FRAME("kha.input.Keyboard","sendDownEvent",0xd04ca677,"kha.input.Keyboard.sendDownEvent","kha/network/ControllerBuilder.hx",97,0x77f946ab)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(_hx_char,"char")
HXLINE(  98)		Bool _hx_tmp = hx::IsNotNull( ::kha::network::Session_obj::the() );
HXDLIN(  98)		if (_hx_tmp) {
HXLINE(  49)			HX_VARI(  ::haxe::io::Bytes,bytes) = ::haxe::io::Bytes_obj::alloc((int)6);
HXLINE(  50)			{
HXLINE(  50)				bytes->b[(int)0] = (int)0;
HXDLIN(  50)				bytes->b[(int)1] = (int)0;
HXDLIN(  50)				bytes->b[(int)2] = (int)0;
HXDLIN(  50)				bytes->b[(int)3] = (int)0;
            			}
HXLINE(  89)			{
HXLINE(  89)				Int v = ( ( ::hx::EnumBase)(key) )->_hx_getIndex();
HXDLIN(  89)				bytes->b[(int)4] = v;
            			}
HXLINE(  68)			{
HXLINE(  68)				Int v1 = _hx_char.charCodeAt((int)0);
HXDLIN(  68)				bytes->b[(int)5] = v1;
            			}
HXLINE( 100)			Int _hx_tmp1 = this->_id();
HXDLIN( 100)			::kha::network::Session_obj::the()->sendControllerUpdate(_hx_tmp1,bytes);
            		}
HXLINE(  47)		{
HXLINE(  47)			HX_VARI( Int,_g) = (int)0;
HXDLIN(  47)			HX_VARI( ::Array< ::Dynamic>,_g1) = this->downListeners;
HXDLIN(  47)			while((_g < _g1->length)){
HXLINE(  47)				HX_VARI(  ::Dynamic,listener) = _g1->__get(_g);
HXDLIN(  47)				++_g;
HXLINE(  48)				listener(key,_hx_char);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Keyboard_obj,sendDownEvent,(void))

void Keyboard_obj::sendUpEvent(::hx::EnumBase key,::String _hx_char){
            	HX_STACK_FRAME("kha.input.Keyboard","sendUpEvent",0xd43edc1e,"kha.input.Keyboard.sendUpEvent","kha/network/ControllerBuilder.hx",97,0x77f946ab)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(_hx_char,"char")
HXLINE(  98)		Bool _hx_tmp = hx::IsNotNull( ::kha::network::Session_obj::the() );
HXDLIN(  98)		if (_hx_tmp) {
HXLINE(  49)			HX_VARI(  ::haxe::io::Bytes,bytes) = ::haxe::io::Bytes_obj::alloc((int)6);
HXLINE(  50)			{
HXLINE(  50)				bytes->b[(int)0] = (int)1;
HXDLIN(  50)				bytes->b[(int)1] = (int)0;
HXDLIN(  50)				bytes->b[(int)2] = (int)0;
HXDLIN(  50)				bytes->b[(int)3] = (int)0;
            			}
HXLINE(  89)			{
HXLINE(  89)				Int v = ( ( ::hx::EnumBase)(key) )->_hx_getIndex();
HXDLIN(  89)				bytes->b[(int)4] = v;
            			}
HXLINE(  68)			{
HXLINE(  68)				Int v1 = _hx_char.charCodeAt((int)0);
HXDLIN(  68)				bytes->b[(int)5] = v1;
            			}
HXLINE( 100)			Int _hx_tmp1 = this->_id();
HXDLIN( 100)			::kha::network::Session_obj::the()->sendControllerUpdate(_hx_tmp1,bytes);
            		}
HXLINE(  57)		{
HXLINE(  57)			HX_VARI( Int,_g) = (int)0;
HXDLIN(  57)			HX_VARI( ::Array< ::Dynamic>,_g1) = this->upListeners;
HXDLIN(  57)			while((_g < _g1->length)){
HXLINE(  57)				HX_VARI(  ::Dynamic,listener) = _g1->__get(_g);
HXDLIN(  57)				++_g;
HXLINE(  58)				listener(key,_hx_char);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Keyboard_obj,sendUpEvent,(void))

void Keyboard_obj::_receive( ::haxe::io::Bytes bytes){
            	HX_STACK_FRAME("kha.input.Keyboard","_receive",0xbd2ae83d,"kha.input.Keyboard._receive","kha/network/ControllerBuilder.hx",271,0x77f946ab)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bytes,"bytes")
            	}


 ::kha::input::Keyboard Keyboard_obj::get(hx::Null< Int >  __o_num){
Int num = __o_num.Default(0);
            	HX_STACK_FRAME("kha.input.Keyboard","get",0xce35825d,"kha.input.Keyboard.get","kha/input/Keyboard.hx",10,0xb57e4ba7)
            	HX_STACK_ARG(num,"num")
HXLINE(  10)		return ::kha::SystemImpl_obj::getKeyboard(num);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Keyboard_obj,get,return )

 ::kha::input::Keyboard Keyboard_obj::instance;


Keyboard_obj::Keyboard_obj()
{
}

void Keyboard_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Keyboard);
	HX_MARK_MEMBER_NAME(downListeners,"downListeners");
	HX_MARK_MEMBER_NAME(upListeners,"upListeners");
	 ::kha::network::Controller_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Keyboard_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(downListeners,"downListeners");
	HX_VISIT_MEMBER_NAME(upListeners,"upListeners");
	 ::kha::network::Controller_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Keyboard_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"show") ) { return hx::Val( show_dyn()); }
		if (HX_FIELD_EQ(inName,"hide") ) { return hx::Val( hide_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"notify") ) { return hx::Val( notify_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_receive") ) { return hx::Val( _receive_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"upListeners") ) { return hx::Val( upListeners); }
		if (HX_FIELD_EQ(inName,"sendUpEvent") ) { return hx::Val( sendUpEvent_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"downListeners") ) { return hx::Val( downListeners); }
		if (HX_FIELD_EQ(inName,"sendDownEvent") ) { return hx::Val( sendDownEvent_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Keyboard_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { outValue = instance; return true; }
	}
	return false;
}

hx::Val Keyboard_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"upListeners") ) { upListeners=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"downListeners") ) { downListeners=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Keyboard_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { instance=ioValue.Cast<  ::kha::input::Keyboard >(); return true; }
	}
	return false;
}

void Keyboard_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("downListeners","\xbd","\x30","\xf6","\xdd"));
	outFields->push(HX_HCSTRING("upListeners","\xa4","\xbb","\x9c","\x9b"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Keyboard_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Keyboard_obj,downListeners),HX_HCSTRING("downListeners","\xbd","\x30","\xf6","\xdd")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Keyboard_obj,upListeners),HX_HCSTRING("upListeners","\xa4","\xbb","\x9c","\x9b")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Keyboard_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::kha::input::Keyboard*/ ,(void *) &Keyboard_obj::instance,HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Keyboard_obj_sMemberFields[] = {
	HX_HCSTRING("notify","\xc9","\xda","\xb8","\x31"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("show","\xfd","\xd4","\x52","\x4c"),
	HX_HCSTRING("hide","\xc2","\x34","\x0e","\x45"),
	HX_HCSTRING("downListeners","\xbd","\x30","\xf6","\xdd"),
	HX_HCSTRING("upListeners","\xa4","\xbb","\x9c","\x9b"),
	HX_HCSTRING("sendDownEvent","\xf0","\x05","\x55","\xf0"),
	HX_HCSTRING("sendUpEvent","\x57","\x3b","\x46","\x5c"),
	HX_HCSTRING("_receive","\x64","\xbb","\x10","\x64"),
	::String(null()) };

static void Keyboard_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Keyboard_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Keyboard_obj::instance,"instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Keyboard_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Keyboard_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::instance,"instance");
};

#endif

hx::Class Keyboard_obj::__mClass;

static ::String Keyboard_obj_sStaticFields[] = {
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59"),
	::String(null())
};

void Keyboard_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.input.Keyboard","\xb5","\x32","\x77","\xe7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Keyboard_obj::__GetStatic;
	__mClass->mSetStaticField = &Keyboard_obj::__SetStatic;
	__mClass->mMarkFunc = Keyboard_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Keyboard_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Keyboard_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Keyboard_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Keyboard_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Keyboard_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Keyboard_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Keyboard_obj::__boot()
{
{
            	HX_STACK_FRAME("kha.input.Keyboard","boot",0x9d56108b,"kha.input.Keyboard.boot","kha/input/Keyboard.hx",8,0xb57e4ba7)
HXLINE(   8)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("sendDownEvent",f0,05,55,f0), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("input",0a,c4,1d,be),null())))
            				->setFixed(1,HX_("sendUpEvent",57,3b,46,5c), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("input",0a,c4,1d,be),null()))))));
            	}
}

} // end namespace kha
} // end namespace input
