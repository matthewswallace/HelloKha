// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_kha_input_Gamepad
#include <kha/input/Gamepad.h>
#endif

namespace kha{
namespace input{

void Gamepad_obj::__construct(hx::Null< Int >  __o_id){
Int id = __o_id.Default(0);
            	HX_STACK_FRAME("kha.input.Gamepad","new",0x1b762cc5,"kha.input.Gamepad.new","kha/input/Gamepad.hx",25,0xfbe88f8d)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
HXLINE(  26)		this->axisListeners = ::Array_obj< ::Dynamic>::__new();
HXLINE(  27)		this->buttonListeners = ::Array_obj< ::Dynamic>::__new();
HXLINE(  28)		::kha::input::Gamepad_obj::instances[id] = hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic Gamepad_obj::__CreateEmpty() { return new Gamepad_obj; }

hx::ObjectPtr< Gamepad_obj > Gamepad_obj::__new(hx::Null< Int >  __o_id)
{
	hx::ObjectPtr< Gamepad_obj > _hx_result = new Gamepad_obj();
	_hx_result->__construct(__o_id);
	return _hx_result;
}

Dynamic Gamepad_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Gamepad_obj > _hx_result = new Gamepad_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void Gamepad_obj::notify( ::Dynamic axisListener, ::Dynamic buttonListener){
            	HX_STACK_FRAME("kha.input.Gamepad","notify",0x4a3a8b84,"kha.input.Gamepad.notify","kha/input/Gamepad.hx",11,0xfbe88f8d)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(axisListener,"axisListener")
            	HX_STACK_ARG(buttonListener,"buttonListener")
HXLINE(  12)		Bool _hx_tmp = hx::IsNotNull( axisListener );
HXDLIN(  12)		if (_hx_tmp) {
HXLINE(  12)			this->axisListeners->push(axisListener);
            		}
HXLINE(  13)		Bool _hx_tmp1 = hx::IsNotNull( buttonListener );
HXDLIN(  13)		if (_hx_tmp1) {
HXLINE(  13)			this->buttonListeners->push(buttonListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gamepad_obj,notify,(void))

void Gamepad_obj::remove( ::Dynamic axisListener, ::Dynamic buttonListener){
            	HX_STACK_FRAME("kha.input.Gamepad","remove",0x1d0a4cff,"kha.input.Gamepad.remove","kha/input/Gamepad.hx",16,0xfbe88f8d)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(axisListener,"axisListener")
            	HX_STACK_ARG(buttonListener,"buttonListener")
HXLINE(  17)		Bool _hx_tmp = hx::IsNotNull( axisListener );
HXDLIN(  17)		if (_hx_tmp) {
HXLINE(  17)			this->axisListeners->remove(axisListener);
            		}
HXLINE(  18)		Bool _hx_tmp1 = hx::IsNotNull( buttonListener );
HXDLIN(  18)		if (_hx_tmp1) {
HXLINE(  18)			this->buttonListeners->remove(buttonListener);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gamepad_obj,remove,(void))

void Gamepad_obj::sendAxisEvent(Int axis,Float value){
            	HX_STACK_FRAME("kha.input.Gamepad","sendAxisEvent",0x13d0c9f6,"kha.input.Gamepad.sendAxisEvent","kha/input/Gamepad.hx",33,0xfbe88f8d)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(axis,"axis")
            	HX_STACK_ARG(value,"value")
HXLINE(  33)		HX_VARI( Int,_g) = (int)0;
HXDLIN(  33)		HX_VARI( ::Array< ::Dynamic>,_g1) = this->axisListeners;
HXDLIN(  33)		while((_g < _g1->length)){
HXLINE(  33)			HX_VARI(  ::Dynamic,listener) = _g1->__get(_g);
HXDLIN(  33)			++_g;
HXLINE(  34)			listener(axis,value);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gamepad_obj,sendAxisEvent,(void))

void Gamepad_obj::sendButtonEvent(Int button,Float value){
            	HX_STACK_FRAME("kha.input.Gamepad","sendButtonEvent",0x02b76845,"kha.input.Gamepad.sendButtonEvent","kha/input/Gamepad.hx",40,0xfbe88f8d)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(button,"button")
            	HX_STACK_ARG(value,"value")
HXLINE(  40)		HX_VARI( Int,_g) = (int)0;
HXDLIN(  40)		HX_VARI( ::Array< ::Dynamic>,_g1) = this->buttonListeners;
HXDLIN(  40)		while((_g < _g1->length)){
HXLINE(  40)			HX_VARI(  ::Dynamic,listener) = _g1->__get(_g);
HXDLIN(  40)			++_g;
HXLINE(  41)			listener(button,value);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gamepad_obj,sendButtonEvent,(void))

 ::kha::input::Gamepad Gamepad_obj::get(hx::Null< Int >  __o_num){
Int num = __o_num.Default(0);
            	HX_STACK_FRAME("kha.input.Gamepad","get",0x1b70dcfb,"kha.input.Gamepad.get","kha/input/Gamepad.hx",6,0xfbe88f8d)
            	HX_STACK_ARG(num,"num")
HXLINE(   7)		if ((num >= ::kha::input::Gamepad_obj::instances->length)) {
HXLINE(   7)			return null();
            		}
HXLINE(   8)		return ::kha::input::Gamepad_obj::instances->__get(num).StaticCast<  ::kha::input::Gamepad >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Gamepad_obj,get,return )

::Array< ::Dynamic> Gamepad_obj::instances;


Gamepad_obj::Gamepad_obj()
{
}

void Gamepad_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Gamepad);
	HX_MARK_MEMBER_NAME(axisListeners,"axisListeners");
	HX_MARK_MEMBER_NAME(buttonListeners,"buttonListeners");
	HX_MARK_END_CLASS();
}

void Gamepad_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(axisListeners,"axisListeners");
	HX_VISIT_MEMBER_NAME(buttonListeners,"buttonListeners");
}

hx::Val Gamepad_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"notify") ) { return hx::Val( notify_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"axisListeners") ) { return hx::Val( axisListeners); }
		if (HX_FIELD_EQ(inName,"sendAxisEvent") ) { return hx::Val( sendAxisEvent_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"buttonListeners") ) { return hx::Val( buttonListeners); }
		if (HX_FIELD_EQ(inName,"sendButtonEvent") ) { return hx::Val( sendButtonEvent_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Gamepad_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"instances") ) { outValue = instances; return true; }
	}
	return false;
}

hx::Val Gamepad_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"axisListeners") ) { axisListeners=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"buttonListeners") ) { buttonListeners=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Gamepad_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"instances") ) { instances=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

void Gamepad_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("axisListeners","\x9e","\x0c","\xba","\x11"));
	outFields->push(HX_HCSTRING("buttonListeners","\x2d","\x15","\x52","\x7d"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Gamepad_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Gamepad_obj,axisListeners),HX_HCSTRING("axisListeners","\x9e","\x0c","\xba","\x11")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Gamepad_obj,buttonListeners),HX_HCSTRING("buttonListeners","\x2d","\x15","\x52","\x7d")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Gamepad_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(void *) &Gamepad_obj::instances,HX_HCSTRING("instances","\x3e","\x83","\x1a","\x4b")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Gamepad_obj_sMemberFields[] = {
	HX_HCSTRING("notify","\xc9","\xda","\xb8","\x31"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("axisListeners","\x9e","\x0c","\xba","\x11"),
	HX_HCSTRING("buttonListeners","\x2d","\x15","\x52","\x7d"),
	HX_HCSTRING("sendAxisEvent","\x51","\x1d","\xe3","\x33"),
	HX_HCSTRING("sendButtonEvent","\x60","\x88","\x89","\x0a"),
	::String(null()) };

static void Gamepad_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Gamepad_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Gamepad_obj::instances,"instances");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Gamepad_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Gamepad_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Gamepad_obj::instances,"instances");
};

#endif

hx::Class Gamepad_obj::__mClass;

static ::String Gamepad_obj_sStaticFields[] = {
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("instances","\x3e","\x83","\x1a","\x4b"),
	::String(null())
};

void Gamepad_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.input.Gamepad","\x53","\x66","\xcd","\x68");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Gamepad_obj::__GetStatic;
	__mClass->mSetStaticField = &Gamepad_obj::__SetStatic;
	__mClass->mMarkFunc = Gamepad_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Gamepad_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Gamepad_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Gamepad_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Gamepad_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Gamepad_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Gamepad_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Gamepad_obj::__boot()
{
{
            	HX_STACK_FRAME("kha.input.Gamepad","boot",0xe40a002d,"kha.input.Gamepad.boot","kha/input/Gamepad.hx",5,0xfbe88f8d)
HXLINE(   5)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("sendButtonEvent",60,88,89,0a), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("input",0a,c4,1d,be),null())))
            				->setFixed(1,HX_("sendAxisEvent",51,1d,e3,33), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("input",0a,c4,1d,be),null()))))));
            	}
{
            	HX_STACK_FRAME("kha.input.Gamepad","boot",0xe40a002d,"kha.input.Gamepad.boot","kha/input/Gamepad.hx",21,0xfbe88f8d)
HXLINE(  21)		instances = ::Array_obj< ::Dynamic>::__new();
            	}
}

} // end namespace kha
} // end namespace input
