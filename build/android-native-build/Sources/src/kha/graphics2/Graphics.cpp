// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Font
#include <kha/Font.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Video
#include <kha/Video.h>
#endif
#ifndef INCLUDED_kha__Color_Color_Impl_
#include <kha/_Color/Color_Impl_.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_ImageScaleQuality
#include <kha/graphics2/ImageScaleQuality.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <kha/math/FastMatrix3.h>
#endif

namespace kha{
namespace graphics2{

void Graphics_obj::__construct(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","new",0xbe5bae2e,"kha.graphics2.Graphics.new","kha/graphics2/Graphics.hx",196,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 197)		this->transformations = ::Array_obj< ::Dynamic>::__new();
HXLINE( 198)		this->transformations->push( ::kha::math::FastMatrix3_obj::__new((int)1,(int)0,(int)0,(int)0,(int)1,(int)0,(int)0,(int)0,(int)1));
HXLINE( 199)		this->opacities = ::Array_obj< Float >::__new();
HXLINE( 200)		this->opacities->push((int)1);
HXLINE( 201)		this->myFontSize = (int)12;
HXLINE( 202)		this->myFontGlyphs = ::Array_obj< Int >::__new(0);
HXLINE( 203)		{
HXLINE( 203)			HX_VARI( Int,_g) = (int)32;
HXDLIN( 203)			while((_g < (int)256)){
HXLINE( 203)				HX_VARI( Int,i) = _g++;
HXLINE( 204)				this->myFontGlyphs->push(i);
            			}
            		}
HXLINE( 207)		this->pipe = null();
            	}

Dynamic Graphics_obj::__CreateEmpty() { return new Graphics_obj; }

hx::ObjectPtr< Graphics_obj > Graphics_obj::__new()
{
	hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Graphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

void Graphics_obj::begin(hx::Null< Bool >  __o_clear, ::Dynamic clearColor){
Bool clear = __o_clear.Default(true);
            	HX_STACK_FRAME("kha.graphics2.Graphics","begin",0xe66b5777,"kha.graphics2.Graphics.begin","kha/graphics2/Graphics.hx",13,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(clear,"clear")
            	HX_STACK_ARG(clearColor,"clearColor")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,begin,(void))

void Graphics_obj::end(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","end",0xbe54e1a9,"kha.graphics2.Graphics.end","kha/graphics2/Graphics.hx",14,0x8ef16900)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,end,(void))

void Graphics_obj::flush(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","flush",0x38b0d012,"kha.graphics2.Graphics.flush","kha/graphics2/Graphics.hx",15,0x8ef16900)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,flush,(void))

void Graphics_obj::clear( ::Dynamic color){
            	HX_STACK_FRAME("kha.graphics2.Graphics","clear",0x7e70dedb,"kha.graphics2.Graphics.clear","kha/graphics2/Graphics.hx",20,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(color,"color")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,clear,(void))

void Graphics_obj::drawImage( ::kha::Image img,float x,float y){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawImage",0x80858105,"kha.graphics2.Graphics.drawImage","kha/graphics2/Graphics.hx",22,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(img,"img")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(  22)		Int _hx_tmp = img->get_width();
HXDLIN(  22)		Int _hx_tmp1 = img->get_height();
HXDLIN(  22)		this->drawSubImage(img,x,y,(int)0,(int)0,_hx_tmp,_hx_tmp1);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawImage,(void))

void Graphics_obj::drawSubImage( ::kha::Image img,float x,float y,float sx,float sy,float sw,float sh){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawSubImage",0xd6fcfa51,"kha.graphics2.Graphics.drawSubImage","kha/graphics2/Graphics.hx",25,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(img,"img")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(sx,"sx")
            	HX_STACK_ARG(sy,"sy")
            	HX_STACK_ARG(sw,"sw")
            	HX_STACK_ARG(sh,"sh")
HXLINE(  25)		this->drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Graphics_obj,drawSubImage,(void))

void Graphics_obj::drawScaledImage( ::kha::Image img,float dx,float dy,float dw,float dh){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawScaledImage",0x4311f38b,"kha.graphics2.Graphics.drawScaledImage","kha/graphics2/Graphics.hx",28,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(img,"img")
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(dy,"dy")
            	HX_STACK_ARG(dw,"dw")
            	HX_STACK_ARG(dh,"dh")
HXLINE(  28)		Int _hx_tmp = img->get_width();
HXDLIN(  28)		Int _hx_tmp1 = img->get_height();
HXDLIN(  28)		this->drawScaledSubImage(img,(int)0,(int)0,_hx_tmp,_hx_tmp1,dx,dy,dw,dh);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawScaledImage,(void))

void Graphics_obj::drawScaledSubImage( ::kha::Image image,float sx,float sy,float sw,float sh,float dx,float dy,float dw,float dh){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawScaledSubImage",0xe6d65f8b,"kha.graphics2.Graphics.drawScaledSubImage","kha/graphics2/Graphics.hx",30,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(image,"image")
            	HX_STACK_ARG(sx,"sx")
            	HX_STACK_ARG(sy,"sy")
            	HX_STACK_ARG(sw,"sw")
            	HX_STACK_ARG(sh,"sh")
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(dy,"dy")
            	HX_STACK_ARG(dw,"dw")
            	HX_STACK_ARG(dh,"dh")
            	}


HX_DEFINE_DYNAMIC_FUNC9(Graphics_obj,drawScaledSubImage,(void))

void Graphics_obj::drawRect(Float x,Float y,Float width,Float height,hx::Null< Float >  __o_strength){
Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawRect",0xa4ec4eba,"kha.graphics2.Graphics.drawRect","kha/graphics2/Graphics.hx",31,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(strength,"strength")
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawRect,(void))

void Graphics_obj::fillRect(Float x,Float y,Float width,Float height){
            	HX_STACK_FRAME("kha.graphics2.Graphics","fillRect",0xb1949cb9,"kha.graphics2.Graphics.fillRect","kha/graphics2/Graphics.hx",32,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,fillRect,(void))

void Graphics_obj::drawString(::String text,Float x,Float y){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawString",0x06e93be7,"kha.graphics2.Graphics.drawString","kha/graphics2/Graphics.hx",33,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(text,"text")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawString,(void))

void Graphics_obj::drawLine(Float x1,Float y1,Float x2,Float y2,hx::Null< Float >  __o_strength){
Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawLine",0xa0f8198a,"kha.graphics2.Graphics.drawLine","kha/graphics2/Graphics.hx",34,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	HX_STACK_ARG(strength,"strength")
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawLine,(void))

void Graphics_obj::drawVideo( ::kha::Video video,Float x,Float y,Float width,Float height){
            	HX_STACK_FRAME("kha.graphics2.Graphics","drawVideo",0xfa187625,"kha.graphics2.Graphics.drawVideo","kha/graphics2/Graphics.hx",35,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(video,"video")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawVideo,(void))

void Graphics_obj::fillTriangle(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACK_FRAME("kha.graphics2.Graphics","fillTriangle",0x60bafcdd,"kha.graphics2.Graphics.fillTriangle","kha/graphics2/Graphics.hx",36,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	HX_STACK_ARG(x3,"x3")
            	HX_STACK_ARG(y3,"y3")
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,fillTriangle,(void))

::hx::EnumBase Graphics_obj::get_imageScaleQuality(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_imageScaleQuality",0x1aa79775,"kha.graphics2.Graphics.get_imageScaleQuality","kha/graphics2/Graphics.hx",42,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  42)		return ::kha::graphics2::ImageScaleQuality_obj::Low_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_imageScaleQuality,return )

::hx::EnumBase Graphics_obj::set_imageScaleQuality(::hx::EnumBase value){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_imageScaleQuality",0x6eb06581,"kha.graphics2.Graphics.set_imageScaleQuality","kha/graphics2/Graphics.hx",46,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  46)		return ::kha::graphics2::ImageScaleQuality_obj::High_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_imageScaleQuality,return )

::hx::EnumBase Graphics_obj::get_mipmapScaleQuality(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_mipmapScaleQuality",0x2d557d38,"kha.graphics2.Graphics.get_mipmapScaleQuality","kha/graphics2/Graphics.hx",50,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  50)		return ::kha::graphics2::ImageScaleQuality_obj::Low_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_mipmapScaleQuality,return )

::hx::EnumBase Graphics_obj::set_mipmapScaleQuality(::hx::EnumBase value){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_mipmapScaleQuality",0x6100f9ac,"kha.graphics2.Graphics.set_mipmapScaleQuality","kha/graphics2/Graphics.hx",54,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  54)		return ::kha::graphics2::ImageScaleQuality_obj::High_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_mipmapScaleQuality,return )

Int Graphics_obj::get_color(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_color",0x8916fa08,"kha.graphics2.Graphics.get_color","kha/graphics2/Graphics.hx",63,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  63)		return ::kha::_Color::Color_Impl__obj::Black;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_color,return )

Int Graphics_obj::set_color(Int color){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_color",0x6c67e614,"kha.graphics2.Graphics.set_color","kha/graphics2/Graphics.hx",67,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(color,"color")
HXLINE(  67)		return ::kha::_Color::Color_Impl__obj::Black;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_color,return )

::Dynamic Graphics_obj::get_font(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_font",0x085670ca,"kha.graphics2.Graphics.get_font","kha/graphics2/Graphics.hx",73,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  73)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_font,return )

::Dynamic Graphics_obj::set_font(::Dynamic font){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_font",0xb6b3ca3e,"kha.graphics2.Graphics.set_font","kha/graphics2/Graphics.hx",77,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(font,"font")
HXLINE(  77)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_font,return )

Int Graphics_obj::get_fontSize(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_fontSize",0x526c6aab,"kha.graphics2.Graphics.get_fontSize","kha/graphics2/Graphics.hx",83,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  83)		return this->myFontSize;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_fontSize,return )

Int Graphics_obj::set_fontSize(Int value){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_fontSize",0x67658e1f,"kha.graphics2.Graphics.set_fontSize","kha/graphics2/Graphics.hx",87,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  87)		return (this->myFontSize = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_fontSize,return )

::Array< Int > Graphics_obj::get_fontGlyphs(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_fontGlyphs",0x03a791b1,"kha.graphics2.Graphics.get_fontGlyphs","kha/graphics2/Graphics.hx",93,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE(  93)		return this->myFontGlyphs;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_fontGlyphs,return )

::Array< Int > Graphics_obj::set_fontGlyphs(::Array< Int > value){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_fontGlyphs",0x23c77a25,"kha.graphics2.Graphics.set_fontGlyphs","kha/graphics2/Graphics.hx",97,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  97)		return (this->myFontGlyphs = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_fontGlyphs,return )

void Graphics_obj::pushTransformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACK_FRAME("kha.graphics2.Graphics","pushTransformation",0x98a20735,"kha.graphics2.Graphics.pushTransformation","kha/graphics2/Graphics.hx",102,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(transformation,"transformation")
HXLINE( 103)		this->setTransformation(transformation);
HXLINE( 104)		this->transformations->push(transformation);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushTransformation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::popTransformation(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","popTransformation",0x42d41588,"kha.graphics2.Graphics.popTransformation","kha/graphics2/Graphics.hx",107,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 108)		HX_VARI(  ::kha::math::FastMatrix3,ret) = this->transformations->pop().StaticCast<  ::kha::math::FastMatrix3 >();
HXLINE( 109)		 ::kha::math::FastMatrix3 _hx_tmp = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 109)		this->setTransformation(_hx_tmp);
HXLINE( 110)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popTransformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::get_transformation(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_transformation",0xa3e37884,"kha.graphics2.Graphics.get_transformation","kha/graphics2/Graphics.hx",114,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 114)		return this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_transformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::set_transformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_transformation",0x8092aaf8,"kha.graphics2.Graphics.set_transformation","kha/graphics2/Graphics.hx",117,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(transformation,"transformation")
HXLINE( 118)		this->setTransformation(transformation);
HXLINE( 119)		Int _hx_tmp = (this->transformations->length - (int)1);
HXDLIN( 119)		return (this->transformations[_hx_tmp] = transformation);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_transformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::translation(float tx,float ty){
            	HX_STACK_FRAME("kha.graphics2.Graphics","translation",0x4d918cbf,"kha.graphics2.Graphics.translation","kha/graphics2/Graphics.hx",123,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(tx,"tx")
            	HX_STACK_ARG(ty,"ty")
HXLINE( 122)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 122)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 122)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 122)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 122)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 122)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 122)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 123)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 123)		return  ::kha::math::FastMatrix3_obj::__new((((_this__00 * m->_00) + (_this__10 * m->_01)) + (tx * m->_02)),(((_this__00 * m->_10) + (_this__10 * m->_11)) + (tx * m->_12)),(((_this__00 * m->_20) + (_this__10 * m->_21)) + (tx * m->_22)),(((_this__01 * m->_00) + (_this__11 * m->_01)) + (ty * m->_02)),(((_this__01 * m->_10) + (_this__11 * m->_11)) + (ty * m->_12)),(((_this__01 * m->_20) + (_this__11 * m->_21)) + (ty * m->_22)),(((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02)),(((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12)),(((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translation,return )

void Graphics_obj::translate(float tx,float ty){
            	HX_STACK_FRAME("kha.graphics2.Graphics","translate",0x4491039c,"kha.graphics2.Graphics.translate","kha/graphics2/Graphics.hx",127,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(tx,"tx")
            	HX_STACK_ARG(ty,"ty")
HXLINE( 126)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 126)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 126)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 126)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 126)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 126)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 126)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 127)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 127)		HX_VARI(  ::kha::math::FastMatrix3,transformation) =  ::kha::math::FastMatrix3_obj::__new((((_this__00 * m->_00) + (_this__10 * m->_01)) + (tx * m->_02)),(((_this__00 * m->_10) + (_this__10 * m->_11)) + (tx * m->_12)),(((_this__00 * m->_20) + (_this__10 * m->_21)) + (tx * m->_22)),(((_this__01 * m->_00) + (_this__11 * m->_01)) + (ty * m->_02)),(((_this__01 * m->_10) + (_this__11 * m->_11)) + (ty * m->_12)),(((_this__01 * m->_20) + (_this__11 * m->_21)) + (ty * m->_22)),(((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02)),(((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12)),(((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22)));
HXDLIN( 127)		this->setTransformation(transformation);
HXDLIN( 127)		Int _hx_tmp = (this->transformations->length - (int)1);
HXDLIN( 127)		this->transformations[_hx_tmp] = transformation;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translate,(void))

void Graphics_obj::pushTranslation(float tx,float ty){
            	HX_STACK_FRAME("kha.graphics2.Graphics","pushTranslation",0x1b230c05,"kha.graphics2.Graphics.pushTranslation","kha/graphics2/Graphics.hx",131,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(tx,"tx")
            	HX_STACK_ARG(ty,"ty")
HXLINE( 130)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 130)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 130)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 130)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 130)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 130)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 130)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 131)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 131)		float _hx_tmp = (((_this__00 * m->_00) + (_this__10 * m->_01)) + (tx * m->_02));
HXDLIN( 131)		float _hx_tmp1 = (((_this__00 * m->_10) + (_this__10 * m->_11)) + (tx * m->_12));
HXDLIN( 131)		float _hx_tmp2 = (((_this__00 * m->_20) + (_this__10 * m->_21)) + (tx * m->_22));
HXDLIN( 131)		float _hx_tmp3 = (((_this__01 * m->_00) + (_this__11 * m->_01)) + (ty * m->_02));
HXDLIN( 131)		float _hx_tmp4 = (((_this__01 * m->_10) + (_this__11 * m->_11)) + (ty * m->_12));
HXDLIN( 131)		float _hx_tmp5 = (((_this__01 * m->_20) + (_this__11 * m->_21)) + (ty * m->_22));
HXDLIN( 131)		float _hx_tmp6 = (((_this__02 * m->_00) + (_this__12 * m->_01)) + (_this__22 * m->_02));
HXDLIN( 131)		float _hx_tmp7 = (((_this__02 * m->_10) + (_this__12 * m->_11)) + (_this__22 * m->_12));
HXDLIN( 131)		float _hx_tmp8 = (((_this__02 * m->_20) + (_this__12 * m->_21)) + (_this__22 * m->_22));
HXDLIN( 131)		this->pushTransformation( ::kha::math::FastMatrix3_obj::__new(_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,pushTranslation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::rotation(float angle,float centerx,float centery){
            	HX_STACK_FRAME("kha.graphics2.Graphics","rotation",0x4d6194b0,"kha.graphics2.Graphics.rotation","kha/graphics2/Graphics.hx",135,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(angle,"angle")
            	HX_STACK_ARG(centerx,"centerx")
            	HX_STACK_ARG(centery,"centery")
HXLINE( 134)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 134)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 134)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 134)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 134)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 134)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 134)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 135)		float _00 = ::Math_obj::cos(angle);
HXDLIN( 135)		float _10 = -(::Math_obj::sin(angle));
HXDLIN( 135)		float _01 = ::Math_obj::sin(angle);
HXDLIN( 135)		float _11 = ::Math_obj::cos(angle);
HXLINE( 134)		HX_VARI( float,m__20) = (int)0;
HXDLIN( 134)		HX_VARI( float,m__21) = (int)0;
HXDLIN( 134)		HX_VARI( float,m__02) = (int)0;
HXDLIN( 134)		HX_VARI( float,m__12) = (int)0;
HXDLIN( 134)		HX_VARI( float,m__22) = (int)1;
HXLINE( 135)		float _001 = (((_this__00 * _00) + (_this__10 * _01)) + (centerx * m__02));
HXDLIN( 135)		float _101 = (((_this__00 * _10) + (_this__10 * _11)) + (centerx * m__12));
HXDLIN( 135)		float _20 = (((_this__00 * m__20) + (_this__10 * m__21)) + (centerx * m__22));
HXDLIN( 135)		float _011 = (((_this__01 * _00) + (_this__11 * _01)) + (centery * m__02));
HXDLIN( 135)		float _111 = (((_this__01 * _10) + (_this__11 * _11)) + (centery * m__12));
HXDLIN( 135)		float _21 = (((_this__01 * m__20) + (_this__11 * m__21)) + (centery * m__22));
HXDLIN( 135)		float _02 = (((_this__02 * _00) + (_this__12 * _01)) + (_this__22 * m__02));
HXDLIN( 135)		float _12 = (((_this__02 * _10) + (_this__12 * _11)) + (_this__22 * m__12));
HXDLIN( 135)		float _22 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXLINE( 134)		HX_VARI( float,m__00) = (int)1;
HXDLIN( 134)		HX_VARI( float,m__10) = (int)0;
HXDLIN( 134)		HX_VARI_NAME( float,m__201,"m__20") = -(centerx);
HXDLIN( 134)		HX_VARI( float,m__01) = (int)0;
HXDLIN( 134)		HX_VARI( float,m__11) = (int)1;
HXDLIN( 134)		HX_VARI_NAME( float,m__211,"m__21") = -(centery);
HXDLIN( 134)		HX_VARI_NAME( float,m__021,"m__02") = (int)0;
HXDLIN( 134)		HX_VARI_NAME( float,m__121,"m__12") = (int)0;
HXDLIN( 134)		HX_VARI_NAME( float,m__221,"m__22") = (int)1;
HXLINE( 135)		float _002 = (((_001 * m__00) + (_101 * m__01)) + (_20 * m__021));
HXDLIN( 135)		float _102 = (((_001 * m__10) + (_101 * m__11)) + (_20 * m__121));
HXDLIN( 135)		float _201 = (((_001 * m__201) + (_101 * m__211)) + (_20 * m__221));
HXDLIN( 135)		float _012 = (((_011 * m__00) + (_111 * m__01)) + (_21 * m__021));
HXDLIN( 135)		float _112 = (((_011 * m__10) + (_111 * m__11)) + (_21 * m__121));
HXDLIN( 135)		float _211 = (((_011 * m__201) + (_111 * m__211)) + (_21 * m__221));
HXDLIN( 135)		float _021 = (((_02 * m__00) + (_12 * m__01)) + (_22 * m__021));
HXDLIN( 135)		float _121 = (((_02 * m__10) + (_12 * m__11)) + (_22 * m__121));
HXDLIN( 135)		float _221 = (((_02 * m__201) + (_12 * m__211)) + (_22 * m__221));
HXDLIN( 135)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 135)		return  ::kha::math::FastMatrix3_obj::__new((((_002 * m->_00) + (_102 * m->_01)) + (_201 * m->_02)),(((_002 * m->_10) + (_102 * m->_11)) + (_201 * m->_12)),(((_002 * m->_20) + (_102 * m->_21)) + (_201 * m->_22)),(((_012 * m->_00) + (_112 * m->_01)) + (_211 * m->_02)),(((_012 * m->_10) + (_112 * m->_11)) + (_211 * m->_12)),(((_012 * m->_20) + (_112 * m->_21)) + (_211 * m->_22)),(((_021 * m->_00) + (_121 * m->_01)) + (_221 * m->_02)),(((_021 * m->_10) + (_121 * m->_11)) + (_221 * m->_12)),(((_021 * m->_20) + (_121 * m->_21)) + (_221 * m->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotation,return )

void Graphics_obj::rotate(float angle,float centerx,float centery){
            	HX_STACK_FRAME("kha.graphics2.Graphics","rotate",0xe7ca7d4d,"kha.graphics2.Graphics.rotate","kha/graphics2/Graphics.hx",139,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(angle,"angle")
            	HX_STACK_ARG(centerx,"centerx")
            	HX_STACK_ARG(centery,"centery")
HXLINE( 138)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 138)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 138)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 138)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 138)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 138)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 138)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 139)		float _00 = ::Math_obj::cos(angle);
HXDLIN( 139)		float _10 = -(::Math_obj::sin(angle));
HXDLIN( 139)		float _01 = ::Math_obj::sin(angle);
HXDLIN( 139)		float _11 = ::Math_obj::cos(angle);
HXLINE( 138)		HX_VARI( float,m__20) = (int)0;
HXDLIN( 138)		HX_VARI( float,m__21) = (int)0;
HXDLIN( 138)		HX_VARI( float,m__02) = (int)0;
HXDLIN( 138)		HX_VARI( float,m__12) = (int)0;
HXDLIN( 138)		HX_VARI( float,m__22) = (int)1;
HXLINE( 139)		float _001 = (((_this__00 * _00) + (_this__10 * _01)) + (centerx * m__02));
HXDLIN( 139)		float _101 = (((_this__00 * _10) + (_this__10 * _11)) + (centerx * m__12));
HXDLIN( 139)		float _20 = (((_this__00 * m__20) + (_this__10 * m__21)) + (centerx * m__22));
HXDLIN( 139)		float _011 = (((_this__01 * _00) + (_this__11 * _01)) + (centery * m__02));
HXDLIN( 139)		float _111 = (((_this__01 * _10) + (_this__11 * _11)) + (centery * m__12));
HXDLIN( 139)		float _21 = (((_this__01 * m__20) + (_this__11 * m__21)) + (centery * m__22));
HXDLIN( 139)		float _02 = (((_this__02 * _00) + (_this__12 * _01)) + (_this__22 * m__02));
HXDLIN( 139)		float _12 = (((_this__02 * _10) + (_this__12 * _11)) + (_this__22 * m__12));
HXDLIN( 139)		float _22 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXLINE( 138)		HX_VARI( float,m__00) = (int)1;
HXDLIN( 138)		HX_VARI( float,m__10) = (int)0;
HXDLIN( 138)		HX_VARI_NAME( float,m__201,"m__20") = -(centerx);
HXDLIN( 138)		HX_VARI( float,m__01) = (int)0;
HXDLIN( 138)		HX_VARI( float,m__11) = (int)1;
HXDLIN( 138)		HX_VARI_NAME( float,m__211,"m__21") = -(centery);
HXDLIN( 138)		HX_VARI_NAME( float,m__021,"m__02") = (int)0;
HXDLIN( 138)		HX_VARI_NAME( float,m__121,"m__12") = (int)0;
HXDLIN( 138)		HX_VARI_NAME( float,m__221,"m__22") = (int)1;
HXLINE( 139)		float _002 = (((_001 * m__00) + (_101 * m__01)) + (_20 * m__021));
HXDLIN( 139)		float _102 = (((_001 * m__10) + (_101 * m__11)) + (_20 * m__121));
HXDLIN( 139)		float _201 = (((_001 * m__201) + (_101 * m__211)) + (_20 * m__221));
HXDLIN( 139)		float _012 = (((_011 * m__00) + (_111 * m__01)) + (_21 * m__021));
HXDLIN( 139)		float _112 = (((_011 * m__10) + (_111 * m__11)) + (_21 * m__121));
HXDLIN( 139)		float _211 = (((_011 * m__201) + (_111 * m__211)) + (_21 * m__221));
HXDLIN( 139)		float _021 = (((_02 * m__00) + (_12 * m__01)) + (_22 * m__021));
HXDLIN( 139)		float _121 = (((_02 * m__10) + (_12 * m__11)) + (_22 * m__121));
HXDLIN( 139)		float _221 = (((_02 * m__201) + (_12 * m__211)) + (_22 * m__221));
HXDLIN( 139)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 139)		HX_VARI(  ::kha::math::FastMatrix3,transformation) =  ::kha::math::FastMatrix3_obj::__new((((_002 * m->_00) + (_102 * m->_01)) + (_201 * m->_02)),(((_002 * m->_10) + (_102 * m->_11)) + (_201 * m->_12)),(((_002 * m->_20) + (_102 * m->_21)) + (_201 * m->_22)),(((_012 * m->_00) + (_112 * m->_01)) + (_211 * m->_02)),(((_012 * m->_10) + (_112 * m->_11)) + (_211 * m->_12)),(((_012 * m->_20) + (_112 * m->_21)) + (_211 * m->_22)),(((_021 * m->_00) + (_121 * m->_01)) + (_221 * m->_02)),(((_021 * m->_10) + (_121 * m->_11)) + (_221 * m->_12)),(((_021 * m->_20) + (_121 * m->_21)) + (_221 * m->_22)));
HXDLIN( 139)		this->setTransformation(transformation);
HXDLIN( 139)		Int _hx_tmp = (this->transformations->length - (int)1);
HXDLIN( 139)		this->transformations[_hx_tmp] = transformation;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotate,(void))

void Graphics_obj::pushRotation(float angle,float centerx,float centery){
            	HX_STACK_FRAME("kha.graphics2.Graphics","pushRotation",0x6da66daa,"kha.graphics2.Graphics.pushRotation","kha/graphics2/Graphics.hx",143,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(angle,"angle")
            	HX_STACK_ARG(centerx,"centerx")
            	HX_STACK_ARG(centery,"centery")
HXLINE( 142)		HX_VARI( float,_this__00) = (int)1;
HXDLIN( 142)		HX_VARI( float,_this__10) = (int)0;
HXDLIN( 142)		HX_VARI( float,_this__01) = (int)0;
HXDLIN( 142)		HX_VARI( float,_this__11) = (int)1;
HXDLIN( 142)		HX_VARI( float,_this__02) = (int)0;
HXDLIN( 142)		HX_VARI( float,_this__12) = (int)0;
HXDLIN( 142)		HX_VARI( float,_this__22) = (int)1;
HXLINE( 143)		float _00 = ::Math_obj::cos(angle);
HXDLIN( 143)		float _10 = -(::Math_obj::sin(angle));
HXDLIN( 143)		float _01 = ::Math_obj::sin(angle);
HXDLIN( 143)		float _11 = ::Math_obj::cos(angle);
HXLINE( 142)		HX_VARI( float,m__20) = (int)0;
HXDLIN( 142)		HX_VARI( float,m__21) = (int)0;
HXDLIN( 142)		HX_VARI( float,m__02) = (int)0;
HXDLIN( 142)		HX_VARI( float,m__12) = (int)0;
HXDLIN( 142)		HX_VARI( float,m__22) = (int)1;
HXLINE( 143)		float _001 = (((_this__00 * _00) + (_this__10 * _01)) + (centerx * m__02));
HXDLIN( 143)		float _101 = (((_this__00 * _10) + (_this__10 * _11)) + (centerx * m__12));
HXDLIN( 143)		float _20 = (((_this__00 * m__20) + (_this__10 * m__21)) + (centerx * m__22));
HXDLIN( 143)		float _011 = (((_this__01 * _00) + (_this__11 * _01)) + (centery * m__02));
HXDLIN( 143)		float _111 = (((_this__01 * _10) + (_this__11 * _11)) + (centery * m__12));
HXDLIN( 143)		float _21 = (((_this__01 * m__20) + (_this__11 * m__21)) + (centery * m__22));
HXDLIN( 143)		float _02 = (((_this__02 * _00) + (_this__12 * _01)) + (_this__22 * m__02));
HXDLIN( 143)		float _12 = (((_this__02 * _10) + (_this__12 * _11)) + (_this__22 * m__12));
HXDLIN( 143)		float _22 = (((_this__02 * m__20) + (_this__12 * m__21)) + (_this__22 * m__22));
HXLINE( 142)		HX_VARI( float,m__00) = (int)1;
HXDLIN( 142)		HX_VARI( float,m__10) = (int)0;
HXDLIN( 142)		HX_VARI_NAME( float,m__201,"m__20") = -(centerx);
HXDLIN( 142)		HX_VARI( float,m__01) = (int)0;
HXDLIN( 142)		HX_VARI( float,m__11) = (int)1;
HXDLIN( 142)		HX_VARI_NAME( float,m__211,"m__21") = -(centery);
HXDLIN( 142)		HX_VARI_NAME( float,m__021,"m__02") = (int)0;
HXDLIN( 142)		HX_VARI_NAME( float,m__121,"m__12") = (int)0;
HXDLIN( 142)		HX_VARI_NAME( float,m__221,"m__22") = (int)1;
HXLINE( 143)		float _002 = (((_001 * m__00) + (_101 * m__01)) + (_20 * m__021));
HXDLIN( 143)		float _102 = (((_001 * m__10) + (_101 * m__11)) + (_20 * m__121));
HXDLIN( 143)		float _201 = (((_001 * m__201) + (_101 * m__211)) + (_20 * m__221));
HXDLIN( 143)		float _012 = (((_011 * m__00) + (_111 * m__01)) + (_21 * m__021));
HXDLIN( 143)		float _112 = (((_011 * m__10) + (_111 * m__11)) + (_21 * m__121));
HXDLIN( 143)		float _211 = (((_011 * m__201) + (_111 * m__211)) + (_21 * m__221));
HXDLIN( 143)		float _021 = (((_02 * m__00) + (_12 * m__01)) + (_22 * m__021));
HXDLIN( 143)		float _121 = (((_02 * m__10) + (_12 * m__11)) + (_22 * m__121));
HXDLIN( 143)		float _221 = (((_02 * m__201) + (_12 * m__211)) + (_22 * m__221));
HXDLIN( 143)		HX_VARI(  ::kha::math::FastMatrix3,m) = this->transformations->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 143)		float _hx_tmp = (((_002 * m->_00) + (_102 * m->_01)) + (_201 * m->_02));
HXDLIN( 143)		float _hx_tmp1 = (((_002 * m->_10) + (_102 * m->_11)) + (_201 * m->_12));
HXDLIN( 143)		float _hx_tmp2 = (((_002 * m->_20) + (_102 * m->_21)) + (_201 * m->_22));
HXDLIN( 143)		float _hx_tmp3 = (((_012 * m->_00) + (_112 * m->_01)) + (_211 * m->_02));
HXDLIN( 143)		float _hx_tmp4 = (((_012 * m->_10) + (_112 * m->_11)) + (_211 * m->_12));
HXDLIN( 143)		float _hx_tmp5 = (((_012 * m->_20) + (_112 * m->_21)) + (_211 * m->_22));
HXDLIN( 143)		float _hx_tmp6 = (((_021 * m->_00) + (_121 * m->_01)) + (_221 * m->_02));
HXDLIN( 143)		float _hx_tmp7 = (((_021 * m->_10) + (_121 * m->_11)) + (_221 * m->_12));
HXDLIN( 143)		float _hx_tmp8 = (((_021 * m->_20) + (_121 * m->_21)) + (_221 * m->_22));
HXDLIN( 143)		this->pushTransformation( ::kha::math::FastMatrix3_obj::__new(_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,pushRotation,(void))

void Graphics_obj::pushOpacity(Float opacity){
            	HX_STACK_FRAME("kha.graphics2.Graphics","pushOpacity",0xbdee1edf,"kha.graphics2.Graphics.pushOpacity","kha/graphics2/Graphics.hx",148,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(opacity,"opacity")
HXLINE( 149)		this->setOpacity(opacity);
HXLINE( 150)		this->opacities->push(opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushOpacity,(void))

Float Graphics_obj::popOpacity(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","popOpacity",0x09ff042c,"kha.graphics2.Graphics.popOpacity","kha/graphics2/Graphics.hx",153,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 154)		HX_VARI(  ::Dynamic,ret) = this->opacities->pop();
HXLINE( 155)		Float _hx_tmp = this->get_opacity();
HXDLIN( 155)		this->setOpacity(_hx_tmp);
HXLINE( 156)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popOpacity,return )

Float Graphics_obj::get_opacity(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_opacity",0x344f19b0,"kha.graphics2.Graphics.get_opacity","kha/graphics2/Graphics.hx",160,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 160)		return this->opacities->__get((this->opacities->length - (int)1));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_opacity,return )

Float Graphics_obj::set_opacity(Float opacity){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_opacity",0x3ebc20bc,"kha.graphics2.Graphics.set_opacity","kha/graphics2/Graphics.hx",163,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(opacity,"opacity")
HXLINE( 164)		this->setOpacity(opacity);
HXLINE( 165)		Int _hx_tmp = (this->opacities->length - (int)1);
HXDLIN( 165)		return (this->opacities[_hx_tmp] = opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_opacity,return )

void Graphics_obj::scissor(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("kha.graphics2.Graphics","scissor",0xfd2d04ea,"kha.graphics2.Graphics.scissor","kha/graphics2/Graphics.hx",168,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,scissor,(void))

void Graphics_obj::disableScissor(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","disableScissor",0x2d6bec06,"kha.graphics2.Graphics.disableScissor","kha/graphics2/Graphics.hx",172,0x8ef16900)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,disableScissor,(void))

 ::kha::graphics4::PipelineState Graphics_obj::get_pipeline(){
            	HX_STACK_FRAME("kha.graphics2.Graphics","get_pipeline",0xcf1e679d,"kha.graphics2.Graphics.get_pipeline","kha/graphics2/Graphics.hx",182,0x8ef16900)
            	HX_STACK_THIS(this)
HXLINE( 182)		return this->pipe;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_pipeline,return )

 ::kha::graphics4::PipelineState Graphics_obj::set_pipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_STACK_FRAME("kha.graphics2.Graphics","set_pipeline",0xe4178b11,"kha.graphics2.Graphics.set_pipeline","kha/graphics2/Graphics.hx",185,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pipeline,"pipeline")
HXLINE( 186)		this->setPipeline(pipeline);
HXLINE( 187)		return (this->pipe = pipeline);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_pipeline,return )

void Graphics_obj::setTransformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACK_FRAME("kha.graphics2.Graphics","setTransformation",0x57bc6f59,"kha.graphics2.Graphics.setTransformation","kha/graphics2/Graphics.hx",211,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(transformation,"transformation")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setTransformation,(void))

void Graphics_obj::setOpacity(Float opacity){
            	HX_STACK_FRAME("kha.graphics2.Graphics","setOpacity",0xf23a1a3b,"kha.graphics2.Graphics.setOpacity","kha/graphics2/Graphics.hx",215,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(opacity,"opacity")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setOpacity,(void))

void Graphics_obj::setPipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_STACK_FRAME("kha.graphics2.Graphics","setPipeline",0x3ed3e0b2,"kha.graphics2.Graphics.setPipeline","kha/graphics2/Graphics.hx",219,0x8ef16900)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pipeline,"pipeline")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setPipeline,(void))


Graphics_obj::Graphics_obj()
{
}

void Graphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics);
	HX_MARK_MEMBER_NAME(pipe,"pipe");
	HX_MARK_MEMBER_NAME(transformations,"transformations");
	HX_MARK_MEMBER_NAME(opacities,"opacities");
	HX_MARK_MEMBER_NAME(myFontSize,"myFontSize");
	HX_MARK_MEMBER_NAME(myFontGlyphs,"myFontGlyphs");
	HX_MARK_END_CLASS();
}

void Graphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pipe,"pipe");
	HX_VISIT_MEMBER_NAME(transformations,"transformations");
	HX_VISIT_MEMBER_NAME(opacities,"opacities");
	HX_VISIT_MEMBER_NAME(myFontSize,"myFontSize");
	HX_VISIT_MEMBER_NAME(myFontGlyphs,"myFontGlyphs");
}

hx::Val Graphics_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_font()); }
		if (HX_FIELD_EQ(inName,"pipe") ) { return hx::Val( pipe); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn()); }
		if (HX_FIELD_EQ(inName,"flush") ) { return hx::Val( flush_dyn()); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_color()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rotate") ) { return hx::Val( rotate_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_opacity()); }
		if (HX_FIELD_EQ(inName,"scissor") ) { return hx::Val( scissor_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return hx::Val( drawRect_dyn()); }
		if (HX_FIELD_EQ(inName,"fillRect") ) { return hx::Val( fillRect_dyn()); }
		if (HX_FIELD_EQ(inName,"drawLine") ) { return hx::Val( drawLine_dyn()); }
		if (HX_FIELD_EQ(inName,"get_font") ) { return hx::Val( get_font_dyn()); }
		if (HX_FIELD_EQ(inName,"set_font") ) { return hx::Val( set_font_dyn()); }
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fontSize()); }
		if (HX_FIELD_EQ(inName,"rotation") ) { return hx::Val( rotation_dyn()); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_pipeline()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"drawImage") ) { return hx::Val( drawImage_dyn()); }
		if (HX_FIELD_EQ(inName,"drawVideo") ) { return hx::Val( drawVideo_dyn()); }
		if (HX_FIELD_EQ(inName,"get_color") ) { return hx::Val( get_color_dyn()); }
		if (HX_FIELD_EQ(inName,"set_color") ) { return hx::Val( set_color_dyn()); }
		if (HX_FIELD_EQ(inName,"translate") ) { return hx::Val( translate_dyn()); }
		if (HX_FIELD_EQ(inName,"opacities") ) { return hx::Val( opacities); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawString") ) { return hx::Val( drawString_dyn()); }
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fontGlyphs()); }
		if (HX_FIELD_EQ(inName,"popOpacity") ) { return hx::Val( popOpacity_dyn()); }
		if (HX_FIELD_EQ(inName,"myFontSize") ) { return hx::Val( myFontSize); }
		if (HX_FIELD_EQ(inName,"setOpacity") ) { return hx::Val( setOpacity_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"translation") ) { return hx::Val( translation_dyn()); }
		if (HX_FIELD_EQ(inName,"pushOpacity") ) { return hx::Val( pushOpacity_dyn()); }
		if (HX_FIELD_EQ(inName,"get_opacity") ) { return hx::Val( get_opacity_dyn()); }
		if (HX_FIELD_EQ(inName,"set_opacity") ) { return hx::Val( set_opacity_dyn()); }
		if (HX_FIELD_EQ(inName,"setPipeline") ) { return hx::Val( setPipeline_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"drawSubImage") ) { return hx::Val( drawSubImage_dyn()); }
		if (HX_FIELD_EQ(inName,"fillTriangle") ) { return hx::Val( fillTriangle_dyn()); }
		if (HX_FIELD_EQ(inName,"get_fontSize") ) { return hx::Val( get_fontSize_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fontSize") ) { return hx::Val( set_fontSize_dyn()); }
		if (HX_FIELD_EQ(inName,"pushRotation") ) { return hx::Val( pushRotation_dyn()); }
		if (HX_FIELD_EQ(inName,"get_pipeline") ) { return hx::Val( get_pipeline_dyn()); }
		if (HX_FIELD_EQ(inName,"set_pipeline") ) { return hx::Val( set_pipeline_dyn()); }
		if (HX_FIELD_EQ(inName,"myFontGlyphs") ) { return hx::Val( myFontGlyphs); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_fontGlyphs") ) { return hx::Val( get_fontGlyphs_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fontGlyphs") ) { return hx::Val( set_fontGlyphs_dyn()); }
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_transformation()); }
		if (HX_FIELD_EQ(inName,"disableScissor") ) { return hx::Val( disableScissor_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"drawScaledImage") ) { return hx::Val( drawScaledImage_dyn()); }
		if (HX_FIELD_EQ(inName,"pushTranslation") ) { return hx::Val( pushTranslation_dyn()); }
		if (HX_FIELD_EQ(inName,"transformations") ) { return hx::Val( transformations); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_imageScaleQuality()); }
		if (HX_FIELD_EQ(inName,"popTransformation") ) { return hx::Val( popTransformation_dyn()); }
		if (HX_FIELD_EQ(inName,"setTransformation") ) { return hx::Val( setTransformation_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"drawScaledSubImage") ) { return hx::Val( drawScaledSubImage_dyn()); }
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_mipmapScaleQuality()); }
		if (HX_FIELD_EQ(inName,"pushTransformation") ) { return hx::Val( pushTransformation_dyn()); }
		if (HX_FIELD_EQ(inName,"get_transformation") ) { return hx::Val( get_transformation_dyn()); }
		if (HX_FIELD_EQ(inName,"set_transformation") ) { return hx::Val( set_transformation_dyn()); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_imageScaleQuality") ) { return hx::Val( get_imageScaleQuality_dyn()); }
		if (HX_FIELD_EQ(inName,"set_imageScaleQuality") ) { return hx::Val( set_imageScaleQuality_dyn()); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_mipmapScaleQuality") ) { return hx::Val( get_mipmapScaleQuality_dyn()); }
		if (HX_FIELD_EQ(inName,"set_mipmapScaleQuality") ) { return hx::Val( set_mipmapScaleQuality_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Graphics_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_font(inValue) ); }
		if (HX_FIELD_EQ(inName,"pipe") ) { pipe=inValue.Cast<  ::kha::graphics4::PipelineState >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_color(inValue) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_opacity(inValue) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontSize(inValue) ); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pipeline(inValue) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"opacities") ) { opacities=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontGlyphs(inValue) ); }
		if (HX_FIELD_EQ(inName,"myFontSize") ) { myFontSize=inValue.Cast< Int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"myFontGlyphs") ) { myFontGlyphs=inValue.Cast< ::Array< Int > >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_transformation(inValue) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"transformations") ) { transformations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_imageScaleQuality(inValue) ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_mipmapScaleQuality(inValue) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Graphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("imageScaleQuality","\x50","\x2b","\x30","\x75"));
	outFields->push(HX_HCSTRING("mipmapScaleQuality","\xfd","\x48","\x4e","\x0a"));
	outFields->push(HX_HCSTRING("color","\x63","\x71","\x5c","\x4a"));
	outFields->push(HX_HCSTRING("font","\xcf","\x5d","\xc0","\x43"));
	outFields->push(HX_HCSTRING("fontSize","\x30","\xbe","\xd1","\xce"));
	outFields->push(HX_HCSTRING("fontGlyphs","\x76","\x90","\xac","\x62"));
	outFields->push(HX_HCSTRING("transformation","\xc9","\xbd","\x2f","\x0a"));
	outFields->push(HX_HCSTRING("opacity","\xcb","\x5d","\x65","\xeb"));
	outFields->push(HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a"));
	outFields->push(HX_HCSTRING("pipeline","\x22","\xbb","\x83","\x4b"));
	outFields->push(HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf"));
	outFields->push(HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95"));
	outFields->push(HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c"));
	outFields->push(HX_HCSTRING("myFontGlyphs","\x02","\xf3","\xff","\x40"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Graphics_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::kha::graphics4::PipelineState*/ ,(int)offsetof(Graphics_obj,pipe),HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Graphics_obj,transformations),HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf")},
	{hx::fsObject /*Array< Float >*/ ,(int)offsetof(Graphics_obj,opacities),HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95")},
	{hx::fsInt,(int)offsetof(Graphics_obj,myFontSize),HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c")},
	{hx::fsObject /*Array< int >*/ ,(int)offsetof(Graphics_obj,myFontGlyphs),HX_HCSTRING("myFontGlyphs","\x02","\xf3","\xff","\x40")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Graphics_obj_sStaticStorageInfo = 0;
#endif

static ::String Graphics_obj_sMemberFields[] = {
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("drawImage","\xb7","\x54","\x74","\x85"),
	HX_HCSTRING("drawSubImage","\xdf","\x01","\x7c","\x08"),
	HX_HCSTRING("drawScaledImage","\xbd","\x98","\x4d","\xc9"),
	HX_HCSTRING("drawScaledSubImage","\x99","\x85","\xbc","\xe8"),
	HX_HCSTRING("drawRect","\x48","\xf7","\x10","\x60"),
	HX_HCSTRING("fillRect","\x47","\x45","\xb9","\x6c"),
	HX_HCSTRING("drawString","\xf5","\xa3","\xf3","\x52"),
	HX_HCSTRING("drawLine","\x18","\xc2","\x1c","\x5c"),
	HX_HCSTRING("drawVideo","\xd7","\x49","\x07","\xff"),
	HX_HCSTRING("fillTriangle","\x6b","\x04","\x3a","\x92"),
	HX_HCSTRING("get_imageScaleQuality","\x27","\x2e","\xde","\xf3"),
	HX_HCSTRING("set_imageScaleQuality","\x33","\xfc","\xe6","\x47"),
	HX_HCSTRING("get_mipmapScaleQuality","\x46","\xc2","\xe2","\x63"),
	HX_HCSTRING("set_mipmapScaleQuality","\xba","\x3e","\x8e","\x97"),
	HX_HCSTRING("get_color","\xba","\xcd","\x05","\x8e"),
	HX_HCSTRING("set_color","\xc6","\xb9","\x56","\x71"),
	HX_HCSTRING("get_font","\x58","\x19","\x7b","\xc3"),
	HX_HCSTRING("set_font","\xcc","\x72","\xd8","\x71"),
	HX_HCSTRING("get_fontSize","\x39","\x72","\xeb","\x83"),
	HX_HCSTRING("set_fontSize","\xad","\x95","\xe4","\x98"),
	HX_HCSTRING("get_fontGlyphs","\xbf","\x18","\xa2","\xd8"),
	HX_HCSTRING("set_fontGlyphs","\x33","\x01","\xc2","\xf8"),
	HX_HCSTRING("pushTransformation","\x43","\x2d","\x88","\x9a"),
	HX_HCSTRING("popTransformation","\x3a","\xeb","\x28","\x8b"),
	HX_HCSTRING("get_transformation","\x92","\x9e","\xc9","\xa5"),
	HX_HCSTRING("set_transformation","\x06","\xd1","\x78","\x82"),
	HX_HCSTRING("translation","\xf1","\x30","\xa2","\x8a"),
	HX_HCSTRING("translate","\x4e","\xd7","\x7f","\x49"),
	HX_HCSTRING("pushTranslation","\x37","\xb1","\x5e","\xa1"),
	HX_HCSTRING("rotation","\x3e","\x3d","\x86","\x08"),
	HX_HCSTRING("rotate","\x5b","\x46","\x20","\xcb"),
	HX_HCSTRING("pushRotation","\x38","\x75","\x25","\x9f"),
	HX_HCSTRING("pushOpacity","\x11","\xc3","\xfe","\xfa"),
	HX_HCSTRING("popOpacity","\x3a","\x6c","\x09","\x56"),
	HX_HCSTRING("get_opacity","\xe2","\xbd","\x5f","\x71"),
	HX_HCSTRING("set_opacity","\xee","\xc4","\xcc","\x7b"),
	HX_HCSTRING("scissor","\x1c","\x28","\xe7","\x04"),
	HX_HCSTRING("disableScissor","\x14","\x73","\x66","\x02"),
	HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a"),
	HX_HCSTRING("get_pipeline","\x2b","\x6f","\x9d","\x00"),
	HX_HCSTRING("set_pipeline","\x9f","\x92","\x96","\x15"),
	HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf"),
	HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95"),
	HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c"),
	HX_HCSTRING("myFontGlyphs","\x02","\xf3","\xff","\x40"),
	HX_HCSTRING("setTransformation","\x0b","\x45","\x11","\xa0"),
	HX_HCSTRING("setOpacity","\x49","\x82","\x44","\x3e"),
	HX_HCSTRING("setPipeline","\xe4","\x84","\xe4","\x7b"),
	::String(null()) };

static void Graphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics_obj::__mClass,"__mClass");
};

#endif

hx::Class Graphics_obj::__mClass;

void Graphics_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.graphics2.Graphics","\x3c","\xbf","\x49","\x32");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Graphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Graphics_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Graphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics2
