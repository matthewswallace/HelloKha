// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_rect
#include <kha/graphics2/truetype/Stbtt_temp_rect.h>
#endif

namespace kha{
namespace graphics2{
namespace truetype{

void Stbtt_temp_rect_obj::__construct(){
            	HX_STACK_FRAME("kha.graphics2.truetype.Stbtt_temp_rect","new",0x2f49c48e,"kha.graphics2.truetype.Stbtt_temp_rect.new","kha/graphics2/truetype/StbTruetype.hx",22,0x5d9e0de9)
            	HX_STACK_THIS(this)
            	}

Dynamic Stbtt_temp_rect_obj::__CreateEmpty() { return new Stbtt_temp_rect_obj; }

hx::ObjectPtr< Stbtt_temp_rect_obj > Stbtt_temp_rect_obj::__new()
{
	hx::ObjectPtr< Stbtt_temp_rect_obj > _hx_result = new Stbtt_temp_rect_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Stbtt_temp_rect_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Stbtt_temp_rect_obj > _hx_result = new Stbtt_temp_rect_obj();
	_hx_result->__construct();
	return _hx_result;
}


Stbtt_temp_rect_obj::Stbtt_temp_rect_obj()
{
}

hx::Val Stbtt_temp_rect_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { return hx::Val( x0); }
		if (HX_FIELD_EQ(inName,"y0") ) { return hx::Val( y0); }
		if (HX_FIELD_EQ(inName,"x1") ) { return hx::Val( x1); }
		if (HX_FIELD_EQ(inName,"y1") ) { return hx::Val( y1); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Stbtt_temp_rect_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { x0=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y0") ) { y0=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"x1") ) { x1=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y1") ) { y1=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Stbtt_temp_rect_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("x0","\xb8","\x68","\x00","\x00"));
	outFields->push(HX_HCSTRING("y0","\x97","\x69","\x00","\x00"));
	outFields->push(HX_HCSTRING("x1","\xb9","\x68","\x00","\x00"));
	outFields->push(HX_HCSTRING("y1","\x98","\x69","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Stbtt_temp_rect_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Stbtt_temp_rect_obj,x0),HX_HCSTRING("x0","\xb8","\x68","\x00","\x00")},
	{hx::fsInt,(int)offsetof(Stbtt_temp_rect_obj,y0),HX_HCSTRING("y0","\x97","\x69","\x00","\x00")},
	{hx::fsInt,(int)offsetof(Stbtt_temp_rect_obj,x1),HX_HCSTRING("x1","\xb9","\x68","\x00","\x00")},
	{hx::fsInt,(int)offsetof(Stbtt_temp_rect_obj,y1),HX_HCSTRING("y1","\x98","\x69","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Stbtt_temp_rect_obj_sStaticStorageInfo = 0;
#endif

static ::String Stbtt_temp_rect_obj_sMemberFields[] = {
	HX_HCSTRING("x0","\xb8","\x68","\x00","\x00"),
	HX_HCSTRING("y0","\x97","\x69","\x00","\x00"),
	HX_HCSTRING("x1","\xb9","\x68","\x00","\x00"),
	HX_HCSTRING("y1","\x98","\x69","\x00","\x00"),
	::String(null()) };

static void Stbtt_temp_rect_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Stbtt_temp_rect_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Stbtt_temp_rect_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Stbtt_temp_rect_obj::__mClass,"__mClass");
};

#endif

hx::Class Stbtt_temp_rect_obj::__mClass;

void Stbtt_temp_rect_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.graphics2.truetype.Stbtt_temp_rect","\x9c","\x25","\x15","\x3c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Stbtt_temp_rect_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Stbtt_temp_rect_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Stbtt_temp_rect_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Stbtt_temp_rect_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stbtt_temp_rect_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stbtt_temp_rect_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics2
} // end namespace truetype
