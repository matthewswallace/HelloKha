// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_kha_graphics4_MipMapFilter
#include <kha/graphics4/MipMapFilter.h>
#endif
namespace kha{
namespace graphics4{

::kha::graphics4::MipMapFilter MipMapFilter_obj::LinearMipFilter;

::kha::graphics4::MipMapFilter MipMapFilter_obj::NoMipFilter;

::kha::graphics4::MipMapFilter MipMapFilter_obj::PointMipFilter;

bool MipMapFilter_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LinearMipFilter",a7,bd,f1,45)) { outValue = MipMapFilter_obj::LinearMipFilter; return true; }
	if (inName==HX_("NoMipFilter",cb,93,89,77)) { outValue = MipMapFilter_obj::NoMipFilter; return true; }
	if (inName==HX_("PointMipFilter",1c,c2,ef,60)) { outValue = MipMapFilter_obj::PointMipFilter; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(MipMapFilter_obj)

int MipMapFilter_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LinearMipFilter",a7,bd,f1,45)) return 2;
	if (inName==HX_("NoMipFilter",cb,93,89,77)) return 0;
	if (inName==HX_("PointMipFilter",1c,c2,ef,60)) return 1;
	return super::__FindIndex(inName);
}

int MipMapFilter_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LinearMipFilter",a7,bd,f1,45)) return 0;
	if (inName==HX_("NoMipFilter",cb,93,89,77)) return 0;
	if (inName==HX_("PointMipFilter",1c,c2,ef,60)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val MipMapFilter_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LinearMipFilter",a7,bd,f1,45)) return LinearMipFilter;
	if (inName==HX_("NoMipFilter",cb,93,89,77)) return NoMipFilter;
	if (inName==HX_("PointMipFilter",1c,c2,ef,60)) return PointMipFilter;
	return super::__Field(inName,inCallProp);
}

static ::String MipMapFilter_obj_sStaticFields[] = {
	HX_("NoMipFilter",cb,93,89,77),
	HX_("PointMipFilter",1c,c2,ef,60),
	HX_("LinearMipFilter",a7,bd,f1,45),
	::String(null())
};

static void MipMapFilter_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MipMapFilter_obj::LinearMipFilter,"LinearMipFilter");
	HX_MARK_MEMBER_NAME(MipMapFilter_obj::NoMipFilter,"NoMipFilter");
	HX_MARK_MEMBER_NAME(MipMapFilter_obj::PointMipFilter,"PointMipFilter");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MipMapFilter_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MipMapFilter_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MipMapFilter_obj::LinearMipFilter,"LinearMipFilter");
	HX_VISIT_MEMBER_NAME(MipMapFilter_obj::NoMipFilter,"NoMipFilter");
	HX_VISIT_MEMBER_NAME(MipMapFilter_obj::PointMipFilter,"PointMipFilter");
};
#endif

hx::Class MipMapFilter_obj::__mClass;

Dynamic __Create_MipMapFilter_obj() { return new MipMapFilter_obj; }

void MipMapFilter_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("kha.graphics4.MipMapFilter","\xef","\x70","\x16","\x15"), hx::TCanCast< MipMapFilter_obj >,MipMapFilter_obj_sStaticFields,0,
	&__Create_MipMapFilter_obj, &__Create,
	&super::__SGetClass(), &CreateMipMapFilter_obj, MipMapFilter_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , MipMapFilter_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &MipMapFilter_obj::__GetStatic;
}

void MipMapFilter_obj::__boot()
{
LinearMipFilter = hx::CreateEnum< MipMapFilter_obj >(HX_HCSTRING("LinearMipFilter","\xa7","\xbd","\xf1","\x45"),2,0);
NoMipFilter = hx::CreateEnum< MipMapFilter_obj >(HX_HCSTRING("NoMipFilter","\xcb","\x93","\x89","\x77"),0,0);
PointMipFilter = hx::CreateEnum< MipMapFilter_obj >(HX_HCSTRING("PointMipFilter","\x1c","\xc2","\xef","\x60"),1,0);
}


} // end namespace kha
} // end namespace graphics4
