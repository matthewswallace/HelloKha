// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Codebook
#define INCLUDED_kha_audio2_ogg_vorbis_data_Codebook

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(kha,audio2,ogg,vorbis,VorbisDecodeState)
HX_DECLARE_CLASS5(kha,audio2,ogg,vorbis,data,Codebook)

namespace kha{
namespace audio2{
namespace ogg{
namespace vorbis{
namespace data{


class HXCPP_CLASS_ATTRIBUTES Codebook_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Codebook_obj OBJ_;
		Codebook_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.audio2.ogg.vorbis.data.Codebook")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.audio2.ogg.vorbis.data.Codebook"); }
		static hx::ObjectPtr< Codebook_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Codebook_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Codebook","\xf6","\x8b","\x46","\x64"); }

		static void __boot();
		static Int NO_CODE;
		static  ::kha::audio2::ogg::vorbis::data::Codebook read( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState);
		static ::Dynamic read_dyn();

		static Int delay;
		Int dimensions;
		Int entries;
		::Array< Int > codewordLengths;
		Float minimumValue;
		Float deltaValue;
		Int valueBits;
		Int lookupType;
		Bool sequenceP;
		Bool sparse;
		Int lookupValues;
		::Array< Float > multiplicands;
		::Array< Int > codewords;
		::Array< Int > fastHuffman;
		::Array< Int > sortedCodewords;
		::Array< Int > sortedValues;
		Int sortedEntries;
		void addEntry(Int huffCode,Int symbol,Int count,Int len,::Array< Int > values);
		::Dynamic addEntry_dyn();

		Bool includeInSort(Int len);
		::Dynamic includeInSort_dyn();

		Bool computeCodewords(::Array< Int > len,Int n,::Array< Int > values);
		::Dynamic computeCodewords_dyn();

		void computeSortedHuffman(::Array< Int > lengths,::Array< Int > values);
		::Dynamic computeSortedHuffman_dyn();

		void computeAcceleratedHuffman();
		::Dynamic computeAcceleratedHuffman_dyn();

		Bool codebookDecode( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState,::Array< Float > output,Int offset,Int len);
		::Dynamic codebookDecode_dyn();

		Bool codebookDecodeStep( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState,::Array< Float > output,Int offset,Int len,Int step);
		::Dynamic codebookDecodeStep_dyn();

		Int decodeStart( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState);
		::Dynamic decodeStart_dyn();

		 ::Dynamic decodeDeinterleaveRepeat( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState,::Array< ::Dynamic> residueBuffers,Int ch,Int cInter,Int pInter,Int len,Int totalDecode);
		::Dynamic decodeDeinterleaveRepeat_dyn();

		Bool residueDecode( ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState,::Array< Float > target,Int offset,Int n,Int rtype);
		::Dynamic residueDecode_dyn();

};

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace vorbis
} // end namespace data

#endif /* INCLUDED_kha_audio2_ogg_vorbis_data_Codebook */ 
