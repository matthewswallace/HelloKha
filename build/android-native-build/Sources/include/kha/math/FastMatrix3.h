// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_math_FastMatrix3
#define INCLUDED_kha_math_FastMatrix3

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(kha,math,FastMatrix3)
HX_DECLARE_CLASS2(kha,math,Matrix3)

namespace kha{
namespace math{


class HXCPP_CLASS_ATTRIBUTES FastMatrix3_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FastMatrix3_obj OBJ_;
		FastMatrix3_obj();

	public:
		void __construct(float _00,float _10,float _20,float _01,float _11,float _21,float _02,float _12,float _22);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha.math.FastMatrix3")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"kha.math.FastMatrix3"); }
		static hx::ObjectPtr< FastMatrix3_obj > __new(float _00,float _10,float _20,float _01,float _11,float _21,float _02,float _12,float _22);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FastMatrix3_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("FastMatrix3","\x76","\x0b","\x0f","\x27"); }

		static void __boot();
		static Int width;
		static Int height;
		static  ::kha::math::FastMatrix3 fromMatrix3( ::kha::math::Matrix3 m);
		static ::Dynamic fromMatrix3_dyn();

		float _00;
		float _10;
		float _20;
		float _01;
		float _11;
		float _21;
		float _02;
		float _12;
		float _22;
};

} // end namespace kha
} // end namespace math

#endif /* INCLUDED_kha_math_FastMatrix3 */ 
