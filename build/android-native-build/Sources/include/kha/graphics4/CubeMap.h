// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_graphics4_CubeMap
#define INCLUDED_kha_graphics4_CubeMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(kha,graphics4,CubeMap)

namespace kha{
namespace graphics4{


class HXCPP_CLASS_ATTRIBUTES CubeMap_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		Int (hx::Object :: *_hx_get_size)(); 
		static inline Int get_size( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::kha::graphics4::CubeMap_obj *>(_hx_.mPtr->_hx_getInterface(0x098c5082)))->_hx_get_size)();
		}
		 ::haxe::io::Bytes (hx::Object :: *_hx_lock)(); 
		static inline  ::haxe::io::Bytes lock( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::kha::graphics4::CubeMap_obj *>(_hx_.mPtr->_hx_getInterface(0x098c5082)))->_hx_lock)();
		}
		void (hx::Object :: *_hx_unlock)(); 
		static inline void unlock( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::kha::graphics4::CubeMap_obj *>(_hx_.mPtr->_hx_getInterface(0x098c5082)))->_hx_unlock)();
		}
};

} // end namespace kha
} // end namespace graphics4

#endif /* INCLUDED_kha_graphics4_CubeMap */ 
