// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_graphics4_GeometryShader
#define INCLUDED_kha_graphics4_GeometryShader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Blob)
HX_DECLARE_CLASS2(kha,graphics4,GeometryShader)


#include <Kore/pch.h>
#include <Kore/Graphics/Graphics.h>

namespace kha{
namespace graphics4{


class HXCPP_CLASS_ATTRIBUTES GeometryShader_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GeometryShader_obj OBJ_;
		GeometryShader_obj();

	public:
		void __construct( ::kha::Blob source,::String file);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha.graphics4.GeometryShader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"kha.graphics4.GeometryShader"); }
		static hx::ObjectPtr< GeometryShader_obj > __new( ::kha::Blob source,::String file);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GeometryShader_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("GeometryShader","\x97","\xdb","\x4d","\xc8"); }

		void _hx_delete();
		::Dynamic _hx_delete_dyn();

Kore::Shader* shader;
};

} // end namespace kha
} // end namespace graphics4

#endif /* INCLUDED_kha_graphics4_GeometryShader */ 
