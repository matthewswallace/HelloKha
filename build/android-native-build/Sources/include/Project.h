// Generated by Haxe 3.3.0
#ifndef INCLUDED_Project
#define INCLUDED_Project

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Project)
HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Font)
HX_DECLARE_CLASS1(kha,Framebuffer)
HX_DECLARE_CLASS1(kha,Resource)



class HXCPP_CLASS_ATTRIBUTES Project_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Project_obj OBJ_;
		Project_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Project")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Project"); }
		static hx::ObjectPtr< Project_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Project_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Project","\xb9","\x3a","\x3c","\xc3"); }

		::Dynamic font1;
		void loadedEverything();
		::Dynamic loadedEverything_dyn();

		void render( ::kha::Framebuffer framebuffer);
		::Dynamic render_dyn();

};


#endif /* INCLUDED_Project */ 
