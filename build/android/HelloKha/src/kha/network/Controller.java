// Generated by Haxe 3.3.0
package kha.network;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Controller extends haxe.lang.HxObject
{
	public Controller(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Controller()
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		kha.network.Controller.__hx_ctor_kha_network_Controller(this);
	}
	
	
	public static void __hx_ctor_kha_network_Controller(kha.network.Controller __temp_me106)
	{
		//line 12 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		__temp_me106.__id = kha.network.ControllerBuilder.nextId++;
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		__temp_me106._inputBuffer = haxe.io.Bytes.alloc(1);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		return new kha.network.Controller(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		return new kha.network.Controller();
	}
	
	
	public int __id;
	
	public int _inputBufferIndex;
	
	public haxe.io.Bytes _inputBuffer;
	
	public int _id()
	{
		//line 17 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		return this.__id;
	}
	
	
	public void _receive(haxe.io.Bytes bytes)
	{
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			switch (field.hashCode())
			{
				case -2069422937:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBufferIndex")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this._inputBufferIndex = ((int) (value) );
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return value;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 2924795:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("__id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this.__id = ((int) (value) );
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return value;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			switch (field.hashCode())
			{
				case -1414154517:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBuffer")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this._inputBuffer = ((haxe.io.Bytes) (value) );
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return value;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 2924795:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("__id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this.__id = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return value;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case -2069422937:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBufferIndex")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this._inputBufferIndex = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return value;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			switch (field.hashCode())
			{
				case -854451804:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_receive")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "_receive")) );
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 2924795:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("__id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return this.__id;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 94650:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "_id")) );
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case -2069422937:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBufferIndex")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return this._inputBufferIndex;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case -1414154517:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBuffer")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return this._inputBuffer;
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			switch (field.hashCode())
			{
				case -2069422937:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_inputBufferIndex")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return ((double) (this._inputBufferIndex) );
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 2924795:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("__id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return ((double) (this.__id) );
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			switch (field.hashCode())
			{
				case -854451804:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_receive")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						this._receive(((haxe.io.Bytes) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
				case 94650:
				{
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					if (field.equals("_id")) 
					{
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
						return this._id();
					}
					
					//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		baseArr.push("_inputBuffer");
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		baseArr.push("_inputBufferIndex");
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		baseArr.push("__id");
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
		{
			//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/network/Controller.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


