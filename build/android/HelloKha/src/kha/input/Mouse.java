// Generated by Haxe 3.3.0
package kha.input;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Mouse extends kha.network.Controller
{
	static
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			java.lang.Object __temp_odecl5 = null;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				java.lang.Object __temp_odecl1 = new haxe.lang.DynamicObject(new java.lang.String[]{"input"}, new java.lang.Object[]{null}, new java.lang.String[]{}, new double[]{});
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				java.lang.Object __temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"input"}, new java.lang.Object[]{null}, new java.lang.String[]{}, new double[]{});
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				java.lang.Object __temp_odecl3 = new haxe.lang.DynamicObject(new java.lang.String[]{"input"}, new java.lang.Object[]{null}, new java.lang.String[]{}, new double[]{});
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				java.lang.Object __temp_odecl4 = new haxe.lang.DynamicObject(new java.lang.String[]{"input"}, new java.lang.Object[]{null}, new java.lang.String[]{}, new double[]{});
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				__temp_odecl5 = new haxe.lang.DynamicObject(new java.lang.String[]{"sendDownEvent", "sendMoveEvent", "sendUpEvent", "sendWheelEvent"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl3, __temp_odecl2, __temp_odecl4}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			kha.input.Mouse.__meta__ = new haxe.lang.DynamicObject(new java.lang.String[]{"fields"}, new java.lang.Object[]{__temp_odecl5}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	public Mouse(haxe.lang.EmptyObject empty)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public Mouse()
	{
		//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		super(haxe.lang.EmptyObject.EMPTY);
		//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		kha.input.Mouse.__hx_ctor_kha_input_Mouse(this);
	}
	
	
	public static void __hx_ctor_kha_input_Mouse(kha.input.Mouse __temp_me190)
	{
		//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		kha.network.Controller.__hx_ctor_kha_network_Controller(__temp_me190);
		//line 160 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		kha.input.Mouse.instance = __temp_me190;
	}
	
	
	public static java.lang.Object __meta__;
	
	public static kha.input.Mouse get(java.lang.Object num)
	{
		//line 9 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		int __temp_num189 = ( (haxe.lang.Runtime.eq(num, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(num)) )) );
		//line 9 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return kha.SystemImpl.getMouse(__temp_num189);
	}
	
	
	public static kha.input.Mouse instance;
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return new kha.input.Mouse(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return new kha.input.Mouse();
	}
	
	
	public void notify(haxe.lang.Function downListener, haxe.lang.Function upListener, haxe.lang.Function moveListener, haxe.lang.Function wheelListener)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		this.notifyWindowed(0, downListener, upListener, moveListener, wheelListener);
	}
	
	
	public void remove(haxe.lang.Function downListener, haxe.lang.Function upListener, haxe.lang.Function moveListener, haxe.lang.Function wheelListener)
	{
		//line 17 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		this.removeWindowed(0, downListener, upListener, moveListener, wheelListener);
	}
	
	
	public void notifyWindowed(int windowId, haxe.lang.Function downListener, haxe.lang.Function upListener, haxe.lang.Function moveListener, haxe.lang.Function wheelListener)
	{
		//line 21 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( downListener != null );
		//line 21 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 22 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp1 = ( this.windowDownListeners == null );
			//line 22 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp1) 
			{
				//line 23 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowDownListeners = new haxe.root.Array<haxe.root.Array<haxe.lang.Function>>();
			}
			
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( this.windowDownListeners.length <= windowId ))
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowDownListeners.push(new haxe.root.Array<haxe.lang.Function>());
			}
			
			//line 30 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			this.windowDownListeners.__get(windowId).push(downListener);
		}
		
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp2 = ( upListener != null );
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp2) 
		{
			//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp3 = ( this.windowUpListeners == null );
			//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp3) 
			{
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowUpListeners = new haxe.root.Array<haxe.root.Array<haxe.lang.Function>>();
			}
			
			//line 38 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( this.windowUpListeners.length <= windowId ))
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowUpListeners.push(new haxe.root.Array<haxe.lang.Function>());
			}
			
			//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			this.windowUpListeners.__get(windowId).push(upListener);
		}
		
		//line 45 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp4 = ( moveListener != null );
		//line 45 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp4) 
		{
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp5 = ( this.windowMoveListeners == null );
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp5) 
			{
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowMoveListeners = new haxe.root.Array<haxe.root.Array<haxe.lang.Function>>();
			}
			
			//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( this.windowMoveListeners.length <= windowId ))
			{
				//line 51 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowMoveListeners.push(new haxe.root.Array<haxe.lang.Function>());
			}
			
			//line 54 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			this.windowMoveListeners.__get(windowId).push(moveListener);
		}
		
		//line 57 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp6 = ( wheelListener != null );
		//line 57 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp6) 
		{
			//line 58 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp7 = ( this.windowWheelListeners == null );
			//line 58 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp7) 
			{
				//line 59 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowWheelListeners = new haxe.root.Array<haxe.root.Array<haxe.lang.Function>>();
			}
			
			//line 62 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( this.windowWheelListeners.length <= windowId ))
			{
				//line 63 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				this.windowWheelListeners.push(new haxe.root.Array<haxe.lang.Function>());
			}
			
			//line 66 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			this.windowWheelListeners.__get(windowId).push(wheelListener);
		}
		
	}
	
	
	public void removeWindowed(int windowId, haxe.lang.Function downListener, haxe.lang.Function upListener, haxe.lang.Function moveListener, haxe.lang.Function wheelListener)
	{
		//line 71 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( downListener != null );
		//line 71 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp1 = ( this.windowDownListeners != null );
			//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp1) 
			{
				//line 73 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				if (( windowId < this.windowDownListeners.length )) 
				{
					//line 74 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					this.windowDownListeners.__get(windowId).remove(downListener);
				}
				else
				{
					//line 76 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "no downListeners for window \"" + windowId ) + "\" are registered" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
				}
				
			}
			else
			{
				//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "no downListeners were ever registered", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (79) )) )}));
			}
			
		}
		
		//line 83 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp2 = ( upListener != null );
		//line 83 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp2) 
		{
			//line 84 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp3 = ( this.windowUpListeners != null );
			//line 84 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp3) 
			{
				//line 85 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				if (( windowId < this.windowUpListeners.length )) 
				{
					//line 86 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					this.windowUpListeners.__get(windowId).remove(upListener);
				}
				else
				{
					//line 88 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "no upListeners for window \"" + windowId ) + "\" are registered" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (88) )) )}));
				}
				
			}
			else
			{
				//line 91 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "no upListeners were ever registered", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (91) )) )}));
			}
			
		}
		
		//line 95 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp4 = ( moveListener != null );
		//line 95 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp4) 
		{
			//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp5 = ( this.windowMoveListeners != null );
			//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp5) 
			{
				//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				if (( windowId < this.windowMoveListeners.length )) 
				{
					//line 98 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					this.windowMoveListeners.__get(windowId).remove(moveListener);
				}
				else
				{
					//line 100 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "no moveListeners for window \"" + windowId ) + "\" are registered" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (100) )) )}));
				}
				
			}
			else
			{
				//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "no moveListeners were ever registered", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (103) )) )}));
			}
			
		}
		
		//line 107 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp6 = ( wheelListener != null );
		//line 107 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp6) 
		{
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean tmp7 = ( this.windowWheelListeners != null );
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (tmp7) 
			{
				//line 109 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				if (( windowId < this.windowWheelListeners.length )) 
				{
					//line 110 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					this.windowWheelListeners.__get(windowId).remove(wheelListener);
				}
				else
				{
					//line 112 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "no wheelListeners for window \"" + windowId ) + "\" are registered" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (112) )) )}));
				}
				
			}
			else
			{
				//line 115 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "no wheelListeners were ever registered", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.input.Mouse", "Mouse.hx", "removeWindowed"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (115) )) )}));
			}
			
		}
		
	}
	
	
	public void lock()
	{
	}
	
	
	public void unlock()
	{
	}
	
	
	public boolean canLock()
	{
		//line 129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return false;
	}
	
	
	public boolean isLocked()
	{
		//line 133 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return false;
	}
	
	
	public void notifyOnLockChange(haxe.lang.Function func, haxe.lang.Function error)
	{
	}
	
	
	public void removeFromLockChange(haxe.lang.Function func, haxe.lang.Function error)
	{
	}
	
	
	public void hideSystemCursor()
	{
	}
	
	
	public void showSystemCursor()
	{
	}
	
	
	public haxe.root.Array<haxe.root.Array<haxe.lang.Function>> windowDownListeners;
	
	public haxe.root.Array<haxe.root.Array<haxe.lang.Function>> windowUpListeners;
	
	public haxe.root.Array<haxe.root.Array<haxe.lang.Function>> windowMoveListeners;
	
	public haxe.root.Array<haxe.root.Array<haxe.lang.Function>> windowWheelListeners;
	
	public void sendDownEvent(int windowId, int button, int x, int y)
	{
		//line 165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( this.windowDownListeners != null );
		//line 165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			int _g = 0;
			//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			haxe.root.Array<haxe.lang.Function> _g1 = this.windowDownListeners.__get(windowId);
			//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( _g < _g1.length ))
			{
				//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.lang.Function listener = _g1.__get(_g);
				//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				 ++ _g;
				//line 167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				listener.__hx_invoke3_o(((double) (button) ), haxe.lang.Runtime.undefined, ((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined);
			}
			
		}
		
	}
	
	
	public void sendUpEvent(int windowId, int button, int x, int y)
	{
		//line 174 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( this.windowUpListeners != null );
		//line 174 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			int _g = 0;
			//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			haxe.root.Array<haxe.lang.Function> _g1 = this.windowUpListeners.__get(windowId);
			//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( _g < _g1.length ))
			{
				//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.lang.Function listener = _g1.__get(_g);
				//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				 ++ _g;
				//line 176 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				listener.__hx_invoke3_o(((double) (button) ), haxe.lang.Runtime.undefined, ((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined);
			}
			
		}
		
	}
	
	
	public void sendMoveEvent(int windowId, int x, int y, int movementX, int movementY)
	{
		//line 183 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( this.windowMoveListeners != null );
		//line 183 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			int _g = 0;
			//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			haxe.root.Array<haxe.lang.Function> _g1 = this.windowMoveListeners.__get(windowId);
			//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( _g < _g1.length ))
			{
				//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.lang.Function listener = _g1.__get(_g);
				//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				 ++ _g;
				//line 185 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				listener.__hx_invoke4_o(((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined, ((double) (movementX) ), haxe.lang.Runtime.undefined, ((double) (movementY) ), haxe.lang.Runtime.undefined);
			}
			
		}
		
	}
	
	
	public void sendWheelEvent(int windowId, int delta)
	{
		//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		boolean tmp = ( this.windowWheelListeners != null );
		//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		if (tmp) 
		{
			//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			int _g = 0;
			//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			haxe.root.Array<haxe.lang.Function> _g1 = this.windowWheelListeners.__get(windowId);
			//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			while (( _g < _g1.length ))
			{
				//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				haxe.lang.Function listener = _g1.__get(_g);
				//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				 ++ _g;
				//line 194 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				listener.__hx_invoke1_o(((double) (delta) ), haxe.lang.Runtime.undefined);
			}
			
		}
		
	}
	
	
	@Override public void _receive(haxe.io.Bytes bytes)
	{
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			switch (field.hashCode())
			{
				case 1075368244:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowWheelListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.windowWheelListeners = ((haxe.root.Array<haxe.root.Array<haxe.lang.Function>>) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 29171117:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowDownListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.windowDownListeners = ((haxe.root.Array<haxe.root.Array<haxe.lang.Function>>) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 954116958:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowMoveListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.windowMoveListeners = ((haxe.root.Array<haxe.root.Array<haxe.lang.Function>>) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1475811284:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowUpListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.windowUpListeners = ((haxe.root.Array<haxe.root.Array<haxe.lang.Function>>) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			switch (field.hashCode())
			{
				case -854451804:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("_receive")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "_receive")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1039689911:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notify")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "notify")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -541357657:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendWheelEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendWheelEvent")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -934610812:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("remove")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "remove")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1251691169:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendMoveEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendMoveEvent")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 828591864:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notifyWindowed")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "notifyWindowed")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -525919209:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendUpEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendUpEvent")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1585136947:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("removeWindowed")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "removeWindowed")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1484078192:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendDownEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendDownEvent")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 3327275:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("lock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "lock")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1075368244:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowWheelListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.windowWheelListeners;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -840442044:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("unlock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "unlock")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 954116958:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowMoveListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.windowMoveListeners;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 549540123:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("canLock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "canLock")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1475811284:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowUpListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.windowUpListeners;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -423418668:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("isLocked")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isLocked")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 29171117:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("windowDownListeners")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.windowDownListeners;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 634756579:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notifyOnLockChange")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "notifyOnLockChange")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1766223362:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("showSystemCursor")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "showSystemCursor")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1488622167:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("removeFromLockChange")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "removeFromLockChange")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1742786361:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("hideSystemCursor")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hideSystemCursor")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			switch (field.hashCode())
			{
				case -854451804:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("_receive")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return haxe.lang.Runtime.slowCallField(this, field, dynargs);
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1039689911:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notify")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.notify(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ), ((haxe.lang.Function) (dynargs.__get(3)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -541357657:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendWheelEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.sendWheelEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -934610812:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("remove")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.remove(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ), ((haxe.lang.Function) (dynargs.__get(3)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1251691169:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendMoveEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.sendMoveEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(4))) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 828591864:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notifyWindowed")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.notifyWindowed(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ), ((haxe.lang.Function) (dynargs.__get(3)) ), ((haxe.lang.Function) (dynargs.__get(4)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -525919209:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendUpEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.sendUpEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1585136947:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("removeWindowed")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.removeWindowed(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ), ((haxe.lang.Function) (dynargs.__get(3)) ), ((haxe.lang.Function) (dynargs.__get(4)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1484078192:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("sendDownEvent")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.sendDownEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 3327275:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("lock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.lock();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 1766223362:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("showSystemCursor")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.showSystemCursor();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -840442044:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("unlock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.unlock();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1742786361:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("hideSystemCursor")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.hideSystemCursor();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 549540123:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("canLock")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.canLock();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -1488622167:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("removeFromLockChange")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.removeFromLockChange(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case -423418668:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("isLocked")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						return this.isLocked();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
				case 634756579:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					if (field.equals("notifyOnLockChange")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
						this.notifyOnLockChange(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		baseArr.push("windowWheelListeners");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		baseArr.push("windowMoveListeners");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		baseArr.push("windowUpListeners");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		baseArr.push("windowDownListeners");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Mouse.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


