// Generated by Haxe 3.3.0
package kha.input;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Surface extends haxe.lang.HxObject
{
	public Surface(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Surface()
	{
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		kha.input.Surface.__hx_ctor_kha_input_Surface(this);
	}
	
	
	public static void __hx_ctor_kha_input_Surface(kha.input.Surface __temp_me192)
	{
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		__temp_me192.touchStartListeners = new haxe.root.Array<haxe.lang.Function>();
		//line 30 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		__temp_me192.touchEndListeners = new haxe.root.Array<haxe.lang.Function>();
		//line 31 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		__temp_me192.moveListeners = new haxe.root.Array<haxe.lang.Function>();
		//line 32 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		kha.input.Surface.instance = __temp_me192;
	}
	
	
	public static kha.input.Surface get(java.lang.Object num)
	{
		//line 6 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		int __temp_num191 = ( (haxe.lang.Runtime.eq(num, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(num)) )) );
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (( __temp_num191 != 0 )) 
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			return null;
		}
		
		//line 8 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		return kha.input.Surface.instance;
	}
	
	
	public static kha.input.Surface instance;
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		return new kha.input.Surface(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		return new kha.input.Surface();
	}
	
	
	public void notify(haxe.lang.Function touchStartListener, haxe.lang.Function touchEndListener, haxe.lang.Function moveListener)
	{
		//line 12 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp = ( touchStartListener != null );
		//line 12 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp) 
		{
			//line 12 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.touchStartListeners.push(touchStartListener);
		}
		
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp1 = ( touchEndListener != null );
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp1) 
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.touchEndListeners.push(touchEndListener);
		}
		
		//line 14 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp2 = ( moveListener != null );
		//line 14 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp2) 
		{
			//line 14 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.moveListeners.push(moveListener);
		}
		
	}
	
	
	public void remove(haxe.lang.Function touchStartListener, haxe.lang.Function touchEndListener, haxe.lang.Function moveListener)
	{
		//line 18 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp = ( touchStartListener != null );
		//line 18 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp) 
		{
			//line 18 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.touchStartListeners.remove(touchStartListener);
		}
		
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp1 = ( touchEndListener != null );
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp1) 
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.touchEndListeners.remove(touchEndListener);
		}
		
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		boolean tmp2 = ( moveListener != null );
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		if (tmp2) 
		{
			//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			this.moveListeners.push(moveListener);
		}
		
	}
	
	
	public haxe.root.Array<haxe.lang.Function> touchStartListeners;
	
	public haxe.root.Array<haxe.lang.Function> touchEndListeners;
	
	public haxe.root.Array<haxe.lang.Function> moveListeners;
	
	public void sendTouchStartEvent(int index, int x, int y)
	{
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		int _g = 0;
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		haxe.root.Array<haxe.lang.Function> _g1 = this.touchStartListeners;
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		while (( _g < _g1.length ))
		{
			//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			haxe.lang.Function listener = _g1.__get(_g);
			//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			 ++ _g;
			//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			listener.__hx_invoke3_o(((double) (index) ), haxe.lang.Runtime.undefined, ((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined);
		}
		
	}
	
	
	public void sendTouchEndEvent(int index, int x, int y)
	{
		//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		int _g = 0;
		//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		haxe.root.Array<haxe.lang.Function> _g1 = this.touchEndListeners;
		//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		while (( _g < _g1.length ))
		{
			//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			haxe.lang.Function listener = _g1.__get(_g);
			//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			 ++ _g;
			//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			listener.__hx_invoke3_o(((double) (index) ), haxe.lang.Runtime.undefined, ((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined);
		}
		
	}
	
	
	public void sendMoveEvent(int index, int x, int y)
	{
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		int _g = 0;
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		haxe.root.Array<haxe.lang.Function> _g1 = this.moveListeners;
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		while (( _g < _g1.length ))
		{
			//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			haxe.lang.Function listener = _g1.__get(_g);
			//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			 ++ _g;
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			listener.__hx_invoke3_o(((double) (index) ), haxe.lang.Runtime.undefined, ((double) (x) ), haxe.lang.Runtime.undefined, ((double) (y) ), haxe.lang.Runtime.undefined);
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		{
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			switch (field.hashCode())
			{
				case 352481646:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("moveListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.moveListeners = ((haxe.root.Array<haxe.lang.Function>) (value) );
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return value;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case 1831308572:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("touchStartListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.touchStartListeners = ((haxe.root.Array<haxe.lang.Function>) (value) );
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return value;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case 1394834563:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("touchEndListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.touchEndListeners = ((haxe.root.Array<haxe.lang.Function>) (value) );
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return value;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		{
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			switch (field.hashCode())
			{
				case 1251691169:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendMoveEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendMoveEvent")) );
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -1039689911:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("notify")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "notify")) );
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -724911050:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendTouchEndEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendTouchEndEvent")) );
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -934610812:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("remove")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "remove")) );
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -1302918321:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendTouchStartEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sendTouchStartEvent")) );
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case 1831308572:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("touchStartListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return this.touchStartListeners;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case 352481646:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("moveListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return this.moveListeners;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case 1394834563:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("touchEndListeners")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						return this.touchEndListeners;
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		{
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			switch (field.hashCode())
			{
				case 1251691169:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendMoveEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.sendMoveEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ));
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -1039689911:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("notify")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.notify(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ));
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -724911050:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendTouchEndEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.sendTouchEndEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ));
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -934610812:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("remove")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.remove(((haxe.lang.Function) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ), ((haxe.lang.Function) (dynargs.__get(2)) ));
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
				case -1302918321:
				{
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					if (field.equals("sendTouchStartEvent")) 
					{
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
						this.sendTouchStartEvent(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ));
					}
					
					//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		baseArr.push("moveListeners");
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		baseArr.push("touchEndListeners");
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		baseArr.push("touchStartListeners");
		//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
		{
			//line 5 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/input/Surface.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


