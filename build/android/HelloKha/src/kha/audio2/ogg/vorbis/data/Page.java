// Generated by Haxe 3.3.0
package kha.audio2.ogg.vorbis.data;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Page extends haxe.lang.HxObject
{
	public Page(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Page()
	{
		//line 14 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		kha.audio2.ogg.vorbis.data.Page.__hx_ctor_kha_audio2_ogg_vorbis_data_Page(this);
	}
	
	
	public static void __hx_ctor_kha_audio2_ogg_vorbis_data_Page(kha.audio2.ogg.vorbis.data.Page __temp_me134)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		return new kha.audio2.ogg.vorbis.data.Page(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		return new kha.audio2.ogg.vorbis.data.Page();
	}
	
	
	public int flag;
	
	public kha.audio2.ogg.vorbis.data.Page clone()
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		kha.audio2.ogg.vorbis.data.Page page = new kha.audio2.ogg.vorbis.data.Page();
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		page.flag = this.flag;
		//line 21 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		return page;
	}
	
	
	public void start(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState)
	{
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		boolean tmp = false;
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		boolean tmp1 = false;
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		boolean tmp2 = false;
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.inputPosition += 1;
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		if (( decodeState.input.readByte() == 79 )) 
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 1;
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp2 = ( decodeState.input.readByte() != 103 );
		}
		else
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp2 = true;
		}
		
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		if ( ! (tmp2) ) 
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 1;
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp1 = ( decodeState.input.readByte() != 103 );
		}
		else
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp1 = true;
		}
		
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		if ( ! (tmp1) ) 
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 1;
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp = ( decodeState.input.readByte() != 83 );
		}
		else
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			tmp = true;
		}
		
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		if (tmp) 
		{
			//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.MISSING_CAPTURE_PATTERN, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "capturePattern"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (323) )) )})));
		}
		
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		this.startWithoutCapturePattern(decodeState);
	}
	
	
	public void startWithoutCapturePattern(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState)
	{
		//line 32 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.inputPosition += 1;
		//line 32 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		int version = decodeState.input.readByte();
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		if (( version != 0 )) 
		{
			//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION, ( "" + version ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Page", "Page.hx", "startWithoutCapturePattern"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )})));
		}
		
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.inputPosition += 1;
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		this.flag = decodeState.input.readByte();
		//line 38 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.inputPosition += 4;
		//line 38 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		int loc0 = decodeState.input.readInt32();
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.inputPosition += 4;
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		int loc1 = decodeState.input.readInt32();
		//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 4;
			//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.input.readInt32();
		}
		
		//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 4;
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.input.readInt32();
		}
		
		//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.inputPosition += 4;
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			decodeState.input.readInt32();
		}
		
		//line 52 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		decodeState.setup(loc0, loc1);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			switch (field.hashCode())
			{
				case 3145580:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("flag")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						this.flag = ((int) (value) );
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return value;
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			switch (field.hashCode())
			{
				case 3145580:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("flag")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						this.flag = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return value;
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			switch (field.hashCode())
			{
				case -2108134128:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("startWithoutCapturePattern")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "startWithoutCapturePattern")) );
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
				case 3145580:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("flag")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return this.flag;
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
				case 109757538:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("start")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "start")) );
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
				case 94756189:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("clone")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "clone")) );
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			switch (field.hashCode())
			{
				case 3145580:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("flag")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return ((double) (this.flag) );
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			switch (field.hashCode())
			{
				case -2108134128:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("startWithoutCapturePattern")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						this.startWithoutCapturePattern(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ));
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
				case 94756189:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("clone")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						return this.clone();
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
				case 109757538:
				{
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					if (field.equals("start")) 
					{
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
						this.start(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ));
					}
					
					//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		baseArr.push("flag");
		//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
		{
			//line 11 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Page.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


