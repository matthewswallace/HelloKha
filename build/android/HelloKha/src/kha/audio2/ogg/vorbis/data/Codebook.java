// Generated by Haxe 3.3.0
package kha.audio2.ogg.vorbis.data;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Codebook extends haxe.lang.HxObject
{
	static
	{
		//line 15 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		kha.audio2.ogg.vorbis.data.Codebook.NO_CODE = 255;
		//line 480 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		kha.audio2.ogg.vorbis.data.Codebook.delay = 0;
	}
	
	public Codebook(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Codebook()
	{
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		kha.audio2.ogg.vorbis.data.Codebook.__hx_ctor_kha_audio2_ogg_vorbis_data_Codebook(this);
	}
	
	
	public static void __hx_ctor_kha_audio2_ogg_vorbis_data_Codebook(kha.audio2.ogg.vorbis.data.Codebook __temp_me124)
	{
	}
	
	
	public static int NO_CODE;
	
	public static kha.audio2.ogg.vorbis.data.Codebook read(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState)
	{
		//line 38 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		kha.audio2.ogg.vorbis.data.Codebook c = new kha.audio2.ogg.vorbis.data.Codebook();
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean tmp = false;
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean tmp1 = false;
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int tmp2 = 0;
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp2 = 0;
		}
		else
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a = decodeState.acc;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp2 = 0;
				}
				else
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp2 = z;
				}
				
			}
			else
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z1 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp2 = z1;
			}
			
		}
		
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( tmp2 == 66 )) 
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp3 = 0;
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp3 = 0;
			}
			else
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 8 )) 
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a1 = decodeState.acc;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a1) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 8 ))) ) 
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp3 = 0;
					}
					else
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z2 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 8;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp3 = z2;
					}
					
				}
				else
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z3 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp3 = z3;
				}
				
			}
			
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp1 = ( tmp3 != 67 );
		}
		else
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp1 = true;
		}
		
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (tmp1) ) 
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp4 = 0;
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp4 = 0;
			}
			else
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 8 )) 
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a2 = decodeState.acc;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a2) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 8 ))) ) 
						{
							//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp4 = 0;
					}
					else
					{
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z4 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 8;
						//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp4 = z4;
					}
					
				}
				else
				{
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z5 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp4 = z5;
				}
				
			}
			
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp = ( tmp4 != 86 );
		}
		else
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp = true;
		}
		
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (tmp) 
		{
			//line 40 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )})));
		}
		
		//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int x = 0;
		//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			x = 0;
		}
		else
		{
			//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a3 = decodeState.acc;
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a3) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x = 0;
				}
				else
				{
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z6 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x = z6;
				}
				
			}
			else
			{
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z7 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				x = z7;
			}
			
		}
		
		//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int tmp5 = 0;
		//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp5 = 0;
		}
		else
		{
			//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a4 = decodeState.acc;
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a4) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp5 = 0;
				}
				else
				{
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z8 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp5 = z8;
				}
				
			}
			else
			{
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z9 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp5 = z9;
			}
			
		}
		
		//line 44 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.dimensions = ( (( tmp5 << 8 )) + x );
		//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int x1 = 0;
		//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			x1 = 0;
		}
		else
		{
			//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a5 = decodeState.acc;
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a5) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x1 = 0;
				}
				else
				{
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z10 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x1 = z10;
				}
				
			}
			else
			{
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z11 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 46 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				x1 = z11;
			}
			
		}
		
		//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int y = 0;
		//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			y = 0;
		}
		else
		{
			//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a6 = decodeState.acc;
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a6) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					y = 0;
				}
				else
				{
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z12 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					y = z12;
				}
				
			}
			else
			{
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z13 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 47 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				y = z13;
			}
			
		}
		
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int tmp6 = 0;
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp6 = 0;
		}
		else
		{
			//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a7 = decodeState.acc;
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a7) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp6 = 0;
				}
				else
				{
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z14 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 8;
					//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp6 = z14;
				}
				
			}
			else
			{
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z15 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 8;
				//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp6 = z15;
			}
			
		}
		
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.entries = ( ( (( tmp6 << 16 )) + (( y << 8 )) ) + x1 );
		//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int ordered = 0;
		//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			ordered = 0;
		}
		else
		{
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 1 )) 
			{
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a8 = decodeState.acc;
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a8) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 1 ))) ) 
					{
						//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					ordered = 0;
				}
				else
				{
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z16 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 1;
					//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					ordered = z16;
				}
				
			}
			else
			{
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z17 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 1;
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				ordered = z17;
			}
			
		}
		
		//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean tmp7 = false;
		//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( ordered != 0 )) 
		{
			//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp7 = false;
		}
		else
		{
			//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp8 = 0;
			//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp8 = 0;
			}
			else
			{
				//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 1 )) 
				{
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a9 = decodeState.acc;
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a9) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 1 ))) ) 
						{
							//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp8 = 0;
					}
					else
					{
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z18 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 1;
						//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp8 = z18;
					}
					
				}
				else
				{
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z19 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 1;
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp8 = z19;
				}
				
			}
			
			//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp7 = ( tmp8 != 0 );
		}
		
		//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.sparse = tmp7;
		//line 52 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] this1 = new int[c.entries];
		//line 52 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] lengths = ((int[]) (this1) );
		//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (c.sparse) ) 
		{
			//line 54 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.codewordLengths = lengths;
		}
		
		//line 57 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int total = 0;
		//line 59 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( ordered != 0 )) 
		{
			//line 60 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int currentEntry = 0;
			//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp9 = 0;
			//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp9 = 0;
			}
			else
			{
				//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 5 )) 
				{
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a10 = decodeState.acc;
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a10) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 5 ))) ) 
						{
							//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp9 = 0;
					}
					else
					{
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z20 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 5;
						//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp9 = z20;
					}
					
				}
				else
				{
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z21 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 5;
					//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp9 = z21;
				}
				
			}
			
			//line 61 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int currentLength = ( tmp9 + 1 );
			//line 63 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( currentEntry < c.entries ))
			{
				//line 64 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int limit = ( c.entries - currentEntry );
				//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				haxe.root.Array<java.lang.Object> log2_4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4});
				//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int n = ( (( limit < 16384 )) ? (( (( limit < 16 )) ? (((int) (haxe.lang.Runtime.toInt(log2_4.__get(limit))) )) : (( (( limit < 512 )) ? (( 5 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 5 )))) ) )) : (( 10 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 10 )))) ) )) )) )) : (( (( limit < 16777216 )) ? (( (( limit < 524288 )) ? (( 15 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 15 )))) ) )) : (( 20 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 20 )))) ) )) )) : (( (( limit < 536870912 )) ? (( 25 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 25 )))) ) )) : (( (( limit < -2147483648 )) ? (( 30 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( limit >> 30 )))) ) )) : (0) )) )) )) );
				//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int n1 = 0;
				//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					n1 = 0;
				}
				else
				{
					//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < n )) 
					{
						//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( n > 24 )) 
						{
							//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							n1 = ( decodeState.readBits(24) + (( decodeState.readBits(( n - 24 )) << 24 )) );
						}
						else
						{
							//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( decodeState.validBits == 0 )) 
							{
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.acc = 0;
							}
							
							//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							while (true)
							{
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
								{
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits = -1;
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									break;
								}
								else
								{
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.bytesInSeg--;
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									int a11 = decodeState.acc;
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.inputPosition += 1;
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = ( ((int) (a11) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits += 8;
								}
								
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if ( ! ((( decodeState.validBits < n ))) ) 
								{
									//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									break;
								}
								
							}
							
							//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( decodeState.validBits < 0 )) 
							{
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								n1 = 0;
							}
							else
							{
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								int z22 = ( ((int) (decodeState.acc) ) & ((int) (( (( 1 << n )) - 1 )) ) );
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.acc = ( ((int) (decodeState.acc) ) >>> n );
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.validBits -= n;
								//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								n1 = z22;
							}
							
						}
						
					}
					else
					{
						//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z23 = ( ((int) (decodeState.acc) ) & ((int) (( (( 1 << n )) - 1 )) ) );
						//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> n );
						//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= n;
						//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n1 = z23;
					}
					
				}
				
				//line 66 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( ( currentEntry + n1 ) > c.entries )) 
				{
					//line 67 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, "codebook entrys", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )})));
				}
				
				//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				{
					//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g1 = 0;
					//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g = n1;
					//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g1 < _g ))
					{
						//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int i = _g1++;
						//line 70 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (lengths) )[( currentEntry + i )] = currentLength;
					}
					
				}
				
				//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				currentEntry += n1;
				//line 73 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				 ++ currentLength;
			}
			
		}
		else
		{
			//line 76 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g11 = 0;
			//line 76 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g2 = c.entries;
			//line 76 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g11 < _g2 ))
			{
				//line 76 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int j = _g11++;
				//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int present = 0;
				//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (c.sparse) 
				{
					//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						present = 0;
					}
					else
					{
						//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( decodeState.validBits < 1 )) 
						{
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( decodeState.validBits == 0 )) 
							{
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.acc = 0;
							}
							
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							while (true)
							{
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
								{
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits = -1;
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									break;
								}
								else
								{
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.bytesInSeg--;
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									int a12 = decodeState.acc;
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.inputPosition += 1;
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = ( ((int) (a12) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits += 8;
								}
								
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if ( ! ((( decodeState.validBits < 1 ))) ) 
								{
									//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									break;
								}
								
							}
							
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( decodeState.validBits < 0 )) 
							{
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								present = 0;
							}
							else
							{
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								int z24 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.validBits -= 1;
								//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								present = z24;
							}
							
						}
						else
						{
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int z25 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits -= 1;
							//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							present = z25;
						}
						
					}
					
				}
				else
				{
					//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					present = 1;
				}
				
				//line 78 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( present != 0 )) 
				{
					//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					{
						//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int tmp10 = 0;
						//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( decodeState.validBits < 0 )) 
						{
							//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							tmp10 = 0;
						}
						else
						{
							//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( decodeState.validBits < 5 )) 
							{
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( decodeState.validBits == 0 )) 
								{
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = 0;
								}
								
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								while (true)
								{
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
									{
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.validBits = -1;
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										break;
									}
									else
									{
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.bytesInSeg--;
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										int a13 = decodeState.acc;
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.inputPosition += 1;
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.acc = ( ((int) (a13) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.validBits += 8;
									}
									
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									if ( ! ((( decodeState.validBits < 5 ))) ) 
									{
										//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										break;
									}
									
								}
								
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( decodeState.validBits < 0 )) 
								{
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									tmp10 = 0;
								}
								else
								{
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									int z26 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits -= 5;
									//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									tmp10 = z26;
								}
								
							}
							else
							{
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								int z27 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								decodeState.validBits -= 5;
								//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								tmp10 = z27;
							}
							
						}
						
						//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (lengths) )[j] = ( tmp10 + 1 );
					}
					
					//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					 ++ total;
				}
				else
				{
					//line 82 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (lengths) )[j] = 255;
				}
				
			}
			
		}
		
		//line 87 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( c.sparse && ( total >= ( c.entries >> 2 ) ) )) 
		{
			//line 88 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.codewordLengths = lengths;
			//line 89 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.sparse = false;
		}
		
		//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int tmp11 = 0;
		//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (c.sparse) 
		{
			//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp11 = total;
		}
		else
		{
			//line 95 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int sortedCount = 0;
			//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g12 = 0;
				//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g3 = c.entries;
				//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g12 < _g3 ))
				{
					//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int j1 = _g12++;
					//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int l = ((int) (((int[]) (lengths) )[j1]) );
					//line 98 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( l > 10 ) && ( l != 255 ) )) 
					{
						//line 99 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						 ++ sortedCount;
					}
					
				}
				
			}
			
			//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp11 = sortedCount;
		}
		
		//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.sortedEntries = tmp11;
		//line 105 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] values = null;
		//line 107 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (c.sparse) ) 
		{
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int[] this2 = new int[c.entries];
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.codewords = ((int[]) (this2) );
		}
		else
		{
			//line 110 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( c.sortedEntries != 0 )) 
			{
				//line 111 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int[] this3 = new int[c.sortedEntries];
				//line 111 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.codewordLengths = ((int[]) (this3) );
				//line 112 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int[] this4 = new int[c.entries];
				//line 112 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.codewords = ((int[]) (this4) );
				//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int[] this5 = new int[c.entries];
				//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				values = ((int[]) (this5) );
			}
			
		}
		
		//line 119 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (c.computeCodewords(lengths, c.entries, values)) ) 
		{
			//line 120 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, "compute codewords", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (120) )) )})));
		}
		
		//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( c.sortedEntries != 0 )) 
		{
			//line 125 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.sortedCodewords = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int[] this6 = new int[c.sortedEntries];
			//line 129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.sortedValues = ((int[]) (this6) );
			//line 130 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.computeSortedHuffman(lengths, values);
		}
		
		//line 133 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (c.sparse) 
		{
			//line 135 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.codewords = null;
			//line 136 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			lengths = null;
		}
		
		//line 139 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.computeAcceleratedHuffman();
		//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int tmp12 = 0;
		//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			tmp12 = 0;
		}
		else
		{
			//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 4 )) 
			{
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = 0;
				}
				
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (true)
				{
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits = -1;
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					else
					{
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.bytesInSeg--;
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a14 = decodeState.acc;
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.inputPosition += 1;
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (a14) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits += 8;
					}
					
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! ((( decodeState.validBits < 4 ))) ) 
					{
						//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						break;
					}
					
				}
				
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp12 = 0;
				}
				else
				{
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z28 = ( ((int) (decodeState.acc) ) & ((int) (15) ) );
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 4 );
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 4;
					//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp12 = z28;
				}
				
			}
			else
			{
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int z29 = ( ((int) (decodeState.acc) ) & ((int) (15) ) );
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 4 );
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= 4;
				//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp12 = z29;
			}
			
		}
		
		//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		c.lookupType = tmp12;
		//line 142 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( c.lookupType > 2 )) 
		{
			//line 143 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, "codebook lookup type", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (143) )) )})));
		}
		
		//line 146 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( c.lookupType > 0 )) 
		{
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int x2 = 0;
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				x2 = 0;
			}
			else
			{
				//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 32 )) 
				{
					//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x2 = ( decodeState.readBits(24) + (( decodeState.readBits(8) << 24 )) );
				}
				else
				{
					//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z30 = ( ((int) (decodeState.acc) ) & ((int) (-1) ) );
					//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 32 );
					//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 32;
					//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x2 = z30;
				}
				
			}
			
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double mantissa = 0.0;
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _int = ((int) (( ((int) (x2) ) & ((int) (2097151) ) )) );
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( _int < 0 )) 
			{
				//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				mantissa = ( 4294967296.0 + _int );
			}
			else
			{
				//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				mantissa = ( _int + 0.0 );
			}
			
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int sign = ((int) (( ((int) (x2) ) & ((int) (-2147483648) ) )) );
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int exp = ((int) (( (((int) (( ((int) (x2) ) & ((int) (2145386496) ) )) )) >>> 21 )) );
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double res = ( (( sign != 0 )) ? ( - (mantissa) ) : (mantissa) );
			//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.minimumValue = ( res * java.lang.Math.pow(((double) (2) ), ((double) (( exp - 788 )) )) );
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int x3 = 0;
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				x3 = 0;
			}
			else
			{
				//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 32 )) 
				{
					//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x3 = ( decodeState.readBits(24) + (( decodeState.readBits(8) << 24 )) );
				}
				else
				{
					//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z31 = ( ((int) (decodeState.acc) ) & ((int) (-1) ) );
					//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 32 );
					//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 32;
					//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					x3 = z31;
				}
				
			}
			
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double mantissa1 = 0.0;
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int int1 = ((int) (( ((int) (x3) ) & ((int) (2097151) ) )) );
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( int1 < 0 )) 
			{
				//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				mantissa1 = ( 4294967296.0 + int1 );
			}
			else
			{
				//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				mantissa1 = ( int1 + 0.0 );
			}
			
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int sign1 = ((int) (( ((int) (x3) ) & ((int) (-2147483648) ) )) );
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int exp1 = ((int) (( (((int) (( ((int) (x3) ) & ((int) (2145386496) ) )) )) >>> 21 )) );
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double res1 = ( (( sign1 != 0 )) ? ( - (mantissa1) ) : (mantissa1) );
			//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.deltaValue = ( res1 * java.lang.Math.pow(((double) (2) ), ((double) (( exp1 - 788 )) )) );
			//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp13 = 0;
			//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp13 = 0;
			}
			else
			{
				//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 4 )) 
				{
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a15 = decodeState.acc;
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a15) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 4 ))) ) 
						{
							//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp13 = 0;
					}
					else
					{
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z32 = ( ((int) (decodeState.acc) ) & ((int) (15) ) );
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 4 );
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 4;
						//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp13 = z32;
					}
					
				}
				else
				{
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z33 = ( ((int) (decodeState.acc) ) & ((int) (15) ) );
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 4 );
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 4;
					//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp13 = z33;
				}
				
			}
			
			//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.valueBits = ( tmp13 + 1 );
			//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int tmp14 = 0;
			//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				tmp14 = 0;
			}
			else
			{
				//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 1 )) 
				{
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits == 0 )) 
					{
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = 0;
					}
					
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (true)
					{
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
						{
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits = -1;
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						else
						{
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.bytesInSeg--;
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int a16 = decodeState.acc;
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.inputPosition += 1;
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (a16) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits += 8;
						}
						
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ( ! ((( decodeState.validBits < 1 ))) ) 
						{
							//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							break;
						}
						
					}
					
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp14 = 0;
					}
					else
					{
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int z34 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						decodeState.validBits -= 1;
						//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						tmp14 = z34;
					}
					
				}
				else
				{
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z35 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits -= 1;
					//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					tmp14 = z35;
				}
				
			}
			
			//line 150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			c.sequenceP = ( tmp14 != 0 );
			//line 152 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( c.lookupType == 1 )) 
			{
				//line 153 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.lookupValues = kha.audio2.ogg.vorbis.VorbisTools.lookup1Values(c.entries, c.dimensions);
			}
			else
			{
				//line 155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.lookupValues = ( c.entries * c.dimensions );
			}
			
			//line 157 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int[] this7 = new int[c.lookupValues];
			//line 157 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int[] mults = ((int[]) (this7) );
			//line 158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g13 = 0;
				//line 158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g4 = ((int) (c.lookupValues) );
				//line 158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g13 < _g4 ))
				{
					//line 158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int j2 = _g13++;
					//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int n2 = c.valueBits;
					//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int q = 0;
					//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						q = 0;
					}
					else
					{
						//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( decodeState.validBits < n2 )) 
						{
							//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							if (( n2 > 24 )) 
							{
								//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								q = ( decodeState.readBits(24) + (( decodeState.readBits(( n2 - 24 )) << 24 )) );
							}
							else
							{
								//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( decodeState.validBits == 0 )) 
								{
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = 0;
								}
								
								//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								while (true)
								{
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
									{
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.validBits = -1;
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										break;
									}
									else
									{
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.bytesInSeg--;
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										int a17 = decodeState.acc;
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.inputPosition += 1;
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.acc = ( ((int) (a17) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										decodeState.validBits += 8;
									}
									
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									if ( ! ((( decodeState.validBits < n2 ))) ) 
									{
										//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
										break;
									}
									
								}
								
								//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
								if (( decodeState.validBits < 0 )) 
								{
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									q = 0;
								}
								else
								{
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									int z36 = ( ((int) (decodeState.acc) ) & ((int) (( (( 1 << n2 )) - 1 )) ) );
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.acc = ( ((int) (decodeState.acc) ) >>> n2 );
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									decodeState.validBits -= n2;
									//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
									q = z36;
								}
								
							}
							
						}
						else
						{
							//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int z37 = ( ((int) (decodeState.acc) ) & ((int) (( (( 1 << n2 )) - 1 )) ) );
							//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.acc = ( ((int) (decodeState.acc) ) >>> n2 );
							//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							decodeState.validBits -= n2;
							//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							q = z37;
						}
						
					}
					
					//line 160 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( q == -1 )) 
					{
						//line 161 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, "fail lookup", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (161) )) )})));
					}
					
					//line 163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (mults) )[j2] = q;
				}
				
			}
			
			//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				double[] this8 = new double[c.lookupValues];
				//line 167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.multiplicands = ((double[]) (this8) );
				//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				{
					//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g14 = 0;
					//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g5 = ((int) (c.lookupValues) );
					//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g14 < _g5 ))
					{
						//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int j3 = _g14++;
						//line 171 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((double[]) (c.multiplicands) )[j3] = ( ( ((int) (((int[]) (mults) )[j3]) ) * c.deltaValue ) + c.minimumValue );
					}
					
				}
				
			}
			
			//line 176 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( ( c.lookupType == 2 ) && c.sequenceP )) 
			{
				//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				{
					//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g15 = 1;
					//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g6 = ((int) (c.lookupValues) );
					//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g15 < _g6 ))
					{
						//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int j4 = _g15++;
						//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((double[]) (c.multiplicands) )[j4] = ((double) (((double[]) (c.multiplicands) )[( j4 - 1 )]) );
					}
					
				}
				
				//line 180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				c.sequenceP = false;
			}
			
		}
		
		//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return c;
	}
	
	
	public static int delay;
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return new kha.audio2.ogg.vorbis.data.Codebook(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return new kha.audio2.ogg.vorbis.data.Codebook();
	}
	
	
	public int dimensions;
	
	public int entries;
	
	public int[] codewordLengths;
	
	public double minimumValue;
	
	public double deltaValue;
	
	public int valueBits;
	
	public int lookupType;
	
	public boolean sequenceP;
	
	public boolean sparse;
	
	public int lookupValues;
	
	public double[] multiplicands;
	
	public int[] codewords;
	
	public int[] fastHuffman;
	
	public haxe.root.Array<java.lang.Object> sortedCodewords;
	
	public int[] sortedValues;
	
	public int sortedEntries;
	
	public final void addEntry(int huffCode, int symbol, int count, int len, int[] values)
	{
		//line 189 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (this.sparse) ) 
		{
			//line 190 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (this.codewords) )[symbol] = huffCode;
		}
		else
		{
			//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (this.codewords) )[count] = huffCode;
			//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (this.codewordLengths) )[count] = len;
			//line 194 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (values) )[count] = symbol;
		}
		
	}
	
	
	public final boolean includeInSort(int len)
	{
		//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (this.sparse) 
		{
			//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return true;
		}
		else
		{
			//line 203 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( len == 255 )) 
			{
				//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return false;
			}
			else
			{
				//line 205 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( len > 10 )) 
				{
					//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					return true;
				}
				else
				{
					//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					return false;
				}
				
			}
			
		}
		
	}
	
	
	public boolean computeCodewords(int[] len, int n, int[] values)
	{
		//line 215 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] this1 = new int[32];
		//line 215 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] available = ((int[]) (this1) );
		//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g = 0;
			//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g < 32 ))
			{
				//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int x = _g++;
				//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (available) )[x] = 0;
			}
			
		}
		
		//line 219 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int k = 0;
		//line 220 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		while (( k < n ))
		{
			//line 221 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( ((int) (((int[]) (len) )[k]) ) < 255 )) 
			{
				//line 222 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				break;
			}
			
			//line 224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			 ++ k;
		}
		
		//line 227 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( k == n )) 
		{
			//line 229 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return true;
		}
		
		//line 232 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int m = 0;
		//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			m = 1;
			//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if ( ! (this.sparse) ) 
			{
				//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (this.codewords) )[k] = 0;
			}
			else
			{
				//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (this.codewords) )[0] = 0;
				//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (this.codewordLengths) )[0] = ((int) (((int[]) (len) )[k]) );
				//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (values) )[0] = k;
			}
			
		}
		
		//line 238 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int i = 0;
		//line 240 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		while ((  ++ i <= ((int) (((int[]) (len) )[k]) ) ))
		{
			//line 241 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (available) )[i] = ((int) (( ((int) (1) ) << ((int) (( 32 - i )) ) )) );
		}
		
		//line 248 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		i = k;
		//line 249 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		while ((  ++ i < n ))
		{
			//line 250 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int z = ((int) (((int[]) (len) )[i]) );
			//line 251 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( z == 255 )) 
			{
				//line 251 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				continue;
			}
			
			//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( ( z > 0 ) && ( ((int) (((int[]) (available) )[z]) ) == 0 ) ))
			{
				//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				 -- z;
			}
			
			//line 260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( z == 0 )) 
			{
				//line 261 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return false;
			}
			
			//line 264 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int res = ((int) (((int[]) (available) )[z]) );
			//line 265 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			((int[]) (available) )[z] = 0;
			//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int n1 = res;
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (res) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (res) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int huffCode = ((int) (( ((int) (( ((int) (n1) ) >>> 16 )) ) | ((int) (( ((int) (n1) ) << 16 )) ) )) );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int count = m++;
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if ( ! (this.sparse) ) 
				{
					//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (this.codewords) )[i] = huffCode;
				}
				else
				{
					//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (this.codewords) )[count] = huffCode;
					//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (this.codewordLengths) )[count] = ((int) (((int[]) (len) )[i]) );
					//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (values) )[count] = i;
				}
				
			}
			
			//line 269 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( z != ((int) (((int[]) (len) )[i]) ) )) 
			{
				//line 270 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int y = ((int) (((int[]) (len) )[i]) );
				//line 271 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( y > z ))
				{
					//line 273 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((int[]) (available) )[y] = ((int) (( ((int) (res) ) + (((int) (( 1 << ( 32 - y ) )) )) )) );
					//line 274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					 -- y;
				}
				
			}
			
		}
		
		//line 279 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return true;
	}
	
	
	public void computeSortedHuffman(int[] lengths, int[] values)
	{
		//line 289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if ( ! (this.sparse) ) 
		{
			//line 290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int k = 0;
			//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g1 = 0;
				//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g = this.entries;
				//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g1 < _g ))
				{
					//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int i = _g1++;
					//line 292 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int len = ((int) (((int[]) (lengths) )[i]) );
					//line 292 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (( (this.sparse) ? (true) : (( (( len == 255 )) ? (false) : (( len > 10 )) )) )) 
					{
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int tmp = k++;
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int n = ((int) (((int[]) (this.codewords) )[i]) );
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
						//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sortedCodewords.__set(tmp, ((int) (( ((int) (( ((int) (n) ) >>> 16 )) ) | ((int) (( ((int) (n) ) << 16 )) ) )) ));
					}
					
				}
				
			}
			
		}
		else
		{
			//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g11 = 0;
			//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g2 = this.sortedEntries;
			//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g11 < _g2 ))
			{
				//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i1 = _g11++;
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int n1 = ((int) (((int[]) (this.codewords) )[i1]) );
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				n1 = ((int) (( ((int) (( (((int) (( ((int) (n1) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n1) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
				//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				this.sortedCodewords.__set(i1, ((int) (( ((int) (( ((int) (n1) ) >>> 16 )) ) | ((int) (( ((int) (n1) ) << 16 )) ) )) ));
			}
			
		}
		
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		this.sortedCodewords.__set(this.sortedEntries, -1);
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		this.sortedCodewords.sort(((haxe.lang.Function) (new haxe.lang.Closure(kha.audio2.ogg.vorbis.VorbisTools.class, "uintAsc")) ));
		//line 306 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int len1 = ( (this.sparse) ? (this.sortedEntries) : (this.entries) );
		//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g12 = 0;
			//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g3 = len1;
			//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g12 < _g3 ))
			{
				//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i2 = _g12++;
				//line 313 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int huffLen = ( (this.sparse) ? (((int) (((int[]) (lengths) )[((int) (((int[]) (values) )[i2]) )]) )) : (((int) (((int[]) (lengths) )[i2]) )) );
				//line 314 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( (this.sparse) ? (true) : (( (( huffLen == 255 )) ? (false) : (( huffLen > 10 )) )) )) 
				{
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int n2 = ((int) (((int[]) (this.codewords) )[i2]) );
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					n2 = ((int) (( ((int) (( (((int) (( ((int) (n2) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (n2) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					n2 = ((int) (( ((int) (( (((int) (( ((int) (n2) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n2) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					n2 = ((int) (( ((int) (( (((int) (( ((int) (n2) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n2) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					n2 = ((int) (( ((int) (( (((int) (( ((int) (n2) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n2) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
					//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int code = ((int) (( ((int) (( ((int) (n2) ) >>> 16 )) ) | ((int) (( ((int) (n2) ) << 16 )) ) )) );
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int x = 0;
					//line 317 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int n3 = this.sortedEntries;
					//line 318 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( n3 > 1 ))
					{
						//line 320 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int m = ( x + (( n3 >> 1 )) );
						//line 321 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int a = ((int) (haxe.lang.Runtime.toInt(this.sortedCodewords.__get(m))) );
						//line 321 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						boolean aNeg = ( ((int) (code) ) < 0 );
						//line 321 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						boolean bNeg = ( ((int) (a) ) < 0 );
						//line 321 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (code) ) >= ((int) (a) ) )) )) 
						{
							//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							x = m;
							//line 323 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							n3 -= ( n3 >> 1 );
						}
						else
						{
							//line 325 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							n3 >>= 1;
						}
						
					}
					
					//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (this.sparse) 
					{
						//line 331 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (this.sortedValues) )[x] = ((int) (((int[]) (values) )[i2]) );
						//line 332 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (this.codewordLengths) )[x] = huffLen;
					}
					else
					{
						//line 334 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (this.sortedValues) )[x] = i2;
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public void computeAcceleratedHuffman()
	{
		//line 342 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int[] this1 = new int[1024];
		//line 342 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		this.fastHuffman = ((int[]) (this1) );
		//line 343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		((int[]) (this.fastHuffman) )[0] = -1;
		//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g1 = 0;
			//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g1 < 1024 ))
			{
				//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i = _g1++;
				//line 345 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				((int[]) (this.fastHuffman) )[i] = -1;
			}
			
		}
		
		//line 348 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int len = ( (this.sparse) ? (this.sortedEntries) : (this.entries) );
		//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g11 = 0;
			//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g = len;
			//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g11 < _g ))
			{
				//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i1 = _g11++;
				//line 354 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( ((int) (((int[]) (this.codewordLengths) )[i1]) ) <= 10 )) 
				{
					//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int z = 0;
					//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (this.sparse) 
					{
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int n = ((int) (haxe.lang.Runtime.toInt(this.sortedCodewords.__get(i1))) );
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						z = ((int) (( ((int) (( ((int) (n) ) >>> 16 )) ) | ((int) (( ((int) (n) ) << 16 )) ) )) );
					}
					else
					{
						//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						z = ((int) (((int[]) (this.codewords) )[i1]) );
					}
					
					//line 357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( z < 1024 ))
					{
						//line 358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((int[]) (this.fastHuffman) )[z] = i1;
						//line 359 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						z += ( 1 << ((int) (((int[]) (this.codewordLengths) )[i1]) ) );
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public boolean codebookDecode(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, double[] output, int offset, int len)
	{
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 10 )) 
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.prepHuffman();
		}
		
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int i = ((int[]) (this.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int val = 0;
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( i >= 0 )) 
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int l = ((int) (((int[]) (this.codewordLengths) )[i]) );
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.acc = ( ((int) (decodeState.acc) ) >>> l );
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.validBits -= l;
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits = 0;
				//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = -1;
			}
			else
			{
				//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = i;
			}
			
		}
		else
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = decodeState.decodeScalarRaw(this);
		}
		
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (this.sparse) 
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = ((int) (((int[]) (this.sortedValues) )[val]) );
		}
		
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int z = val;
		//line 369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int lookupValues = this.lookupValues;
		//line 370 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean sequenceP = this.sequenceP;
		//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		double[] multiplicands = this.multiplicands;
		//line 372 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		double minimumValue = this.minimumValue;
		//line 374 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( z < 0 )) 
		{
			//line 375 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return false;
		}
		
		//line 377 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( len > this.dimensions )) 
		{
			//line 378 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			len = this.dimensions;
		}
		
		//line 382 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( this.lookupType == 1 )) 
		{
			//line 383 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int div = 1;
			//line 384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double last = 0.0;
			//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g1 = 0;
				//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g = len;
				//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g1 < _g ))
				{
					//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int i1 = _g1++;
					//line 386 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _int = ((int) (((int) (( z / div )) )) );
					//line 386 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					double tmp = ( (( _int < 0 )) ? (( 4294967296.0 + _int )) : (( _int + 0.0 )) );
					//line 386 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int int1 = ((int) (lookupValues) );
					//line 386 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int off = ((int) (( tmp % (( (( int1 < 0 )) ? (( 4294967296.0 + int1 )) : (( int1 + 0.0 )) )) )) );
					//line 387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					double val1 = ( ((double) (((double[]) (multiplicands) )[off]) ) + last );
					//line 388 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					{
						//line 388 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int _g2 = ( offset + i1 );
						//line 388 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((double[]) (output) )[_g2] = ( ((double) (((double[]) (output) )[_g2]) ) + val1 );
					}
					
					//line 389 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (sequenceP) 
					{
						//line 390 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						last = ( val1 + minimumValue );
					}
					
					//line 392 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					div = ((int) (( ((int) (div) ) * ((int) (lookupValues) ) )) );
				}
				
			}
			
			//line 394 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return true;
		}
		
		//line 397 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		z *= this.dimensions;
		//line 398 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (sequenceP) 
		{
			//line 399 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double last1 = 0.0;
			//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g11 = 0;
				//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g3 = len;
				//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g11 < _g3 ))
				{
					//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int i2 = _g11++;
					//line 401 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					double val2 = ( ((double) (((double[]) (multiplicands) )[( z + i2 )]) ) + last1 );
					//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					{
						//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int _g21 = ( offset + i2 );
						//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((double[]) (output) )[_g21] = ( ((double) (((double[]) (output) )[_g21]) ) + val2 );
					}
					
					//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					last1 = ( val2 + minimumValue );
				}
				
			}
			
		}
		else
		{
			//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g12 = 0;
			//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g4 = len;
			//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g12 < _g4 ))
			{
				//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i3 = _g12++;
				//line 408 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				{
					//line 408 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g22 = ( offset + i3 );
					//line 408 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((double[]) (output) )[_g22] = ( ((double) (((double[]) (output) )[_g22]) ) + ((double) (((double[]) (multiplicands) )[( z + i3 )]) ) );
				}
				
			}
			
		}
		
		//line 411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return true;
	}
	
	
	public boolean codebookDecodeStep(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, double[] output, int offset, int len, int step)
	{
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 10 )) 
		{
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.prepHuffman();
		}
		
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int i = ((int[]) (this.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int val = 0;
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( i >= 0 )) 
		{
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int l = ((int) (((int[]) (this.codewordLengths) )[i]) );
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.acc = ( ((int) (decodeState.acc) ) >>> l );
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.validBits -= l;
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits = 0;
				//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = -1;
			}
			else
			{
				//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = i;
			}
			
		}
		else
		{
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = decodeState.decodeScalarRaw(this);
		}
		
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (this.sparse) 
		{
			//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = ((int) (((int[]) (this.sortedValues) )[val]) );
		}
		
		//line 416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int z = val;
		//line 417 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		double last = 0.0;
		//line 418 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( z < 0 )) 
		{
			//line 419 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return false;
		}
		
		//line 421 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( len > this.dimensions )) 
		{
			//line 422 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			len = this.dimensions;
		}
		
		//line 425 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int lookupValues = this.lookupValues;
		//line 426 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean sequenceP = this.sequenceP;
		//line 427 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		double[] multiplicands = this.multiplicands;
		//line 431 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( this.lookupType == 1 )) 
		{
			//line 432 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int div = 1;
			//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g1 = 0;
				//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g = len;
				//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g1 < _g ))
				{
					//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int i1 = _g1++;
					//line 434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _int = ((int) (((int) (( z / div )) )) );
					//line 434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					double tmp = ( (( _int < 0 )) ? (( 4294967296.0 + _int )) : (( _int + 0.0 )) );
					//line 434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int int1 = ((int) (lookupValues) );
					//line 434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int off = ((int) (( tmp % (( (( int1 < 0 )) ? (( 4294967296.0 + int1 )) : (( int1 + 0.0 )) )) )) );
					//line 435 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					double val1 = ( ((double) (((double[]) (multiplicands) )[off]) ) + last );
					//line 436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					{
						//line 436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int _g2 = ( offset + ( i1 * step ) );
						//line 436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						((double[]) (output) )[_g2] = ( ((double) (((double[]) (output) )[_g2]) ) + val1 );
					}
					
					//line 437 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (sequenceP) 
					{
						//line 438 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						last = val1;
					}
					
					//line 440 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					div = ((int) (( ((int) (div) ) * ((int) (lookupValues) ) )) );
				}
				
			}
			
			//line 442 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			return true;
		}
		
		//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		z *= this.dimensions;
		//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g11 = 0;
			//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int _g3 = len;
			//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( _g11 < _g3 ))
			{
				//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int i2 = _g11++;
				//line 447 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				double val2 = ( ((double) (((double[]) (multiplicands) )[( z + i2 )]) ) + last );
				//line 448 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				{
					//line 448 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g21 = ( offset + ( i2 * step ) );
					//line 448 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					((double[]) (output) )[_g21] = ( ((double) (((double[]) (output) )[_g21]) ) + val2 );
				}
				
				//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (sequenceP) 
				{
					//line 450 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					last = val2;
				}
				
			}
			
		}
		
		//line 454 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return true;
	}
	
	
	public final int decodeStart(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState)
	{
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( decodeState.validBits < 10 )) 
		{
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.prepHuffman();
		}
		
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int i = ((int[]) (this.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int val = 0;
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( i >= 0 )) 
		{
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int l = ((int) (((int[]) (this.codewordLengths) )[i]) );
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.acc = ( ((int) (decodeState.acc) ) >>> l );
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			decodeState.validBits -= l;
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 0 )) 
			{
				//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits = 0;
				//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = -1;
			}
			else
			{
				//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = i;
			}
			
		}
		else
		{
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = decodeState.decodeScalarRaw(this);
		}
		
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (this.sparse) 
		{
			//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			val = ((int) (((int[]) (this.sortedValues) )[val]) );
		}
		
		//line 459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return val;
	}
	
	
	public java.lang.Object decodeDeinterleaveRepeat(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, double[][] residueBuffers, int ch, int cInter, int pInter, int len, int totalDecode)
	{
		//line 484 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int effective = this.dimensions;
		//line 487 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( this.lookupType == 0 )) 
		{
			//line 488 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_STREAM, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "decodeDeinterleaveRepeat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (488) )) )})));
		}
		
		//line 491 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		double[] multiplicands = this.multiplicands;
		//line 492 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		boolean sequenceP = this.sequenceP;
		//line 493 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		int lookupValues = this.lookupValues;
		//line 495 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		while (( totalDecode > 0 ))
		{
			//line 496 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			double last = 0.0;
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( decodeState.validBits < 10 )) 
			{
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.prepHuffman();
			}
			
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int i = ((int[]) (this.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int val = 0;
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( i >= 0 )) 
			{
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int l = ((int) (((int[]) (this.codewordLengths) )[i]) );
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> l );
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				decodeState.validBits -= l;
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					decodeState.validBits = 0;
					//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					val = -1;
				}
				else
				{
					//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					val = i;
				}
				
			}
			else
			{
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = decodeState.decodeScalarRaw(this);
			}
			
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (this.sparse) 
			{
				//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				val = ((int) (((int[]) (this.sortedValues) )[val]) );
			}
			
			//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int z = val;
			//line 499 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( z < 0 )) 
			{
				//line 500 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (( ( decodeState.bytesInSeg == 0 ) && decodeState.lastSeg )) 
				{
					//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					return null;
				}
				
				//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_STREAM, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Codebook", "Codebook.hx", "decodeDeinterleaveRepeat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (503) )) )})));
			}
			
			//line 510 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( ( ( cInter + ( pInter * ch ) ) + effective ) > ( len * ch ) )) 
			{
				//line 511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				effective = ( ( len * ch ) - (( ( pInter * ch ) - cInter )) );
			}
			
			//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (( this.lookupType == 1 )) 
			{
				//line 515 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int div = 1;
				//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (sequenceP) 
				{
					//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g1 = 0;
					//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g = effective;
					//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g1 < _g ))
					{
						//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						 ++ _g1;
						//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int _int = ((int) (((int) (( z / div )) )) );
						//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double tmp = ( (( _int < 0 )) ? (( 4294967296.0 + _int )) : (( _int + 0.0 )) );
						//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int int1 = ((int) (lookupValues) );
						//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int off = ((int) (( tmp % (( (( int1 < 0 )) ? (( 4294967296.0 + int1 )) : (( int1 + 0.0 )) )) )) );
						//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double val1 = ( ((double) (((double[]) (multiplicands) )[off]) ) + last );
						//line 520 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						{
							//line 520 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int _g2 = pInter;
							//line 520 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g2] = ( ((double) (((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g2]) ) + val1 );
						}
						
						//line 521 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ((  ++ cInter == ch )) 
						{
							//line 522 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							cInter = 0;
							//line 523 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							 ++ pInter;
						}
						
						//line 525 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						last = val1;
						//line 526 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						div = ((int) (( ((int) (div) ) * ((int) (lookupValues) ) )) );
					}
					
				}
				else
				{
					//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g11 = 0;
					//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g3 = effective;
					//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g11 < _g3 ))
					{
						//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						 ++ _g11;
						//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int int2 = ((int) (((int) (( z / div )) )) );
						//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double tmp1 = ( (( int2 < 0 )) ? (( 4294967296.0 + int2 )) : (( int2 + 0.0 )) );
						//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int int3 = ((int) (lookupValues) );
						//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int off1 = ((int) (( tmp1 % (( (( int3 < 0 )) ? (( 4294967296.0 + int3 )) : (( int3 + 0.0 )) )) )) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double val2 = ((double) (((double[]) (multiplicands) )[off1]) );
						//line 532 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						{
							//line 532 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int _g21 = pInter;
							//line 532 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g21] = ( ((double) (((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g21]) ) + val2 );
						}
						
						//line 533 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ((  ++ cInter == ch )) 
						{
							//line 534 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							cInter = 0;
							//line 535 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							 ++ pInter;
						}
						
						//line 537 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						div = ((int) (( ((int) (div) ) * ((int) (lookupValues) ) )) );
					}
					
				}
				
			}
			else
			{
				//line 541 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				z *= this.dimensions;
				//line 542 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if (sequenceP) 
				{
					//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g12 = 0;
					//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g4 = effective;
					//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g12 < _g4 ))
					{
						//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int i1 = _g12++;
						//line 544 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double val3 = ( ((double) (((double[]) (multiplicands) )[( z + i1 )]) ) + last );
						//line 545 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						{
							//line 545 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int _g22 = pInter;
							//line 545 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g22] = ( ((double) (((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g22]) ) + val3 );
						}
						
						//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ((  ++ cInter == ch )) 
						{
							//line 547 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							cInter = 0;
							//line 548 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							 ++ pInter;
						}
						
						//line 550 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						last = val3;
					}
					
				}
				else
				{
					//line 553 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g13 = 0;
					//line 553 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int _g5 = effective;
					//line 553 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					while (( _g13 < _g5 ))
					{
						//line 553 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						int i2 = _g13++;
						//line 554 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						double val4 = ((double) (((double[]) (multiplicands) )[( z + i2 )]) );
						//line 555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						{
							//line 555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							int _g23 = pInter;
							//line 555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g23] = ( ((double) (((double[]) (((double[][]) (residueBuffers) )[cInter]) )[_g23]) ) + val4 );
						}
						
						//line 556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						if ((  ++ cInter == ch )) 
						{
							//line 557 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							cInter = 0;
							//line 558 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
							 ++ pInter;
						}
						
					}
					
				}
				
			}
			
			//line 564 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			totalDecode -= effective;
		}
		
		//line 567 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"cInter", "pInter"}, new double[]{((double) (((double) (cInter) )) ), ((double) (((double) (pInter) )) )});
	}
	
	
	public boolean residueDecode(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, double[] target, int offset, int n, int rtype)
	{
		//line 575 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		if (( rtype == 0 )) 
		{
			//line 576 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int step = ((int) (( n / this.dimensions )) );
			//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			{
				//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				int _g1 = 0;
				//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				while (( _g1 < step ))
				{
					//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					int k = _g1++;
					//line 578 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if ( ! (this.codebookDecodeStep(decodeState, target, ( offset + k ), ( ( n - offset ) - k ), step)) ) 
					{
						//line 579 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return false;
					}
					
				}
				
			}
			
		}
		else
		{
			//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			int k1 = 0;
			//line 584 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			while (( k1 < n ))
			{
				//line 585 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				if ( ! (this.codebookDecode(decodeState, target, offset, ( n - k1 ))) ) 
				{
					//line 586 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					return false;
				}
				
				//line 588 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				k1 += this.dimensions;
				//line 589 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				offset += this.dimensions;
			}
			
		}
		
		//line 592 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return true;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			switch (field.hashCode())
			{
				case -1856902381:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedEntries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sortedEntries = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 414334925:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("dimensions")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.dimensions = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -377770180:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.lookupValues = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1591573360:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("entries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.entries = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1300127700:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupType")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.lookupType = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1192487427:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("minimumValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.minimumValue = ((double) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -766244329:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("valueBits")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.valueBits = ((int) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1634826393:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("deltaValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.deltaValue = ((double) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
			}
			
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			switch (field.hashCode())
			{
				case -1856902381:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedEntries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sortedEntries = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 414334925:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("dimensions")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.dimensions = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 968743487:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sortedValues = ((int[]) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1591573360:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("entries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.entries = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1611852447:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedCodewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sortedCodewords = ((haxe.root.Array<java.lang.Object>) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 114368470:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codewordLengths")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.codewordLengths = ((int[]) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1039029169:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("fastHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.fastHuffman = ((int[]) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1192487427:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("minimumValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.minimumValue = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1104996132:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.codewords = ((int[]) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1634826393:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("deltaValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.deltaValue = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -532619573:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("multiplicands")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.multiplicands = ((double[]) (value) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -766244329:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("valueBits")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.valueBits = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -377770180:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.lookupValues = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1300127700:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupType")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.lookupType = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -896177632:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sparse")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sparse = haxe.lang.Runtime.toBool(value);
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1113685841:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sequenceP")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.sequenceP = haxe.lang.Runtime.toBool(value);
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return value;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
			}
			
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			switch (field.hashCode())
			{
				case 294425433:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("residueDecode")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "residueDecode")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 414334925:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("dimensions")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.dimensions;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1920444955:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("decodeDeinterleaveRepeat")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decodeDeinterleaveRepeat")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1591573360:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("entries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.entries;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1182353172:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("decodeStart")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decodeStart")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 114368470:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codewordLengths")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.codewordLengths;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 817297616:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codebookDecodeStep")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "codebookDecodeStep")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1192487427:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("minimumValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.minimumValue;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -241037340:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codebookDecode")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "codebookDecode")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1634826393:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("deltaValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.deltaValue;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 664610077:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeAcceleratedHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "computeAcceleratedHuffman")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -766244329:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("valueBits")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.valueBits;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 323408697:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeSortedHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "computeSortedHuffman")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1300127700:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupType")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.lookupType;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1219362405:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeCodewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "computeCodewords")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1113685841:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sequenceP")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.sequenceP;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 2119728939:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("includeInSort")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "includeInSort")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -896177632:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sparse")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.sparse;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1260004271:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("addEntry")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addEntry")) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -377770180:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.lookupValues;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1856902381:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedEntries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.sortedEntries;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -532619573:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("multiplicands")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.multiplicands;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 968743487:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.sortedValues;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1104996132:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.codewords;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1611852447:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedCodewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.sortedCodewords;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1039029169:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("fastHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.fastHuffman;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
			}
			
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			switch (field.hashCode())
			{
				case -1856902381:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("sortedEntries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.sortedEntries) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 414334925:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("dimensions")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.dimensions) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -377770180:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupValues")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.lookupValues) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1591573360:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("entries")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.entries) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1300127700:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("lookupType")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.lookupType) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1192487427:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("minimumValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.minimumValue;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -766244329:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("valueBits")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return ((double) (this.valueBits) );
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1634826393:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("deltaValue")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.deltaValue;
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
			}
			
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			boolean __temp_executeDef1 = true;
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			switch (field.hashCode())
			{
				case 294425433:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("residueDecode")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.residueDecode(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ), ((double[]) (dynargs.__get(1)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(4))) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1260004271:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("addEntry")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.addEntry(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int[]) (dynargs.__get(4)) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -1920444955:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("decodeDeinterleaveRepeat")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.decodeDeinterleaveRepeat(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ), ((double[][]) (dynargs.__get(1)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(4))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(5))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(6))) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 2119728939:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("includeInSort")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.includeInSort(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1182353172:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("decodeStart")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.decodeStart(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 1219362405:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeCodewords")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.computeCodewords(((int[]) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int[]) (dynargs.__get(2)) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 817297616:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codebookDecodeStep")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.codebookDecodeStep(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ), ((double[]) (dynargs.__get(1)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(4))) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 323408697:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeSortedHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.computeSortedHuffman(((int[]) (dynargs.__get(0)) ), ((int[]) (dynargs.__get(1)) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case -241037340:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("codebookDecode")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						return this.codebookDecode(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ), ((double[]) (dynargs.__get(1)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ));
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
				case 664610077:
				{
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					if (field.equals("computeAcceleratedHuffman")) 
					{
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						__temp_executeDef1 = false;
						//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
						this.computeAcceleratedHuffman();
					}
					
					//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
					break;
				}
				
				
			}
			
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			if (__temp_executeDef1) 
			{
				//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("sortedEntries");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("sortedValues");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("sortedCodewords");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("fastHuffman");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("codewords");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("multiplicands");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("lookupValues");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("sparse");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("sequenceP");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("lookupType");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("valueBits");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("deltaValue");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("minimumValue");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("codewordLengths");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("entries");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		baseArr.push("dimensions");
		//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
		{
			//line 13 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


