// Generated by Haxe 3.3.0
package kha.audio2.ogg.vorbis.data;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Residue extends haxe.lang.HxObject
{
	public Residue(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Residue()
	{
		//line 21 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		kha.audio2.ogg.vorbis.data.Residue.__hx_ctor_kha_audio2_ogg_vorbis_data_Residue(this);
	}
	
	
	public static void __hx_ctor_kha_audio2_ogg_vorbis_data_Residue(kha.audio2.ogg.vorbis.data.Residue __temp_me138)
	{
	}
	
	
	public static kha.audio2.ogg.vorbis.data.Residue read(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, kha.audio2.ogg.vorbis.data.Codebook[] codebooks)
	{
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		kha.audio2.ogg.vorbis.data.Residue r = new kha.audio2.ogg.vorbis.data.Residue();
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp = 0;
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp = 0;
		}
		else
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 16 )) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a = decodeState.acc;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 16 ))) ) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp = 0;
				}
				else
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z = ( ((int) (decodeState.acc) ) & ((int) (65535) ) );
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 16 );
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 16;
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp = z;
				}
				
			}
			else
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z1 = ( ((int) (decodeState.acc) ) & ((int) (65535) ) );
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 16 );
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 16;
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp = z1;
			}
			
		}
		
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.type = tmp;
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( r.type > 2 )) 
		{
			//line 29 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Residue", "Residue.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )})));
		}
		
		//line 32 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[] this1 = new int[64];
		//line 32 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[] residueCascade = ((int[]) (this1) );
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp1 = 0;
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp1 = 0;
		}
		else
		{
			//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 24 )) 
			{
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a1 = decodeState.acc;
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a1) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 24 ))) ) 
					{
						//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp1 = 0;
				}
				else
				{
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z2 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 24;
					//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp1 = z2;
				}
				
			}
			else
			{
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z3 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 24;
				//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp1 = z3;
			}
			
		}
		
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.begin = tmp1;
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp2 = 0;
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp2 = 0;
		}
		else
		{
			//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 24 )) 
			{
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a2 = decodeState.acc;
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a2) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 24 ))) ) 
					{
						//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp2 = 0;
				}
				else
				{
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z4 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 24;
					//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp2 = z4;
				}
				
			}
			else
			{
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z5 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 24;
				//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp2 = z5;
			}
			
		}
		
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.end = tmp2;
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp3 = 0;
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp3 = 0;
		}
		else
		{
			//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 24 )) 
			{
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a3 = decodeState.acc;
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a3) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 24 ))) ) 
					{
						//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp3 = 0;
				}
				else
				{
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z6 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 24;
					//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp3 = z6;
				}
				
			}
			else
			{
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z7 = ( ((int) (decodeState.acc) ) & ((int) (16777215) ) );
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 24 );
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 24;
				//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp3 = z7;
			}
			
		}
		
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.partSize = ( tmp3 + 1 );
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp4 = 0;
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp4 = 0;
		}
		else
		{
			//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 6 )) 
			{
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a4 = decodeState.acc;
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a4) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 6 ))) ) 
					{
						//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp4 = 0;
				}
				else
				{
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z8 = ( ((int) (decodeState.acc) ) & ((int) (63) ) );
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 6 );
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 6;
					//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp4 = z8;
				}
				
			}
			else
			{
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z9 = ( ((int) (decodeState.acc) ) & ((int) (63) ) );
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 6 );
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 6;
				//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp4 = z9;
			}
			
		}
		
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int classifications = r.classifications = ( tmp4 + 1 );
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int tmp5 = 0;
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( decodeState.validBits < 0 )) 
		{
			//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			tmp5 = 0;
		}
		else
		{
			//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (( decodeState.validBits < 8 )) 
			{
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits == 0 )) 
				{
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = 0;
				}
				
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (true)
				{
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
					{
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits = -1;
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.bytesInSeg--;
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int a5 = decodeState.acc;
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.inputPosition += 1;
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (a5) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits += 8;
					}
					
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! ((( decodeState.validBits < 8 ))) ) 
					{
						//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					
				}
				
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp5 = 0;
				}
				else
				{
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int z10 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					decodeState.validBits -= 8;
					//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp5 = z10;
				}
				
			}
			else
			{
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int z11 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				decodeState.validBits -= 8;
				//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				tmp5 = z11;
			}
			
		}
		
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.classbook = tmp5;
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g1 = 0;
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g = r.classifications;
			//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			while (( _g1 < _g ))
			{
				//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int j = _g1++;
				//line 40 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int highBits = 0;
				//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int lowBits = 0;
				//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					lowBits = 0;
				}
				else
				{
					//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( decodeState.validBits < 3 )) 
					{
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( decodeState.validBits == 0 )) 
						{
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.acc = 0;
						}
						
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (true)
						{
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
							{
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.validBits = -1;
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								break;
							}
							else
							{
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.bytesInSeg--;
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int a6 = decodeState.acc;
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.inputPosition += 1;
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.acc = ( ((int) (a6) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.validBits += 8;
							}
							
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if ( ! ((( decodeState.validBits < 3 ))) ) 
							{
								//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								break;
							}
							
						}
						
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( decodeState.validBits < 0 )) 
						{
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							lowBits = 0;
						}
						else
						{
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int z12 = ( ((int) (decodeState.acc) ) & ((int) (7) ) );
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.acc = ( ((int) (decodeState.acc) ) >>> 3 );
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.validBits -= 3;
							//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							lowBits = z12;
						}
						
					}
					else
					{
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int z13 = ( ((int) (decodeState.acc) ) & ((int) (7) ) );
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 3 );
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits -= 3;
						//line 41 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						lowBits = z13;
					}
					
				}
				
				//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int tmp6 = 0;
				//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( decodeState.validBits < 0 )) 
				{
					//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					tmp6 = 0;
				}
				else
				{
					//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( decodeState.validBits < 1 )) 
					{
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( decodeState.validBits == 0 )) 
						{
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.acc = 0;
						}
						
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (true)
						{
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
							{
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.validBits = -1;
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								break;
							}
							else
							{
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.bytesInSeg--;
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int a7 = decodeState.acc;
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.inputPosition += 1;
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.acc = ( ((int) (a7) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.validBits += 8;
							}
							
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if ( ! ((( decodeState.validBits < 1 ))) ) 
							{
								//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								break;
							}
							
						}
						
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( decodeState.validBits < 0 )) 
						{
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							tmp6 = 0;
						}
						else
						{
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int z14 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.validBits -= 1;
							//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							tmp6 = z14;
						}
						
					}
					else
					{
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int z15 = ( ((int) (decodeState.acc) ) & ((int) (1) ) );
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.acc = ( ((int) (decodeState.acc) ) >>> 1 );
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						decodeState.validBits -= 1;
						//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						tmp6 = z15;
					}
					
				}
				
				//line 42 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if (( tmp6 != 0 )) 
				{
					//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( decodeState.validBits < 0 )) 
					{
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						highBits = 0;
					}
					else
					{
						//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( decodeState.validBits < 5 )) 
						{
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( decodeState.validBits == 0 )) 
							{
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.acc = 0;
							}
							
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							while (true)
							{
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
								{
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.validBits = -1;
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									break;
								}
								else
								{
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.bytesInSeg--;
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int a8 = decodeState.acc;
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.inputPosition += 1;
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.acc = ( ((int) (a8) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.validBits += 8;
								}
								
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if ( ! ((( decodeState.validBits < 5 ))) ) 
								{
									//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									break;
								}
								
							}
							
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( decodeState.validBits < 0 )) 
							{
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								highBits = 0;
							}
							else
							{
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int z16 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								decodeState.validBits -= 5;
								//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								highBits = z16;
							}
							
						}
						else
						{
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int z17 = ( ((int) (decodeState.acc) ) & ((int) (31) ) );
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.acc = ( ((int) (decodeState.acc) ) >>> 5 );
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							decodeState.validBits -= 5;
							//line 43 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							highBits = z17;
						}
						
					}
					
				}
				
				//line 45 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				((int[]) (residueCascade) )[j] = ( ( highBits * 8 ) + lowBits );
			}
			
		}
		
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[][] this2 = new int[r.classifications][];
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.residueBooks = ((int[][]) (this2) );
		//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g11 = 0;
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g2 = r.classifications;
			//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			while (( _g11 < _g2 ))
			{
				//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int j1 = _g11++;
				//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				{
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int[] this3 = new int[8];
					//line 50 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					((int[][]) (r.residueBooks) )[j1] = ((int[]) (this3) );
				}
				
				//line 51 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				{
					//line 51 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int _g21 = 0;
					//line 51 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					while (( _g21 < 8 ))
					{
						//line 51 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int k = _g21++;
						//line 52 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( (( ((int) (((int[]) (residueCascade) )[j1]) ) & ( 1 << k ) )) != 0 )) 
						{
							//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							{
								//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int val = 0;
								//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( decodeState.validBits < 0 )) 
								{
									//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									val = 0;
								}
								else
								{
									//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( decodeState.validBits < 8 )) 
									{
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( decodeState.validBits == 0 )) 
										{
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											decodeState.acc = 0;
										}
										
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										while (true)
										{
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											if (( ( decodeState.bytesInSeg == 0 ) && (( decodeState.lastSeg || ( decodeState.next() == 0 ) )) )) 
											{
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												decodeState.validBits = -1;
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												break;
											}
											else
											{
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												decodeState.bytesInSeg--;
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												int a9 = decodeState.acc;
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												decodeState.inputPosition += 1;
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												decodeState.acc = ( ((int) (a9) ) + (((int) (( decodeState.input.readByte() << decodeState.validBits )) )) );
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												decodeState.validBits += 8;
											}
											
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											if ( ! ((( decodeState.validBits < 8 ))) ) 
											{
												//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												break;
											}
											
										}
										
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( decodeState.validBits < 0 )) 
										{
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val = 0;
										}
										else
										{
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											int z18 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											decodeState.validBits -= 8;
											//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val = z18;
										}
										
									}
									else
									{
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int z19 = ( ((int) (decodeState.acc) ) & ((int) (255) ) );
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.acc = ( ((int) (decodeState.acc) ) >>> 8 );
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.validBits -= 8;
										//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val = z19;
									}
									
								}
								
								//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								((int[]) (((int[][]) (r.residueBooks) )[j1]) )[k] = val;
							}
							
							//line 54 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( ((int) (((int[]) (((int[][]) (r.residueBooks) )[j1]) )[k]) ) >= ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) ).length )) 
							{
								//line 55 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.data.Residue", "Residue.hx", "read"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )})));
							}
							
						}
						else
						{
							//line 58 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							((int[]) (((int[][]) (r.residueBooks) )[j1]) )[k] = -1;
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 65 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int el = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[r.classbook].entries;
		//line 66 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int classwords = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[r.classbook].dimensions;
		//line 67 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[][] this4 = new int[el][];
		//line 67 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		r.classdata = ((int[][]) (this4) );
		//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g12 = 0;
			//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			while (( _g12 < el ))
			{
				//line 69 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int j2 = _g12++;
				//line 70 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int temp = j2;
				//line 71 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int k1 = classwords;
				//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int[] this5 = new int[classwords];
				//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int[] cd = ((int[][]) (r.classdata) )[j2] = ((int[]) (this5) );
				//line 73 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while ((  -- k1 >= 0 ))
				{
					//line 74 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					((int[]) (cd) )[k1] = ( temp % classifications );
					//line 75 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					temp = ((int) (( temp / classifications )) );
				}
				
			}
			
		}
		
		//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		return r;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		return new kha.audio2.ogg.vorbis.data.Residue(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		return new kha.audio2.ogg.vorbis.data.Residue();
	}
	
	
	public int begin;
	
	public int end;
	
	public int partSize;
	
	public int classifications;
	
	public int classbook;
	
	public int[][] classdata;
	
	public int[][] residueBooks;
	
	public int type;
	
	public void decode(kha.audio2.ogg.vorbis.VorbisDecodeState decodeState, kha.audio2.ogg.vorbis.data.Header header, double[][] residueBuffers, int ch, int n, boolean[] doNotDecode, double[][] channelBuffers)
	{
		//line 86 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		kha.audio2.ogg.vorbis.data.Codebook[] codebooks = header.codebooks;
		//line 87 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int classwords = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[this.classbook].dimensions;
		//line 88 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int nRead = ( ((int) (this.end) ) - ((int) (this.begin) ) );
		//line 89 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int partSize = this.partSize;
		//line 90 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int _int = ((int) (nRead) );
		//line 90 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		double tmp = ( (( _int < 0 )) ? (( 4294967296.0 + _int )) : (( _int + 0.0 )) );
		//line 90 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int int1 = ((int) (partSize) );
		//line 90 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int partRead = ((int) (( tmp / (( (( int1 < 0 )) ? (( 4294967296.0 + int1 )) : (( int1 + 0.0 )) )) )) );
		//line 91 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[] this1 = new int[( ( header.channel * partRead ) + 1 )];
		//line 91 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		int[] classifications = ((int[]) (this1) );
		//line 94 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 94 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g1 = 0;
			//line 94 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			while (( _g1 < ch ))
			{
				//line 94 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int i = _g1++;
				//line 95 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				if ( ! (((boolean) (((boolean[]) (doNotDecode) )[i]) )) ) 
				{
					//line 96 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					double[] buffer = ((double[]) (((double[][]) (residueBuffers) )[i]) );
					//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					{
						//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int _g3 = 0;
						//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int _g2 = ((double[]) (buffer) ).length;
						//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (( _g3 < _g2 ))
						{
							//line 97 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int j = _g3++;
							//line 98 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							((double[]) (buffer) )[j] = ((double) (0) );
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		if (( ( this.type == 2 ) && ( ch != 1 ) )) 
		{
			//line 104 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			{
				//line 104 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int _g11 = 0;
				//line 104 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (( _g11 < ch ))
				{
					//line 104 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int j1 = _g11++;
					//line 105 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if ( ! (((boolean) (((boolean[]) (doNotDecode) )[j1]) )) ) 
					{
						//line 106 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						break;
					}
					else
					{
						//line 107 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( j1 == ( ch - 1 ) )) 
						{
							//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							return ;
						}
						
					}
					
				}
				
			}
			
			//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			{
				//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int _g = 0;
				//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (( _g < 8 ))
				{
					//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int pass = _g++;
					//line 114 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					int pcount = 0;
					//line 115 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( ch == 2 )) 
					{
						//line 117 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (( pcount < partRead ))
						{
							//line 118 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int z = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
							//line 119 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int cInter = ((int) (( ((int) (z) ) & ((int) (1) ) )) );
							//line 120 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int pInter = ((int) (( ((int) (z) ) >>> 1 )) );
							//line 121 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( pass == 0 )) 
							{
								//line 122 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								kha.audio2.ogg.vorbis.data.Codebook c = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[this.classbook];
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( decodeState.validBits < 10 )) 
								{
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.prepHuffman();
								}
								
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int i1 = ((int[]) (c.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int val = 0;
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( i1 >= 0 )) 
								{
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int l = ((int) (((int[]) (c.codewordLengths) )[i1]) );
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.acc = ( ((int) (decodeState.acc) ) >>> l );
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.validBits -= l;
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( decodeState.validBits < 0 )) 
									{
										//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.validBits = 0;
										//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val = -1;
									}
									else
									{
										//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val = i1;
									}
									
								}
								else
								{
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									val = decodeState.decodeScalarRaw(c);
								}
								
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (c.sparse) 
								{
									//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									val = ((int) (((int[]) (c.sortedValues) )[val]) );
								}
								
								//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int q = val;
								//line 124 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( q == -1 )) 
								{
									//line 125 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									return ;
								}
								
								//line 127 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int i2 = classwords;
								//line 128 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								while ((  -- i2 >= 0 ))
								{
									//line 129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									((int[]) (classifications) )[( i2 + pcount )] = ( q % this.classifications );
									//line 130 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									q = ((int) (( q / this.classifications )) );
								}
								
							}
							
							//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							{
								//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int _g21 = 0;
								//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								while (( _g21 < classwords ))
								{
									//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									 ++ _g21;
									//line 135 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( pcount >= partRead )) 
									{
										//line 136 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										break;
									}
									
									//line 138 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int z1 = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
									//line 139 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int c1 = ((int) (((int[]) (classifications) )[pcount]) );
									//line 140 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int b = ((int) (((int[]) (((int[][]) (this.residueBooks) )[c1]) )[pass]) );
									//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( b >= 0 )) 
									{
										//line 142 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										kha.audio2.ogg.vorbis.data.Codebook book = ((kha.audio2.ogg.vorbis.data.Codebook) (((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[b]) );
										//line 144 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										java.lang.Object result = book.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter, pInter, n, partSize);
										//line 145 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										boolean tmp1 = ( result == null );
										//line 145 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (tmp1) 
										{
											//line 146 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											return ;
										}
										else
										{
											//line 148 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											cInter = ((int) (haxe.lang.Runtime.getField_f(result, "cInter", true)) );
											//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											pInter = ((int) (haxe.lang.Runtime.getField_f(result, "pInter", true)) );
										}
										
									}
									else
									{
										//line 153 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										z1 = ((int) (( ((int) (z1) ) + ((int) (partSize) ) )) );
										//line 154 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										cInter = ((int) (( ((int) (z1) ) & ((int) (1) ) )) );
										//line 155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										pInter = ((int) (( ((int) (z1) ) >>> 1 )) );
									}
									
									//line 157 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									 ++ pcount;
								}
								
							}
							
						}
						
					}
					else
					{
						//line 161 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						if (( ch == 1 )) 
						{
							//line 162 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							while (( pcount < partRead ))
							{
								//line 163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int z2 = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
								//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int cInter1 = 0;
								//line 165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int pInter1 = z2;
								//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( pass == 0 )) 
								{
									//line 167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									kha.audio2.ogg.vorbis.data.Codebook c2 = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[this.classbook];
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( decodeState.validBits < 10 )) 
									{
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.prepHuffman();
									}
									
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int i3 = ((int[]) (c2.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int val1 = 0;
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( i3 >= 0 )) 
									{
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int l1 = ((int) (((int[]) (c2.codewordLengths) )[i3]) );
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.acc = ( ((int) (decodeState.acc) ) >>> l1 );
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.validBits -= l1;
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( decodeState.validBits < 0 )) 
										{
											//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											decodeState.validBits = 0;
											//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val1 = -1;
										}
										else
										{
											//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val1 = i3;
										}
										
									}
									else
									{
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val1 = decodeState.decodeScalarRaw(c2);
									}
									
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (c2.sparse) 
									{
										//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val1 = ((int) (((int[]) (c2.sortedValues) )[val1]) );
									}
									
									//line 168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int q1 = val1;
									//line 169 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( q1 == -1 )) 
									{
										//line 169 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										return ;
									}
									
									//line 171 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int i4 = classwords;
									//line 172 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									while ((  -- i4 >= 0 ))
									{
										//line 173 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										((int[]) (classifications) )[( i4 + pcount )] = ( q1 % this.classifications );
										//line 174 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										q1 = ((int) (( q1 / this.classifications )) );
									}
									
								}
								
								//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								{
									//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int _g22 = 0;
									//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									while (( _g22 < classwords ))
									{
										//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										 ++ _g22;
										//line 179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( pcount >= partRead )) 
										{
											//line 180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											break;
										}
										
										//line 182 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int z3 = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
										//line 183 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int b1 = ((int) (((int[]) (((int[][]) (this.residueBooks) )[((int) (((int[]) (classifications) )[pcount]) )]) )[pass]) );
										//line 184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( b1 >= 0 )) 
										{
											//line 185 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											kha.audio2.ogg.vorbis.data.Codebook book1 = ((kha.audio2.ogg.vorbis.data.Codebook) (((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[b1]) );
											//line 187 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											java.lang.Object result1 = book1.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter1, pInter1, n, partSize);
											//line 188 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											boolean tmp2 = ( result1 == null );
											//line 188 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											if (tmp2) 
											{
												//line 189 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												return ;
											}
											else
											{
												//line 191 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												cInter1 = ((int) (haxe.lang.Runtime.getField_f(result1, "cInter", true)) );
												//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												pInter1 = ((int) (haxe.lang.Runtime.getField_f(result1, "pInter", true)) );
											}
											
										}
										else
										{
											//line 196 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											z3 = ((int) (( ((int) (z3) ) + ((int) (partSize) ) )) );
											//line 197 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											cInter1 = 0;
											//line 198 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											pInter1 = z3;
										}
										
										//line 200 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										 ++ pcount;
									}
									
								}
								
							}
							
						}
						else
						{
							//line 204 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							while (( pcount < partRead ))
							{
								//line 205 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int z4 = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
								//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int int2 = ((int) (z4) );
								//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int cInter2 = ((int) (((int) (( (( (( int2 < 0 )) ? (( 4294967296.0 + int2 )) : (( int2 + 0.0 )) )) % (( (( ch < 0 )) ? (( 4294967296.0 + ch )) : (( ch + 0.0 )) )) )) )) );
								//line 207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int int3 = ((int) (z4) );
								//line 207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int pInter2 = ((int) (( (( (( int3 < 0 )) ? (( 4294967296.0 + int3 )) : (( int3 + 0.0 )) )) / (( (( ch < 0 )) ? (( 4294967296.0 + ch )) : (( ch + 0.0 )) )) )) );
								//line 209 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( pass == 0 )) 
								{
									//line 210 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									kha.audio2.ogg.vorbis.data.Codebook c3 = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[this.classbook];
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( decodeState.validBits < 10 )) 
									{
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.prepHuffman();
									}
									
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int i5 = ((int[]) (c3.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int val2 = 0;
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( i5 >= 0 )) 
									{
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int l2 = ((int) (((int[]) (c3.codewordLengths) )[i5]) );
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.acc = ( ((int) (decodeState.acc) ) >>> l2 );
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.validBits -= l2;
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( decodeState.validBits < 0 )) 
										{
											//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											decodeState.validBits = 0;
											//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val2 = -1;
										}
										else
										{
											//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											val2 = i5;
										}
										
									}
									else
									{
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val2 = decodeState.decodeScalarRaw(c3);
									}
									
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (c3.sparse) 
									{
										//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val2 = ((int) (((int[]) (c3.sortedValues) )[val2]) );
									}
									
									//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int q2 = val2;
									//line 212 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( q2 == -1 )) 
									{
										//line 213 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										return ;
									}
									
									//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int i6 = classwords;
									//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									while ((  -- i6 >= 0 ))
									{
										//line 218 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										((int[]) (classifications) )[( i6 + pcount )] = ( q2 % this.classifications );
										//line 219 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										q2 = ((int) (( q2 / this.classifications )) );
									}
									
								}
								
								//line 223 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								{
									//line 223 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int _g23 = 0;
									//line 223 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									while (( _g23 < classwords ))
									{
										//line 223 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										 ++ _g23;
										//line 224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( pcount >= partRead )) 
										{
											//line 225 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											break;
										}
										
										//line 227 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int z5 = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount) ) * ((int) (partSize) ) )) ) );
										//line 228 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int b2 = ((int) (((int[]) (((int[][]) (this.residueBooks) )[((int) (((int[]) (classifications) )[pcount]) )]) )[pass]) );
										//line 229 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( b2 >= 0 )) 
										{
											//line 230 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											kha.audio2.ogg.vorbis.data.Codebook book2 = ((kha.audio2.ogg.vorbis.data.Codebook) (((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[b2]) );
											//line 232 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											java.lang.Object result2 = book2.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter2, pInter2, n, partSize);
											//line 233 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											boolean tmp3 = ( result2 == null );
											//line 233 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											if (tmp3) 
											{
												//line 234 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												return ;
											}
											else
											{
												//line 236 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												cInter2 = ((int) (haxe.lang.Runtime.getField_f(result2, "cInter", true)) );
												//line 237 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												pInter2 = ((int) (haxe.lang.Runtime.getField_f(result2, "pInter", true)) );
											}
											
										}
										else
										{
											//line 241 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											z5 = ((int) (( ((int) (z5) ) + ((int) (partSize) ) )) );
											//line 242 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											int int4 = ((int) (z5) );
											//line 242 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											cInter2 = ((int) (((int) (( (( (( int4 < 0 )) ? (( 4294967296.0 + int4 )) : (( int4 + 0.0 )) )) % (( (( ch < 0 )) ? (( 4294967296.0 + ch )) : (( ch + 0.0 )) )) )) )) );
											//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											int int5 = ((int) (z5) );
											//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											pInter2 = ((int) (( (( (( int5 < 0 )) ? (( 4294967296.0 + int5 )) : (( int5 + 0.0 )) )) / (( (( ch < 0 )) ? (( 4294967296.0 + ch )) : (( ch + 0.0 )) )) )) );
										}
										
										//line 245 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										 ++ pcount;
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
			}
			
			//line 250 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			return ;
		}
		
		//line 254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			int _g4 = 0;
			//line 254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			while (( _g4 < 8 ))
			{
				//line 254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int pass1 = _g4++;
				//line 255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				int pcount1 = 0;
				//line 257 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				while (( pcount1 < partRead ))
				{
					//line 258 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (( pass1 == 0 )) 
					{
						//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int _g24 = 0;
						//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (( _g24 < ch ))
						{
							//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							int j2 = _g24++;
							//line 260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if ( ! (((boolean) (((boolean[]) (doNotDecode) )[j2]) )) ) 
							{
								//line 261 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								kha.audio2.ogg.vorbis.data.Codebook c4 = ((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[this.classbook];
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( decodeState.validBits < 10 )) 
								{
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.prepHuffman();
								}
								
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int i7 = ((int[]) (c4.fastHuffman) )[( ((int) (decodeState.acc) ) & ((int) (1023) ) )];
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int val3 = 0;
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( i7 >= 0 )) 
								{
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int l3 = ((int) (((int[]) (c4.codewordLengths) )[i7]) );
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.acc = ( ((int) (decodeState.acc) ) >>> l3 );
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									decodeState.validBits -= l3;
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if (( decodeState.validBits < 0 )) 
									{
										//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										decodeState.validBits = 0;
										//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val3 = -1;
									}
									else
									{
										//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										val3 = i7;
									}
									
								}
								else
								{
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									val3 = decodeState.decodeScalarRaw(c4);
								}
								
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (c4.sparse) 
								{
									//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									val3 = ((int) (((int[]) (c4.sortedValues) )[val3]) );
								}
								
								//line 262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int temp = val3;
								//line 263 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								if (( temp == -1 )) 
								{
									//line 264 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									return ;
								}
								
								//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int i8 = classwords;
								//line 267 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								while ((  -- i8 >= 0 ))
								{
									//line 268 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									((int[]) (classifications) )[( ( ( j2 * partRead ) + i8 ) + pcount1 )] = ( temp % this.classifications );
									//line 269 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									temp = ((int) (( temp / this.classifications )) );
								}
								
							}
							
						}
						
					}
					
					//line 274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					{
						//line 274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						int _g25 = 0;
						//line 274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						while (( _g25 < classwords ))
						{
							//line 274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							 ++ _g25;
							//line 275 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							if (( pcount1 >= partRead )) 
							{
								//line 276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								break;
							}
							
							//line 278 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							{
								//line 278 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								int _g41 = 0;
								//line 278 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
								while (( _g41 < ch ))
								{
									//line 278 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									int j3 = _g41++;
									//line 279 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
									if ( ! (((boolean) (((boolean[]) (doNotDecode) )[j3]) )) ) 
									{
										//line 280 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int c5 = ((int) (((int[]) (classifications) )[( ( j3 * partRead ) + pcount1 )]) );
										//line 281 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										int b3 = ((int) (((int[]) (((int[][]) (this.residueBooks) )[c5]) )[pass1]) );
										//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
										if (( b3 >= 0 )) 
										{
											//line 283 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											double[] target = ((double[]) (((double[][]) (residueBuffers) )[j3]) );
											//line 284 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											int offset = ( ((int) (this.begin) ) + ((int) (( ((int) (pcount1) ) * ((int) (partSize) ) )) ) );
											//line 286 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											kha.audio2.ogg.vorbis.data.Codebook book3 = ((kha.audio2.ogg.vorbis.data.Codebook) (((kha.audio2.ogg.vorbis.data.Codebook[]) (codebooks) )[b3]) );
											//line 287 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
											if ( ! (book3.residueDecode(decodeState, target, offset, partSize, this.type)) ) 
											{
												//line 288 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
												return ;
											}
											
										}
										
									}
									
								}
								
							}
							
							//line 293 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
							 ++ pcount1;
						}
						
					}
					
				}
				
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			switch (field.hashCode())
			{
				case 3575610:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("type")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.type = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.begin = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9279391:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classbook")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.classbook = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.end = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -1032042163:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classifications")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.classifications = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 1188202132:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("partSize")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.partSize = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			switch (field.hashCode())
			{
				case 3575610:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("type")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.type = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.begin = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 700696543:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("residueBooks")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.residueBooks = ((int[][]) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.end = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9233118:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classdata")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.classdata = ((int[][]) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 1188202132:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("partSize")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.partSize = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9279391:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classbook")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.classbook = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -1032042163:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classifications")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.classifications = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			switch (field.hashCode())
			{
				case -1335717394:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("decode")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decode")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.begin;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 3575610:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("type")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.type;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.end;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 700696543:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("residueBooks")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.residueBooks;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 1188202132:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("partSize")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.partSize;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9233118:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classdata")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.classdata;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -1032042163:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classifications")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.classifications;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9279391:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classbook")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return this.classbook;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			switch (field.hashCode())
			{
				case 3575610:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("type")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.type) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.begin) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -9279391:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classbook")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.classbook) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.end) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case -1032042163:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("classifications")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.classifications) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
				case 1188202132:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("partSize")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						return ((double) (this.partSize) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			switch (field.hashCode())
			{
				case -1335717394:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					if (field.equals("decode")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
						this.decode(((kha.audio2.ogg.vorbis.VorbisDecodeState) (dynargs.__get(0)) ), ((kha.audio2.ogg.vorbis.data.Header) (dynargs.__get(1)) ), ((double[][]) (dynargs.__get(2)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(3))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(4))) ), ((boolean[]) (dynargs.__get(5)) ), ((double[][]) (dynargs.__get(6)) ));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("type");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("residueBooks");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("classdata");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("classbook");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("classifications");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("partSize");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("end");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		baseArr.push("begin");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/data/Residue.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


