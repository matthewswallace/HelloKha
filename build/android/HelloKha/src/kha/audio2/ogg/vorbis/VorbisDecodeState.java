// Generated by Haxe 3.3.0
package kha.audio2.ogg.vorbis;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class VorbisDecodeState extends haxe.lang.HxObject
{
	static
	{
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		kha.audio2.ogg.vorbis.VorbisDecodeState.INVALID_BITS = -1;
	}
	
	public VorbisDecodeState(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public VorbisDecodeState(haxe.io.Input input)
	{
		//line 70 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		kha.audio2.ogg.vorbis.VorbisDecodeState.__hx_ctor_kha_audio2_ogg_vorbis_VorbisDecodeState(this, input);
	}
	
	
	public static void __hx_ctor_kha_audio2_ogg_vorbis_VorbisDecodeState(kha.audio2.ogg.vorbis.VorbisDecodeState __temp_me121, haxe.io.Input input)
	{
		//line 54 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.nextSeg = 0;
		//line 53 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.firstDecode = false;
		//line 40 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.bytesInSeg = 0;
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.validBits = 0;
		//line 72 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.input = input;
		//line 73 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.inputPosition = 0;
		//line 74 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		__temp_me121.page = new kha.audio2.ogg.vorbis.data.Page();
		//line 75 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		kha.audio2.ogg.tools.Crc32.init();
	}
	
	
	public static int INVALID_BITS;
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return new kha.audio2.ogg.vorbis.VorbisDecodeState(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return new kha.audio2.ogg.vorbis.VorbisDecodeState(((haxe.io.Input) (arr.__get(0)) ));
	}
	
	
	public kha.audio2.ogg.vorbis.data.Page page;
	
	public boolean eof;
	
	public kha.audio2.ogg.vorbis.data.ProbedPage pFirst;
	
	public kha.audio2.ogg.vorbis.data.ProbedPage pLast;
	
	public int validBits;
	
	public int inputPosition;
	
	public haxe.io.Input input;
	
	public int discardSamplesDeferred;
	
	public int[] segments;
	
	public int bytesInSeg;
	
	public double[][] channelBuffers;
	
	public int channelBufferStart;
	
	public int channelBufferEnd;
	
	public int currentSample;
	
	public double[][] previousWindow;
	
	public int previousLength;
	
	public haxe.root.Array<java.lang.Object>[] finalY;
	
	public boolean firstDecode;
	
	public int nextSeg;
	
	public int acc;
	
	public boolean lastSeg;
	
	public int lastSegWhich;
	
	public int endSegWithKnownLoc;
	
	public int knownLocForPacket;
	
	public kha.audio2.ogg.vorbis.data.ReaderError error;
	
	public int currentLoc;
	
	public int currentLocValid;
	
	public int firstAudioPageOffset;
	
	public void setup(int loc0, int loc1)
	{
		//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 1;
		//line 79 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int segmentCount = this.input.readByte();
		//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += segmentCount;
		//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this1 = new int[segmentCount];
		//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec = ((int[]) (this1) );
		//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g1 = 0;
			//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g1 < segmentCount ))
			{
				//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g1++;
				//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec) )[i] = this.input.readByte();
			}
			
		}
		
		//line 80 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.segments = vec;
		//line 83 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.endSegWithKnownLoc = -2;
		//line 84 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ( loc0 != -1 ) || ( loc1 != -1 ) )) 
		{
			//line 85 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int i1 = ( segmentCount - 1 );
			//line 86 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( i1 >= 0 ))
			{
				//line 87 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( ((int) (((int[]) (this.segments) )[i1]) ) < 255 )) 
				{
					//line 88 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				//line 90 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( i1 >= 0 )) 
				{
					//line 91 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.endSegWithKnownLoc = i1;
					//line 92 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.knownLocForPacket = loc0;
				}
				
				//line 94 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				 -- i1;
			}
			
		}
		
		//line 98 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (this.firstDecode) 
		{
			//line 100 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int len = 0;
			//line 101 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			kha.audio2.ogg.vorbis.data.ProbedPage p = new kha.audio2.ogg.vorbis.data.ProbedPage();
			//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			{
				//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int _g11 = 0;
				//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				while (( _g11 < segmentCount ))
				{
					//line 103 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int i2 = _g11++;
					//line 104 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					len += ((int) (((int[]) (this.segments) )[i2]) );
				}
				
			}
			
			//line 106 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			len += ( 27 + segmentCount );
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			p.pageStart = this.firstAudioPageOffset;
			//line 109 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			p.pageEnd = ( p.pageStart + len );
			//line 110 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			p.firstDecodedSample = 0;
			//line 111 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			p.lastDecodedSample = loc0;
			//line 112 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.pFirst = p;
		}
		
		//line 115 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.nextSeg = 0;
	}
	
	
	public kha.audio2.ogg.vorbis.VorbisDecodeState clone(haxe.lang.Function seekFunc)
	{
		//line 120 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		kha.audio2.ogg.vorbis.VorbisDecodeState state = ((kha.audio2.ogg.vorbis.VorbisDecodeState) (haxe.root.Type.createEmptyInstance(((java.lang.Class) (kha.audio2.ogg.vorbis.VorbisDecodeState.class) ))) );
		//line 122 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition) ), haxe.lang.Runtime.undefined);
		//line 123 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.input = this.input;
		//line 126 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.eof = this.eof;
		//line 127 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.validBits = this.validBits;
		//line 128 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		//line 129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.firstDecode = this.firstDecode;
		//line 130 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.nextSeg = this.nextSeg;
		//line 131 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.bytesInSeg = this.bytesInSeg;
		//line 132 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.acc = state.acc;
		//line 133 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.lastSeg = this.lastSeg;
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.lastSegWhich = this.lastSegWhich;
		//line 135 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.currentLoc = this.currentLoc;
		//line 136 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.currentLocValid = this.currentLocValid;
		//line 137 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.inputPosition = this.inputPosition;
		//line 138 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		//line 141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.error = this.error;
		//line 142 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.segments = this.segments;
		//line 143 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.pFirst = this.pFirst;
		//line 144 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.pLast = this.pLast;
		//line 147 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		state.page = this.page.clone();
		//line 149 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return state;
	}
	
	
	public int next()
	{
		//line 155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (this.lastSeg) 
		{
			//line 156 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return 0;
		}
		
		//line 159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.nextSeg == -1 )) 
		{
			//line 160 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.lastSegWhich = ( ((int[]) (this.segments) ).length - 1 );
			//line 163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			try 
			{
				//line 163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.page.start(this);
			}
			catch (java.lang.Throwable __temp_catchallException1)
			{
				//line 163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				haxe.lang.Exceptions.setException(__temp_catchallException1);
				//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				java.lang.Object __temp_catchall2 = __temp_catchallException1;
				//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
				{
					//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
				}
				
				//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( __temp_catchall2 instanceof kha.audio2.ogg.vorbis.data.ReaderError )) 
				{
					//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					kha.audio2.ogg.vorbis.data.ReaderError e = ((kha.audio2.ogg.vorbis.data.ReaderError) (__temp_catchall2) );
					//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.lastSeg = true;
						//line 166 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.error = e;
						//line 167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return 0;
					}
					
				}
				else
				{
					//line 164 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					throw haxe.lang.HaxeException.wrap(__temp_catchallException1);
				}
				
			}
			
			
			//line 170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( (( this.page.flag & 1 )) == 0 )) 
			{
				//line 171 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "next"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (171) )) )})));
			}
			
		}
		
		//line 175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int len = ((int[]) (this.segments) )[this.nextSeg++];
		//line 176 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( len < 255 )) 
		{
			//line 177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.lastSeg = true;
			//line 178 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.lastSegWhich = ( this.nextSeg - 1 );
		}
		
		//line 180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.nextSeg >= ((int[]) (this.segments) ).length )) 
		{
			//line 181 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.nextSeg = -1;
		}
		
		//line 185 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.bytesInSeg = len;
		//line 186 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return len;
	}
	
	
	public void startPacket()
	{
		//line 190 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		while (( this.nextSeg == -1 ))
		{
			//line 191 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.page.start(this);
			//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( (( this.page.flag & 1 )) != 0 )) 
			{
				//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.MISSING_CAPTURE_PATTERN, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "startPacket"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (193) )) )})));
			}
			
		}
		
		//line 197 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.lastSeg = false;
		//line 198 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.validBits = 0;
		//line 199 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.bytesInSeg = 0;
	}
	
	
	public boolean maybeStartPacket()
	{
		//line 204 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.nextSeg == -1 )) 
		{
			//line 205 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean eof = false;
			//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int x = 0;
			//line 207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			try 
			{
				//line 207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				x = this.input.readByte();
			}
			catch (java.lang.Throwable __temp_catchallException1)
			{
				//line 207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				haxe.lang.Exceptions.setException(__temp_catchallException1);
				//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				java.lang.Object __temp_catchall2 = __temp_catchallException1;
				//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
				{
					//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
				}
				
				//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( __temp_catchall2 instanceof haxe.io.Eof )) 
				{
					//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					haxe.io.Eof e = ((haxe.io.Eof) (__temp_catchall2) );
					//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 209 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						eof = true;
						//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						x = 0;
					}
					
				}
				else
				{
					//line 208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					throw haxe.lang.HaxeException.wrap(__temp_catchallException1);
				}
				
			}
			
			
			//line 213 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (eof) 
			{
				//line 214 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return false;
			}
			
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean tmp = false;
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean tmp1 = false;
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean tmp2 = false;
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( x == 79 )) 
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp2 = ( this.input.readByte() != 103 );
			}
			else
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp2 = true;
			}
			
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if ( ! (tmp2) ) 
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp1 = ( this.input.readByte() != 103 );
			}
			else
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp1 = true;
			}
			
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if ( ! (tmp1) ) 
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp = ( this.input.readByte() != 83 );
			}
			else
			{
				//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp = true;
			}
			
			//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (tmp) 
			{
				//line 218 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.MISSING_CAPTURE_PATTERN, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "maybeStartPacket"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (218) )) )})));
			}
			
			//line 221 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.page.startWithoutCapturePattern(this);
		}
		
		//line 224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.startPacket();
		//line 225 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return true;
	}
	
	
	public final int readBits(int n)
	{
		//line 232 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.validBits < 0 )) 
		{
			//line 233 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return 0;
		}
		else
		{
			//line 234 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.validBits < n )) 
			{
				//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( n > 24 )) 
				{
					//line 237 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					return ( this.readBits(24) + (( this.readBits(( n - 24 )) << 24 )) );
				}
				else
				{
					//line 239 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( this.validBits == 0 )) 
					{
						//line 240 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.acc = 0;
					}
					
					//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					while (true)
					{
						//line 244 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						if (( ( this.bytesInSeg == 0 ) && (( this.lastSeg || ( this.next() == 0 ) )) )) 
						{
							//line 245 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.validBits = -1;
							//line 246 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							break;
						}
						else
						{
							//line 248 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.bytesInSeg--;
							//line 249 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int a = this.acc;
							//line 249 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.inputPosition += 1;
							//line 249 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.acc = ( ((int) (a) ) + (((int) (( this.input.readByte() << this.validBits )) )) );
							//line 250 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.validBits += 8;
						}
						
						//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						if ( ! ((( this.validBits < n ))) ) 
						{
							//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							break;
						}
						
					}
					
					//line 254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( this.validBits < 0 )) 
					{
						//line 255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return 0;
					}
					else
					{
						//line 257 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int z = ( ((int) (this.acc) ) & ((int) (( (( 1 << n )) - 1 )) ) );
						//line 258 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.acc = ( ((int) (this.acc) ) >>> n );
						//line 259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.validBits -= n;
						//line 260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return z;
					}
					
				}
				
			}
			else
			{
				//line 264 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int z1 = ( ((int) (this.acc) ) & ((int) (( (( 1 << n )) - 1 )) ) );
				//line 265 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.acc = ( ((int) (this.acc) ) >>> n );
				//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.validBits -= n;
				//line 267 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return z1;
			}
			
		}
		
	}
	
	
	public final int readPacketRaw()
	{
		//line 271 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ( this.bytesInSeg == 0 ) && (( this.lastSeg || ( this.next() == 0 ) )) )) 
		{
			//line 271 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return -1;
		}
		else
		{
			//line 275 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.bytesInSeg--;
			//line 276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.inputPosition += 1;
			//line 271 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return this.input.readByte();
		}
		
	}
	
	
	public final int readPacket()
	{
		//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int x = 0;
		//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ( this.bytesInSeg == 0 ) && (( this.lastSeg || ( this.next() == 0 ) )) )) 
		{
			//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			x = -1;
		}
		else
		{
			//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.bytesInSeg--;
			//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.inputPosition += 1;
			//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			x = this.input.readByte();
		}
		
		//line 283 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.validBits = 0;
		//line 284 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return x;
	}
	
	
	public final void flushPacket()
	{
		//line 288 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		while (( ( this.bytesInSeg != 0 ) || (  ! (this.lastSeg)  && ( this.next() != 0 ) ) ))
		{
			//line 289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.bytesInSeg--;
			//line 290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			{
				//line 290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.input.readByte();
			}
			
		}
		
	}
	
	
	public final void vorbisValidate()
	{
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		haxe.io.Bytes header = haxe.io.Bytes.alloc(6);
		//line 296 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 296 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g = 0;
			//line 296 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g < 6 ))
			{
				//line 296 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g++;
				//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				{
					//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int x = 0;
					//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( ( this.bytesInSeg == 0 ) && (( this.lastSeg || ( this.next() == 0 ) )) )) 
					{
						//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						x = -1;
					}
					else
					{
						//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.bytesInSeg--;
						//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition += 1;
						//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						x = this.input.readByte();
					}
					
					//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.validBits = 0;
					//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					header.b[i] = ((byte) (x) );
				}
				
			}
			
		}
		
		//line 299 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if ( ! (haxe.lang.Runtime.valEq(header.toString(), "vorbis")) ) 
		{
			//line 300 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_SETUP, "vorbis header", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "vorbisValidate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (300) )) )})));
		}
		
	}
	
	
	public void firstPageValidate()
	{
		//line 306 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ((int[]) (this.segments) ).length != 1 )) 
		{
			//line 307 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_FIRST_PAGE, "segmentCount", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "firstPageValidate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (307) )) )})));
		}
		
		//line 309 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ((int) (((int[]) (this.segments) )[0]) ) != 30 )) 
		{
			//line 310 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_FIRST_PAGE, "decodeState head", new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "firstPageValidate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (310) )) )})));
		}
		
	}
	
	
	public void startFirstDecode()
	{
		//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.firstAudioPageOffset = this.inputPosition;
		//line 317 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.firstDecode = true;
	}
	
	
	public final void capturePattern()
	{
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean tmp = false;
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean tmp1 = false;
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean tmp2 = false;
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 1;
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.input.readByte() == 79 )) 
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.inputPosition += 1;
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp2 = ( this.input.readByte() != 103 );
		}
		else
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp2 = true;
		}
		
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if ( ! (tmp2) ) 
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.inputPosition += 1;
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp1 = ( this.input.readByte() != 103 );
		}
		else
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp1 = true;
		}
		
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if ( ! (tmp1) ) 
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.inputPosition += 1;
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp = ( this.input.readByte() != 83 );
		}
		else
		{
			//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp = true;
		}
		
		//line 322 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (tmp) 
		{
			//line 323 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.MISSING_CAPTURE_PATTERN, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "capturePattern"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (323) )) )})));
		}
		
	}
	
	
	public final void skip(int len)
	{
		//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += len;
		//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this1 = new int[len];
		//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec = ((int[]) (this1) );
		//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g1 = 0;
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g1 < len ))
			{
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g1++;
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec) )[i] = this.input.readByte();
			}
			
		}
		
	}
	
	
	public void prepHuffman()
	{
		//line 334 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.validBits <= 24 )) 
		{
			//line 335 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.validBits == 0 )) 
			{
				//line 336 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.acc = 0;
			}
			
			//line 338 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (true)
			{
				//line 339 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( ( this.bytesInSeg == 0 ) && (( this.lastSeg || ( this.next() == 0 ) )) )) 
				{
					//line 340 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					return ;
				}
				else
				{
					//line 342 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.bytesInSeg--;
					//line 343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int a = this.acc;
					//line 343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.inputPosition += 1;
					//line 343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.acc = ( ((int) (a) ) + (((int) (( this.input.readByte() << this.validBits )) )) );
					//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.validBits += 8;
				}
				
				//line 338 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if ( ! ((( this.validBits <= 24 ))) ) 
				{
					//line 338 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
			}
			
		}
		
	}
	
	
	public final int decode(kha.audio2.ogg.vorbis.data.Codebook c)
	{
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.validBits < 10 )) 
		{
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.prepHuffman();
		}
		
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int i = ((int[]) (c.fastHuffman) )[( ((int) (this.acc) ) & ((int) (1023) ) )];
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int val = 0;
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( i >= 0 )) 
		{
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int l = ((int) (((int[]) (c.codewordLengths) )[i]) );
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.acc = ( ((int) (this.acc) ) >>> l );
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.validBits -= l;
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.validBits < 0 )) 
			{
				//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.validBits = 0;
				//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				val = -1;
			}
			else
			{
				//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				val = i;
			}
			
		}
		else
		{
			//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			val = this.decodeScalarRaw(c);
		}
		
		//line 352 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (c.sparse) 
		{
			//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			val = ((int) (((int[]) (c.sortedValues) )[val]) );
		}
		
		//line 355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return val;
	}
	
	
	public final int decodeRaw(kha.audio2.ogg.vorbis.data.Codebook c)
	{
		//line 360 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.validBits < 10 )) 
		{
			//line 361 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.prepHuffman();
		}
		
		//line 365 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int i = ((int[]) (c.fastHuffman) )[( ((int) (this.acc) ) & ((int) (1023) ) )];
		//line 367 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( i >= 0 )) 
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int l = ((int) (((int[]) (c.codewordLengths) )[i]) );
			//line 369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.acc = ( ((int) (this.acc) ) >>> l );
			//line 370 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.validBits -= l;
			//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.validBits < 0 )) 
			{
				//line 372 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.validBits = 0;
				//line 367 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return -1;
			}
			else
			{
				//line 367 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return i;
			}
			
		}
		else
		{
			//line 367 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return this.decodeScalarRaw(c);
		}
		
	}
	
	
	public final boolean isLastByte()
	{
		//line 384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.bytesInSeg == 0 )) 
		{
			//line 384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return this.lastSeg;
		}
		else
		{
			//line 384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return false;
		}
		
	}
	
	
	public java.lang.Object finishDecodePacket(int previousLength, int n, java.lang.Object r)
	{
		//line 389 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int left = ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "left", true), "start", true)) );
		//line 390 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean currentLocValid = false;
		//line 391 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int n2 = ( n >> 1 );
		//line 393 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (this.firstDecode) 
		{
			//line 398 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.currentLoc =  - (n2) ;
			//line 401 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.discardSamplesDeferred = ( ((int) (n) ) - ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "end", true)) ) );
			//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			currentLocValid = true;
			//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.firstDecode = false;
		}
		else
		{
			//line 404 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.discardSamplesDeferred != 0 )) 
			{
				//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				{
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					java.lang.Object __temp_dynop1 = haxe.lang.Runtime.getField(r, "left", true);
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					haxe.lang.Runtime.setField_f(__temp_dynop1, "start", ((double) (( ((int) (haxe.lang.Runtime.getField_f(__temp_dynop1, "start", true)) ) + this.discardSamplesDeferred )) ));
				}
				
				//line 406 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				left = ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "left", true), "start", true)) );
				//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.discardSamplesDeferred = 0;
			}
			
		}
		
		//line 418 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( this.lastSegWhich == this.endSegWithKnownLoc )) 
		{
			//line 420 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( currentLocValid && ( (( this.page.flag & 4 )) != 0 ) )) 
			{
				//line 421 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int currentEnd = ( this.knownLocForPacket - (( ((int) (n) ) - ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "end", true)) ) )) );
				//line 423 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( currentEnd < ( this.currentLoc + ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "end", true)) ) ) )) 
				{
					//line 424 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int len = ( (( currentEnd < this.currentLoc )) ? (0) : (( currentEnd - this.currentLoc )) );
					//line 430 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					len = ( len + ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "left", true), "start", true)) ) );
					//line 431 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.currentLoc += len;
					//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int __temp_odecl1 = ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "start", true)) );
						//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"left", "len", "right"}, new double[]{((double) (((double) (left) )) ), ((double) (((double) (len) )) ), ((double) (((double) (__temp_odecl1) )) )});
					}
					
				}
				
			}
			
			//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.currentLoc = ( this.knownLocForPacket - (( ((int) (n2) ) - ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "left", true), "start", true)) ) )) );
			//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			currentLocValid = true;
		}
		
		//line 448 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (currentLocValid) 
		{
			//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.currentLoc += ( ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "start", true)) ) - ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "left", true), "start", true)) ) );
		}
		
		//line 455 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int __temp_odecl2 = ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "end", true)) );
			//line 458 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int __temp_odecl3 = ((int) (haxe.lang.Runtime.getField_f(haxe.lang.Runtime.getField(r, "right", true), "start", true)) );
			//line 455 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"left", "len", "right"}, new double[]{((double) (((double) (left) )) ), ((double) (((double) (__temp_odecl2) )) ), ((double) (((double) (__temp_odecl3) )) )});
		}
		
	}
	
	
	public final int readInt32()
	{
		//line 464 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 4;
		//line 465 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return this.input.readInt32();
	}
	
	
	public final int readByte()
	{
		//line 470 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 1;
		//line 471 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return this.input.readByte();
	}
	
	
	public final int[] read(int n)
	{
		//line 475 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += n;
		//line 476 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this1 = new int[n];
		//line 476 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec = ((int[]) (this1) );
		//line 477 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 477 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g1 = 0;
			//line 477 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g1 < n ))
			{
				//line 477 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g1++;
				//line 478 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec) )[i] = this.input.readByte();
			}
			
		}
		
		//line 480 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return vec;
	}
	
	
	public final haxe.io.Bytes readBytes(int n)
	{
		//line 484 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += n;
		//line 485 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return this.input.read(n);
	}
	
	
	public final java.lang.String readString(int n)
	{
		//line 490 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += n;
		//line 491 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return this.input.readString(n);
	}
	
	
	public int getSampleNumber(haxe.lang.Function seekFunc, int inputLength)
	{
		//line 497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int restoreOffset = this.inputPosition;
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int previousSafe = 0;
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean tmp = false;
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean aNeg = ( ((int) (inputLength) ) < 0 );
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( (( aNeg != false )) ? (aNeg) : (( ((int) (inputLength) ) >= ((int) (65536) ) )) )) 
		{
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int a = ((int) (( ((int) (inputLength) ) - ((int) (65536) ) )) );
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int b = this.firstAudioPageOffset;
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean aNeg1 = ( ((int) (a) ) < 0 );
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean bNeg = ( ((int) (b) ) < 0 );
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( aNeg1 != bNeg )) 
			{
				//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp = aNeg1;
			}
			else
			{
				//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				tmp = ( ((int) (a) ) >= ((int) (b) ) );
			}
			
		}
		else
		{
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp = false;
		}
		
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (tmp) 
		{
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			previousSafe = ((int) (( ((int) (inputLength) ) - ((int) (65536) ) )) );
		}
		else
		{
			//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			previousSafe = this.firstAudioPageOffset;
		}
		
		//line 507 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition = previousSafe) ), haxe.lang.Runtime.undefined);
		//line 511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int end = 0;
		//line 512 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean last = false;
		//line 513 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 513 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult _g = this.findPage(seekFunc, inputLength);
			//line 513 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (_g.index)
			{
				case 0:
				{
					//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					boolean l = haxe.lang.Runtime.toBool(_g.params[1]);
					//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int e = ((int) (haxe.lang.Runtime.toInt(_g.params[0])) );
					//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 515 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						end = e;
						//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						last = l;
					}
					
					//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1:
				{
					//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.CANT_FIND_LAST_PAGE, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "getSampleNumber"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (518) )) )})));
				}
				
				
			}
			
		}
		
		//line 522 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int lastPageLoc = this.inputPosition;
		//line 527 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 527 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			label1:
			//line 527 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while ( ! (last) )
			{
				//line 528 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				seekFunc.__hx_invoke1_o(((double) (this.inputPosition = end) ), haxe.lang.Runtime.undefined);
				//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				{
					//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult _g1 = this.findPage(seekFunc, inputLength);
					//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					switch (_g1.index)
					{
						case 0:
						{
							//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							boolean l1 = haxe.lang.Runtime.toBool(_g1.params[1]);
							//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int e1 = ((int) (haxe.lang.Runtime.toInt(_g1.params[0])) );
							//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							{
								//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								end = e1;
								//line 532 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								last = l1;
							}
							
							//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							break;
						}
						
						
						case 1:
						{
							//line 536 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							break label1;
						}
						
						
					}
					
				}
				
				//line 539 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				previousSafe = ( lastPageLoc + 1 );
				//line 540 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				lastPageLoc = this.inputPosition;
			}
			
		}
		
		//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition = lastPageLoc) ), haxe.lang.Runtime.undefined);
		//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 6;
		//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this1 = new int[6];
		//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec = ((int[]) (this1) );
		//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g11 = 0;
			//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g11 < 6 ))
			{
				//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g11++;
				//line 546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec) )[i] = this.input.readByte();
			}
			
		}
		
		//line 549 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 4;
		//line 549 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int lo = this.input.readInt32();
		//line 550 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 4;
		//line 550 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int hi = this.input.readInt32();
		//line 551 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( ( ( lo == -1 ) && ( hi == -1 ) ) || ( hi > 0 ) )) 
		{
			//line 552 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			throw haxe.lang.HaxeException.wrap(new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.CANT_FIND_LAST_PAGE, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "getSampleNumber"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (552) )) )})));
		}
		
		//line 555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast = new kha.audio2.ogg.vorbis.data.ProbedPage();
		//line 556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast.pageStart = lastPageLoc;
		//line 557 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast.pageEnd = end;
		//line 558 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast.lastDecodedSample = lo;
		//line 559 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast.firstDecodedSample = null;
		//line 560 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.pLast.afterPreviousPageStart = previousSafe;
		//line 562 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition = restoreOffset) ), haxe.lang.Runtime.undefined);
		//line 563 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return lo;
	}
	
	
	public final void forcePageResync()
	{
		//line 568 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.nextSeg = -1;
	}
	
	
	public final void setInputOffset(haxe.lang.Function seekFunc, int n)
	{
		//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition = n) ), haxe.lang.Runtime.undefined);
	}
	
	
	public kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult findPage(haxe.lang.Function seekFunc, int inputLength)
	{
		//line 578 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		try 
		{
			//line 578 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (true)
			{
				//line 579 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.inputPosition += 1;
				//line 579 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int n = this.input.readByte();
				//line 580 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( n == 79 )) 
				{
					//line 581 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int retryLoc = this.inputPosition;
					//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( ( retryLoc - 25 ) > inputLength )) 
					{
						//line 584 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult.NotFound;
					}
					
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					boolean tmp = false;
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					boolean tmp1 = false;
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.inputPosition += 1;
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( this.input.readByte() == 103 )) 
					{
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition += 1;
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						tmp1 = ( this.input.readByte() != 103 );
					}
					else
					{
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						tmp1 = true;
					}
					
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if ( ! (tmp1) ) 
					{
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition += 1;
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						tmp = ( this.input.readByte() != 83 );
					}
					else
					{
						//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						tmp = true;
					}
					
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (tmp) 
					{
						//line 588 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						continue;
					}
					
					//line 591 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int[] this1 = new int[27];
					//line 591 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int[] header = ((int[]) (this1) );
					//line 592 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					((int[]) (header) )[0] = 79;
					//line 593 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					((int[]) (header) )[1] = 103;
					//line 594 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					((int[]) (header) )[2] = 103;
					//line 595 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					((int[]) (header) )[3] = 83;
					//line 596 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 596 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int _g = 4;
						//line 596 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						while (( _g < 27 ))
						{
							//line 596 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int i = _g++;
							//line 597 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							{
								//line 597 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								this.inputPosition += 1;
								//line 597 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								((int[]) (header) )[i] = this.input.readByte();
							}
							
						}
						
					}
					
					//line 600 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( ((int) (((int[]) (header) )[4]) ) != 0 )) 
					{
						//line 601 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						seekFunc.__hx_invoke1_o(((double) (this.inputPosition = retryLoc) ), haxe.lang.Runtime.undefined);
						//line 602 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						continue;
					}
					
					//line 605 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int goal = ((int) (( ((int) (( ((int) (( ((int) (((int[]) (header) )[22]) ) + (((int) (( ((int) (((int[]) (header) )[23]) ) << 8 )) )) )) ) + (((int) (( ((int) (((int[]) (header) )[24]) ) << 16 )) )) )) ) + (((int) (( ((int) (((int[]) (header) )[25]) ) << 24 )) )) )) );
					//line 606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int _g1 = 22;
						//line 606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						while (( _g1 < 26 ))
						{
							//line 606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int i1 = _g1++;
							//line 607 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							((int[]) (header) )[i1] = 0;
						}
						
					}
					
					//line 610 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int crc = 0;
					//line 611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int _g2 = 0;
						//line 611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						while (( _g2 < 27 ))
						{
							//line 611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int i2 = _g2++;
							//line 612 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							crc = ((int) (( ((int) (( ((int) (crc) ) << 8 )) ) ^ ((int) (((int[]) (kha.audio2.ogg.tools.Crc32.table) )[((int) (( ((int) (((int[]) (header) )[i2]) ) ^ ((int) (( ((int) (crc) ) >>> 24 )) ) )) )]) ) )) );
						}
						
					}
					
					//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int len = 0;
					//line 616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					try 
					{
						//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						{
							//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int _g11 = 0;
							//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int _g3 = ((int) (((int[]) (header) )[26]) );
							//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							while (( _g11 < _g3 ))
							{
								//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								 ++ _g11;
								//line 618 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								this.inputPosition += 1;
								//line 618 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								int s = this.input.readByte();
								//line 619 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								crc = ((int) (( ((int) (( ((int) (crc) ) << 8 )) ) ^ ((int) (((int[]) (kha.audio2.ogg.tools.Crc32.table) )[((int) (( ((int) (s) ) ^ ((int) (( ((int) (crc) ) >>> 24 )) ) )) )]) ) )) );
								//line 620 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								len += s;
							}
							
						}
						
						//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						{
							//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int _g12 = 0;
							//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int _g4 = len;
							//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							while (( _g12 < _g4 ))
							{
								//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								 ++ _g12;
								//line 623 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								this.inputPosition += 1;
								//line 623 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								crc = ((int) (( ((int) (( ((int) (crc) ) << 8 )) ) ^ ((int) (((int[]) (kha.audio2.ogg.tools.Crc32.table) )[((int) (( ((int) (this.input.readByte()) ) ^ ((int) (( ((int) (crc) ) >>> 24 )) ) )) )]) ) )) );
							}
							
						}
						
					}
					catch (java.lang.Throwable __temp_catchallException3)
					{
						//line 616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						haxe.lang.Exceptions.setException(__temp_catchallException3);
						//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						java.lang.Object __temp_catchall4 = __temp_catchallException3;
						//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						if (( __temp_catchall4 instanceof haxe.lang.HaxeException )) 
						{
							//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							__temp_catchall4 = ((haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
						}
						
						//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						if (( __temp_catchall4 instanceof haxe.io.Eof )) 
						{
							//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							haxe.io.Eof e = ((haxe.io.Eof) (__temp_catchall4) );
							//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							{
								//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								return kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult.NotFound;
							}
							
						}
						else
						{
							//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							throw haxe.lang.HaxeException.wrap(__temp_catchallException3);
						}
						
					}
					
					
					//line 630 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( ((int) (crc) ) == goal )) 
					{
						//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int end = this.inputPosition;
						//line 640 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						seekFunc.__hx_invoke1_o(((double) (this.inputPosition = ( retryLoc - 1 )) ), haxe.lang.Runtime.undefined);
						//line 641 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult.Found(end, ( (((int) (( ((int) (((int[]) (header) )[5]) ) & ((int) (4) ) )) )) != 0 ));
					}
					
				}
				
			}
			
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 578 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( __temp_catchall2 instanceof haxe.io.Eof )) 
			{
				//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				haxe.io.Eof e1 = ((haxe.io.Eof) (__temp_catchall2) );
				//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				{
					//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					return kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult.NotFound;
				}
				
			}
			else
			{
				//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw haxe.lang.HaxeException.wrap(__temp_catchallException1);
			}
			
		}
		
		
	}
	
	
	public kha.audio2.ogg.vorbis.data.ProbedPage analyzePage(haxe.lang.Function seekFunc, kha.audio2.ogg.vorbis.data.Header h)
	{
		//line 652 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		kha.audio2.ogg.vorbis.data.ProbedPage z = new kha.audio2.ogg.vorbis.data.ProbedPage();
		//line 653 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean[] this1 = new boolean[255];
		//line 653 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean[] packetType = ((boolean[]) (this1) );
		//line 656 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		z.pageStart = this.inputPosition;
		//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += 27;
		//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this2 = new int[27];
		//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec = ((int[]) (this2) );
		//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g1 = 0;
			//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g1 < 27 ))
			{
				//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g1++;
				//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec) )[i] = this.input.readByte();
			}
			
		}
		
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int n = ((int) (((int[]) (vec) )[26]) );
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.inputPosition += n;
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] this3 = new int[n];
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] vec1 = ((int[]) (this3) );
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g11 = 0;
			//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g11 < n ))
			{
				//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i1 = _g11++;
				//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				((int[]) (vec1) )[i1] = this.input.readByte();
			}
			
		}
		
		//line 664 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int len = 0;
		//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g12 = 0;
			//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g = ((int) (((int[]) (vec) )[26]) );
			//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g12 < _g ))
			{
				//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i2 = _g12++;
				//line 666 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				len += ((int) (((int[]) (vec1) )[i2]) );
			}
			
		}
		
		//line 670 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		z.pageEnd = ( ( ( z.pageStart + 27 ) + ((int) (((int[]) (vec) )[26]) ) ) + len );
		//line 673 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		z.lastDecodedSample = ( ( ( ((int) (((int[]) (vec) )[6]) ) + (( ((int) (((int[]) (vec) )[7]) ) << 8 )) ) + (( ((int) (((int[]) (vec) )[8]) ) << 16 )) ) + (( ((int) (((int[]) (vec) )[9]) ) << 16 )) );
		//line 675 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( (( ((int) (((int[]) (vec) )[5]) ) & 4 )) != 0 )) 
		{
			//line 678 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			z.firstDecodedSample = null;
			//line 679 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			seekFunc.__hx_invoke1_o(((double) (this.inputPosition = z.pageStart) ), haxe.lang.Runtime.undefined);
			//line 680 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return z;
		}
		
		//line 687 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int numPacket = 0;
		//line 688 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean packetStart = ( (( ((int) (((int[]) (vec) )[5]) ) & 1 )) == 0 );
		//line 690 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int modeCount = ((kha.audio2.ogg.vorbis.data.Mode[]) (h.modes) ).length;
		//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g13 = 0;
			//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g2 = ((int) (((int[]) (vec) )[26]) );
			//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g13 < _g2 ))
			{
				//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i3 = _g13++;
				//line 693 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (packetStart) 
				{
					//line 694 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( ((int) (((int[]) (vec1) )[i3]) ) == 0 )) 
					{
						//line 696 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						seekFunc.__hx_invoke1_o(((double) (this.inputPosition = z.pageStart) ), haxe.lang.Runtime.undefined);
						//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return null;
					}
					
					//line 699 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.inputPosition += 1;
					//line 699 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int n1 = this.input.readByte();
					//line 702 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( (( n1 & 1 )) != 0 )) 
					{
						//line 703 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						seekFunc.__hx_invoke1_o(((double) (this.inputPosition = z.pageStart) ), haxe.lang.Runtime.undefined);
						//line 704 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return null;
					}
					
					//line 706 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					n1 >>= 1;
					//line 707 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int n2 = ( modeCount - 1 );
					//line 707 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					haxe.root.Array<java.lang.Object> log2_4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4});
					//line 707 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int b = ( (( n2 < 16384 )) ? (( (( n2 < 16 )) ? (((int) (haxe.lang.Runtime.toInt(log2_4.__get(n2))) )) : (( (( n2 < 512 )) ? (( 5 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 5 )))) ) )) : (( 10 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 10 )))) ) )) )) )) : (( (( n2 < 16777216 )) ? (( (( n2 < 524288 )) ? (( 15 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 15 )))) ) )) : (( 20 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 20 )))) ) )) )) : (( (( n2 < 536870912 )) ? (( 25 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 25 )))) ) )) : (( (( n2 < -2147483648 )) ? (( 30 + ((int) (haxe.lang.Runtime.toInt(log2_4.__get(( n2 >> 30 )))) ) )) : (0) )) )) )) );
					//line 708 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					n1 &= ( (( 1 << b )) - 1 );
					//line 709 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( n1 >= modeCount )) 
					{
						//line 710 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						seekFunc.__hx_invoke1_o(((double) (this.inputPosition = z.pageStart) ), haxe.lang.Runtime.undefined);
						//line 711 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return null;
					}
					
					//line 713 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					((boolean[]) (packetType) )[numPacket++] = ((kha.audio2.ogg.vorbis.data.Mode) (((kha.audio2.ogg.vorbis.data.Mode[]) (h.modes) )[n1]) ).blockflag;
					//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int len1 = ( ((int) (((int[]) (vec1) )[i3]) ) - 1 );
						//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						{
							//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							this.inputPosition += len1;
							//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int[] this4 = new int[len1];
							//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int[] vec2 = ((int[]) (this4) );
							//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							{
								//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								int _g14 = 0;
								//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								while (( _g14 < len1 ))
								{
									//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
									int i4 = _g14++;
									//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
									((int[]) (vec2) )[i4] = this.input.readByte();
								}
								
							}
							
						}
						
					}
					
				}
				else
				{
					//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					int len2 = ((int) (((int[]) (vec1) )[i3]) );
					//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					{
						//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition += len2;
						//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int[] this5 = new int[len2];
						//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						int[] vec3 = ((int[]) (this5) );
						//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						{
							//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							int _g15 = 0;
							//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
							while (( _g15 < len2 ))
							{
								//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								int i5 = _g15++;
								//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
								((int[]) (vec3) )[i5] = this.input.readByte();
							}
							
						}
						
					}
					
				}
				
				//line 718 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				packetStart = ( ((int) (((int[]) (vec1) )[i3]) ) < 255 );
			}
			
		}
		
		//line 723 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int samples = 0;
		//line 731 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( numPacket > 1 )) 
		{
			//line 732 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			samples = ( (((boolean) (((boolean[]) (packetType) )[( numPacket - 1 )]) )) ? (h.blocksize1) : (h.blocksize0) );
		}
		
		//line 735 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int i6 = ( numPacket - 2 );
		//line 736 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		while (( i6 >= 1 ))
		{
			//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			 -- i6;
			//line 740 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (((boolean) (((boolean[]) (packetType) )[i6]) )) 
			{
				//line 741 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (((boolean) (((boolean[]) (packetType) )[( i6 + 1 )]) )) 
				{
					//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					samples += ( h.blocksize1 >> 1 );
				}
				else
				{
					//line 744 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					samples += ( (( ( h.blocksize1 - h.blocksize0 ) >> 2 )) + (( h.blocksize0 >> 1 )) );
				}
				
			}
			else
			{
				//line 747 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				samples += ( h.blocksize0 >> 1 );
			}
			
			//line 749 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			 -- i6;
		}
		
		//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		z.firstDecodedSample = ( ((int) (haxe.lang.Runtime.toInt(z.lastDecodedSample)) ) - ((int) (samples) ) );
		//line 778 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		seekFunc.__hx_invoke1_o(((double) (this.inputPosition = z.pageStart) ), haxe.lang.Runtime.undefined);
		//line 779 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return z;
	}
	
	
	public int decodeScalarRaw(kha.audio2.ogg.vorbis.data.Codebook c)
	{
		//line 785 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.prepHuffman();
		//line 790 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] codewordLengths = c.codewordLengths;
		//line 791 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		int[] codewords = c.codewords;
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		haxe.root.Array<java.lang.Object> sortedCodewords = c.sortedCodewords;
		//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		boolean tmp = false;
		//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (( c.entries > 8 )) 
		{
			//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp = ( sortedCodewords != null );
		}
		else
		{
			//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			tmp = ( codewords != null );
		}
		
		//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		if (tmp) 
		{
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int n = this.acc;
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-1431655766) ) )) )) >>> 1 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (1431655765) ) )) )) << 1 )) ) )) );
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-858993460) ) )) )) >>> 2 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (858993459) ) )) )) << 2 )) ) )) );
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-252645136) ) )) )) >>> 4 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (252645135) ) )) )) << 4 )) ) )) );
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			n = ((int) (( ((int) (( (((int) (( ((int) (n) ) & ((int) (-16711936) ) )) )) >>> 8 )) ) | ((int) (( (((int) (( ((int) (n) ) & ((int) (16711935) ) )) )) << 8 )) ) )) );
			//line 796 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int code = ((int) (( ((int) (( ((int) (n) ) >>> 16 )) ) | ((int) (( ((int) (n) ) << 16 )) ) )) );
			//line 797 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int x = 0;
			//line 798 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int n1 = c.sortedEntries;
			//line 800 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( n1 > 1 ))
			{
				//line 802 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int m = ( x + (( n1 >> 1 )) );
				//line 803 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int a = ((int) (haxe.lang.Runtime.toInt(sortedCodewords.__get(m))) );
				//line 803 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				boolean aNeg = ( ((int) (code) ) < 0 );
				//line 803 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				boolean bNeg = ( ((int) (a) ) < 0 );
				//line 803 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (code) ) >= ((int) (a) ) )) )) 
				{
					//line 804 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					x = m;
					//line 805 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					n1 -= ( n1 >> 1 );
				}
				else
				{
					//line 807 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					n1 >>= 1;
				}
				
			}
			
			//line 812 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if ( ! (c.sparse) ) 
			{
				//line 813 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				x = ((int) (((int[]) (c.sortedValues) )[x]) );
			}
			
			//line 817 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int len = ((int) (((int[]) (codewordLengths) )[x]) );
			//line 818 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (( this.validBits >= len )) 
			{
				//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.acc = ( ((int) (this.acc) ) >>> len );
				//line 820 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				this.validBits -= len;
				//line 821 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return x;
			}
			
			//line 824 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			this.validBits = 0;
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			return -1;
		}
		
		//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g1 = 0;
			//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			int _g = c.entries;
			//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			while (( _g1 < _g ))
			{
				//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int i = _g1++;
				//line 831 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				int cl = ((int) (((int[]) (codewordLengths) )[i]) );
				//line 832 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( cl == 255 )) 
				{
					//line 833 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					continue;
				}
				
				//line 835 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				if (( ((int) (((int[]) (codewords) )[i]) ) == (( ((int) (this.acc) ) & ((int) (( (( 1 << cl )) - 1 )) ) )) )) 
				{
					//line 836 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (( this.validBits >= cl )) 
					{
						//line 837 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.acc = ( ((int) (this.acc) ) >>> cl );
						//line 838 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.validBits -= cl;
						//line 839 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return i;
					}
					
					//line 841 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					this.validBits = 0;
					//line 842 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					return -1;
				}
				
			}
			
		}
		
		//line 846 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.error = new kha.audio2.ogg.vorbis.data.ReaderError(kha.audio2.ogg.vorbis.data.ReaderErrorType.INVALID_STREAM, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.audio2.ogg.vorbis.VorbisDecodeState", "VorbisDecodeState.hx", "decodeScalarRaw"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (846) )) )}));
		//line 847 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		this.validBits = 0;
		//line 848 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return -1;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (field.hashCode())
			{
				case 1240440744:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstAudioPageOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.firstAudioPageOffset = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1110717662:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("validBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.validBits = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -151151307:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLocValid")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentLocValid = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1260448531:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("inputPosition")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1088991481:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentLoc = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1792094858:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("discardSamplesDeferred")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.discardSamplesDeferred = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 376142388:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("knownLocForPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.knownLocForPacket = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1372111685:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("bytesInSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.bytesInSeg = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 322069117:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("endSegWithKnownLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.endSegWithKnownLoc = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1771168511:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferStart")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.channelBufferStart = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -684815490:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSegWhich")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.lastSegWhich = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1686743736:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferEnd")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.channelBufferEnd = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96385:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("acc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.acc = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2069340029:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentSample")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentSample = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1847062626:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("nextSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.nextSeg = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -227111747:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousLength")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.previousLength = ((int) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
			}
			
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (field.hashCode())
			{
				case 1240440744:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstAudioPageOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.firstAudioPageOffset = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3433103:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("page")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.page = ((kha.audio2.ogg.vorbis.data.Page) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -151151307:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLocValid")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentLocValid = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 100604:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("eof")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.eof = haxe.lang.Runtime.toBool(value);
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1088991481:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentLoc = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1020614624:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("pFirst")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.pFirst = ((kha.audio2.ogg.vorbis.data.ProbedPage) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96784904:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("error")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.error = ((kha.audio2.ogg.vorbis.data.ReaderError) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 105795366:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("pLast")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.pLast = ((kha.audio2.ogg.vorbis.data.ProbedPage) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 376142388:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("knownLocForPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.knownLocForPacket = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1110717662:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("validBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.validBits = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 322069117:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("endSegWithKnownLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.endSegWithKnownLoc = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1260448531:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("inputPosition")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.inputPosition = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -684815490:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSegWhich")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.lastSegWhich = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 100358090:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("input")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.input = ((haxe.io.Input) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -47078945:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.lastSeg = haxe.lang.Runtime.toBool(value);
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1792094858:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("discardSamplesDeferred")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.discardSamplesDeferred = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96385:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("acc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.acc = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1055868832:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("segments")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.segments = ((int[]) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1847062626:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("nextSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.nextSeg = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1372111685:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("bytesInSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.bytesInSeg = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1476817730:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstDecode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.firstDecode = haxe.lang.Runtime.toBool(value);
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -588188240:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBuffers")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.channelBuffers = ((double[][]) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1274450525:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("finalY")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.finalY = ((haxe.root.Array<java.lang.Object>[]) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1771168511:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferStart")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.channelBufferStart = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -227111747:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousLength")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.previousLength = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1686743736:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferEnd")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.channelBufferEnd = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 91499975:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousWindow")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.previousWindow = ((double[][]) (value) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2069340029:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentSample")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.currentSample = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return value;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
			}
			
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (field.hashCode())
			{
				case 1519379022:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decodeScalarRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decodeScalarRaw")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3433103:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("page")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.page;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 970567163:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("analyzePage")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "analyzePage")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 100604:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("eof")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.eof;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -679327768:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("findPage")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "findPage")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1020614624:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("pFirst")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.pFirst;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1449190203:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("setInputOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setInputOffset")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 105795366:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("pLast")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.pLast;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1809824776:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("forcePageResync")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "forcePageResync")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1110717662:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("validBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.validBits;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1596942345:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("getSampleNumber")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getSampleNumber")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1260448531:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("inputPosition")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.inputPosition;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -500196025:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readString")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readString")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 100358090:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("input")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.input;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1140063115:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readBytes")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readBytes")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1792094858:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("discardSamplesDeferred")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.discardSamplesDeferred;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3496342:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("read")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "read")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1055868832:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("segments")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.segments;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -868060226:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readByte")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readByte")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1372111685:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("bytesInSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.bytesInSeg;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1133927784:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readInt32")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readInt32")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -588188240:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBuffers")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.channelBuffers;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 396737609:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("finishDecodePacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "finishDecodePacket")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1771168511:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferStart")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.channelBufferStart;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 2041762824:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("isLastByte")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isLastByte")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1686743736:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferEnd")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.channelBufferEnd;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 515194714:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decodeRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decodeRaw")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2069340029:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentSample")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.currentSample;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1335717394:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decode")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 91499975:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousWindow")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.previousWindow;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1938092864:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("prepHuffman")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "prepHuffman")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -227111747:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousLength")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.previousLength;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3532159:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("skip")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "skip")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1274450525:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("finalY")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.finalY;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1773543786:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("capturePattern")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "capturePattern")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1476817730:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstDecode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.firstDecode;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1597456124:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("startFirstDecode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "startFirstDecode")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1847062626:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("nextSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.nextSeg;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2146205803:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstPageValidate")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "firstPageValidate")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96385:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("acc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.acc;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1874039753:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("vorbisValidate")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "vorbisValidate")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -47078945:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.lastSeg;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -619044692:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("flushPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "flushPacket")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -684815490:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSegWhich")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.lastSegWhich;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -604075586:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readPacket")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 322069117:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("endSegWithKnownLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.endSegWithKnownLoc;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -102730358:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readPacketRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readPacketRaw")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 376142388:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("knownLocForPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.knownLocForPacket;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -868075588:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readBits")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96784904:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("error")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.error;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 508499458:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("maybeStartPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "maybeStartPacket")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1088991481:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.currentLoc;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1970033782:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("startPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "startPacket")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -151151307:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLocValid")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.currentLocValid;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3377907:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("next")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1240440744:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstAudioPageOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.firstAudioPageOffset;
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 94756189:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("clone")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "clone")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 109329021:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("setup")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setup")) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
			}
			
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (field.hashCode())
			{
				case 1240440744:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstAudioPageOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.firstAudioPageOffset) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1110717662:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("validBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.validBits) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -151151307:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLocValid")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.currentLocValid) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1260448531:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("inputPosition")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.inputPosition) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1088991481:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.currentLoc) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1792094858:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("discardSamplesDeferred")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.discardSamplesDeferred) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 376142388:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("knownLocForPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.knownLocForPacket) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1372111685:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("bytesInSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.bytesInSeg) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 322069117:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("endSegWithKnownLoc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.endSegWithKnownLoc) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1771168511:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferStart")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.channelBufferStart) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -684815490:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("lastSegWhich")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.lastSegWhich) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1686743736:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("channelBufferEnd")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.channelBufferEnd) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 96385:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("acc")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.acc) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2069340029:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("currentSample")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.currentSample) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1847062626:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("nextSeg")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.nextSeg) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -227111747:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("previousLength")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return ((double) (this.previousLength) );
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
			}
			
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			switch (field.hashCode())
			{
				case 1519379022:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decodeScalarRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.decodeScalarRaw(((kha.audio2.ogg.vorbis.data.Codebook) (dynargs.__get(0)) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 109329021:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("setup")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.setup(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 970567163:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("analyzePage")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.analyzePage(((haxe.lang.Function) (dynargs.__get(0)) ), ((kha.audio2.ogg.vorbis.data.Header) (dynargs.__get(1)) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 94756189:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("clone")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.clone(((haxe.lang.Function) (dynargs.__get(0)) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -679327768:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("findPage")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.findPage(((haxe.lang.Function) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3377907:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("next")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.next();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1449190203:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("setInputOffset")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.setInputOffset(((haxe.lang.Function) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1970033782:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("startPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.startPacket();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1809824776:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("forcePageResync")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.forcePageResync();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 508499458:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("maybeStartPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.maybeStartPacket();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1596942345:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("getSampleNumber")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.getSampleNumber(((haxe.lang.Function) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -868075588:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readBits")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readBits(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -500196025:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readString")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readString(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -102730358:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readPacketRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readPacketRaw();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1140063115:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readBytes")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readBytes(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -604075586:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readPacket();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3496342:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("read")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.read(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -619044692:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("flushPacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.flushPacket();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -868060226:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readByte")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readByte();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1874039753:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("vorbisValidate")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.vorbisValidate();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1133927784:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("readInt32")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.readInt32();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -2146205803:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("firstPageValidate")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.firstPageValidate();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 396737609:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("finishDecodePacket")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.finishDecodePacket(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), dynargs.__get(2));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1597456124:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("startFirstDecode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.startFirstDecode();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 2041762824:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("isLastByte")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.isLastByte();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 1773543786:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("capturePattern")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.capturePattern();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 515194714:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decodeRaw")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.decodeRaw(((kha.audio2.ogg.vorbis.data.Codebook) (dynargs.__get(0)) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case 3532159:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("skip")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.skip(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1335717394:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("decode")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						return this.decode(((kha.audio2.ogg.vorbis.data.Codebook) (dynargs.__get(0)) ));
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
				case -1938092864:
				{
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					if (field.equals("prepHuffman")) 
					{
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						__temp_executeDef1 = false;
						//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
						this.prepHuffman();
					}
					
					//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
					break;
				}
				
				
			}
			
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("firstAudioPageOffset");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("currentLocValid");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("currentLoc");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("error");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("knownLocForPacket");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("endSegWithKnownLoc");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("lastSegWhich");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("lastSeg");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("acc");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("nextSeg");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("firstDecode");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("finalY");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("previousLength");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("previousWindow");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("currentSample");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("channelBufferEnd");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("channelBufferStart");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("channelBuffers");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("bytesInSeg");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("segments");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("discardSamplesDeferred");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("input");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("inputPosition");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("validBits");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("pLast");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("pFirst");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("eof");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		baseArr.push("page");
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
		{
			//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


