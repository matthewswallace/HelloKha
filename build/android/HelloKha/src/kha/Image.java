// Generated by Haxe 3.3.0
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Image extends haxe.lang.HxObject implements kha.Resource, kha.Canvas
{
	public Image(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Image(int width, int height, kha.graphics4.TextureFormat format, boolean renderTarget, int depthAndStencil)
	{
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		kha.Image.__hx_ctor_kha_Image(this, width, height, format, renderTarget, depthAndStencil);
	}
	
	
	public static void __hx_ctor_kha_Image(kha.Image __temp_me63, int width, int height, kha.graphics4.TextureFormat format, boolean renderTarget, int depthAndStencil)
	{
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.bytes = null;
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.framebuffer = -1;
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.tex = -1;
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.myWidth = width;
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.myHeight = height;
		//line 38 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.myRealWidth = kha.Image.upperPowerOfTwo(width);
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.myRealHeight = kha.Image.upperPowerOfTwo(height);
		//line 40 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.format = format;
		//line 41 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		__temp_me63.tex = kha.Image.createTexture();
		//line 42 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, __temp_me63.tex);
		//line 45 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexParameteri(android.opengl.GLES20.GL_TEXTURE_2D, android.opengl.GLES20.GL_TEXTURE_MAG_FILTER, android.opengl.GLES20.GL_LINEAR);
		//line 46 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexParameteri(android.opengl.GLES20.GL_TEXTURE_2D, android.opengl.GLES20.GL_TEXTURE_MIN_FILTER, android.opengl.GLES20.GL_LINEAR);
		//line 47 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexParameteri(android.opengl.GLES20.GL_TEXTURE_2D, android.opengl.GLES20.GL_TEXTURE_WRAP_S, android.opengl.GLES20.GL_CLAMP_TO_EDGE);
		//line 48 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexParameteri(android.opengl.GLES20.GL_TEXTURE_2D, android.opengl.GLES20.GL_TEXTURE_WRAP_T, android.opengl.GLES20.GL_CLAMP_TO_EDGE);
		//line 50 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (renderTarget) 
		{
			//line 51 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			__temp_me63.framebuffer = kha.Image.createFramebuffer();
			//line 52 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glBindFramebuffer(android.opengl.GLES20.GL_FRAMEBUFFER, __temp_me63.framebuffer);
			//line 53 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_RGBA, __temp_me63.get_realWidth(), __temp_me63.get_realHeight(), 0, android.opengl.GLES20.GL_RGBA, ( (( format == kha.graphics4.TextureFormat.RGBA128 )) ? (android.opengl.GLES20.GL_FLOAT) : (android.opengl.GLES20.GL_UNSIGNED_BYTE) ), null);
			//line 54 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glFramebufferTexture2D(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_COLOR_ATTACHMENT0, android.opengl.GLES20.GL_TEXTURE_2D, __temp_me63.tex, 0);
			//line 56 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (depthAndStencil)
			{
				case 0:
				{
					//line 57 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1:
				{
					//line 58 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					__temp_me63.setupDepthBufferOnly();
					//line 58 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 2:
				{
					//line 59 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					__temp_me63.runDepthAndStencilSetupChain();
					//line 59 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3:
				{
					//line 64 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					__temp_me63.runDepthAndStencilSetupChain();
					//line 64 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 4:
				{
					//line 70 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					__temp_me63.runDepthAndStencilSetupChain();
					//line 70 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 74 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glBindFramebuffer(android.opengl.GLES20.GL_FRAMEBUFFER, 0);
		}
		else
		{
			//line 77 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (format)
			{
				case RGBA32:
				{
					//line 83 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_RGBA, __temp_me63.get_realWidth(), __temp_me63.get_realHeight(), 0, android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE, null);
					//line 83 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case L8:
				{
					//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_LUMINANCE, __temp_me63.get_realWidth(), __temp_me63.get_realHeight(), 0, android.opengl.GLES20.GL_LUMINANCE, android.opengl.GLES20.GL_UNSIGNED_BYTE, null);
					//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case RGBA128:
				{
					//line 81 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_RGBA, __temp_me63.get_realWidth(), __temp_me63.get_realHeight(), 0, android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_FLOAT, null);
					//line 81 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				default:
				{
					//line 85 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_RGBA, __temp_me63.get_realWidth(), __temp_me63.get_realHeight(), 0, android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE, null);
					//line 85 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
			}
			
		}
		
		//line 89 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, 0);
	}
	
	
	public static android.content.res.AssetManager assets;
	
	public static java.lang.String convertFramebufferStatus(int status)
	{
		//line 193 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( status == android.opengl.GLES20.GL_FRAMEBUFFER_COMPLETE )) 
		{
			//line 193 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			return "complete";
		}
		else
		{
			//line 194 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (( status == android.opengl.GLES20.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT )) 
			{
				//line 194 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return "incomplete attachments";
			}
			else
			{
				//line 195 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				if (( status == android.opengl.GLES20.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT )) 
				{
					//line 195 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					return "incomplete missing attachments";
				}
				else
				{
					//line 196 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (( status == android.opengl.GLES20.GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS )) 
					{
						//line 196 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return "incomplete dimensions";
					}
					else
					{
						//line 197 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (( status == android.opengl.GLES20.GL_FRAMEBUFFER_UNSUPPORTED )) 
						{
							//line 197 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return "invalid combination of attachments";
						}
						else
						{
							//line 198 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return "unknown";
						}
						
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public static void logFramebufferStatus(int status)
	{
		//line 202 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		java.lang.String message = kha.Image.convertFramebufferStatus(status);
		//line 203 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "framebuffer status \"" + message ) + "\"" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "logFramebufferStatus"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (203) )) )}));
	}
	
	
	public static kha.Image createFromFile(java.lang.String filename)
	{
		//line 208 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		try 
		{
			//line 209 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.graphics.Bitmap b = android.graphics.BitmapFactory.decodeStream(kha.Image.assets.open(filename));
			//line 210 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			kha.Image image = new kha.Image(b.getWidth(), b.getHeight(), kha.graphics4.TextureFormat.RGBA32, false, ((int) (0) ));
			//line 211 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, image.tex);
			//line 213 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES20.GL_RGBA, image.get_realWidth(), image.get_realHeight(), 0, android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE, null);
			//line 215 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLUtils.texSubImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, 0, 0, b, android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE);
			//line 224 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			return image;
		}
		catch (java.io.IOException ex)
		{
			//line 226 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			haxe.lang.Exceptions.setException(ex);
			//line 227 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			ex.printStackTrace();
			//line 228 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			return null;
		}
		
		
	}
	
	
	public static kha.Image create(int width, int height, kha.graphics4.TextureFormat format, kha.graphics4.Usage usage)
	{
		//line 233 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( format == null );
		//line 233 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 233 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			format = kha.graphics4.TextureFormat.RGBA32;
		}
		
		//line 234 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp1 = ( usage == null );
		//line 234 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp1) 
		{
			//line 234 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			usage = kha.graphics4.Usage.StaticUsage;
		}
		
		//line 235 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return new kha.Image(width, height, format, false, ((int) (0) ));
	}
	
	
	public static kha.Image create3D(int width, int height, int depth, kha.graphics4.TextureFormat format, kha.graphics4.Usage usage)
	{
		//line 239 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return null;
	}
	
	
	public static kha.Image createRenderTarget(int width, int height, kha.graphics4.TextureFormat format, java.lang.Object depthStencil, java.lang.Object antiAliasingSamples, java.lang.Object contextId)
	{
		//line 242 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int __temp_contextId62 = ( (haxe.lang.Runtime.eq(contextId, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(contextId)) )) );
		//line 242 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int __temp_antiAliasingSamples61 = ( (haxe.lang.Runtime.eq(antiAliasingSamples, null)) ? (1) : (((int) (haxe.lang.Runtime.toInt(antiAliasingSamples)) )) );
		//line 242 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int __temp_depthStencil60 = ( (haxe.lang.Runtime.eq(depthStencil, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(depthStencil)) )) );
		//line 243 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( format == null );
		//line 243 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 243 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			format = kha.graphics4.TextureFormat.RGBA32;
		}
		
		//line 244 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return new kha.Image(width, height, format, true, __temp_depthStencil60);
	}
	
	
	public static kha.Image fromBytes(haxe.io.Bytes bytes, int width, int height, kha.graphics4.TextureFormat format, kha.graphics4.Usage usage)
	{
		//line 248 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return null;
	}
	
	
	public static int createFramebuffer()
	{
		//line 296 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int[] framebuffers = new int[1];
		//line 297 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glGenFramebuffers(1, framebuffers, 0);
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return framebuffers[0];
	}
	
	
	public static int createTexture()
	{
		//line 302 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int[] textures = new int[1];
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glGenTextures(1, textures, 0);
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return textures[0];
	}
	
	
	public static int maxSize;
	
	public static int get_maxSize()
	{
		//line 393 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return 2048;
	}
	
	
	public static boolean nonPow2Supported;
	
	public static boolean get_nonPow2Supported()
	{
		//line 399 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return false;
	}
	
	
	public static int upperPowerOfTwo(int v)
	{
		//line 403 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		 -- v;
		//line 404 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		v |= ( v >>> 1 );
		//line 405 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		v |= ( v >>> 2 );
		//line 406 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		v |= ( v >>> 4 );
		//line 407 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		v |= ( v >>> 8 );
		//line 408 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		v |= ( v >>> 16 );
		//line 410 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return  ++ v;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return new kha.Image(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return new kha.Image(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(arr.__get(1))) ), ((kha.graphics4.TextureFormat) (arr.__get(2)) ), haxe.lang.Runtime.toBool(arr.__get(3)), ((int) (haxe.lang.Runtime.toInt(arr.__get(4))) ));
	}
	
	
	public int myWidth;
	
	public int myHeight;
	
	public int myRealWidth;
	
	public int myRealHeight;
	
	public kha.graphics4.TextureFormat format;
	
	public int tex;
	
	public int framebuffer;
	
	public int[] depthStencilBuffers;
	
	public kha.graphics1.Graphics graphics1;
	
	public kha.graphics2.Graphics graphics2;
	
	public kha.graphics4.Graphics graphics4;
	
	public void runDepthAndStencilSetupChain()
	{
		//line 93 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		haxe.root.Array<haxe.lang.Function> setupModes = new haxe.root.Array<haxe.lang.Function>(new haxe.lang.Function[]{((haxe.lang.Function) (new haxe.lang.Closure(this, "setup_oesExtension")) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "setup_separateBuffers")) )});
		//line 94 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean succeeded = false;
		//line 96 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 96 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			int _g = 0;
			//line 96 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			while (( _g < setupModes.length ))
			{
				//line 96 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				haxe.lang.Function setup = setupModes.__get(_g);
				//line 96 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				 ++ _g;
				//line 97 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				int result = ((int) (setup.__hx_invoke0_f()) );
				//line 98 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				kha.Image.logFramebufferStatus(result);
				//line 99 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				if (( result == android.opengl.GLES20.GL_FRAMEBUFFER_COMPLETE )) 
				{
					//line 100 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					succeeded = true;
					//line 101 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, "working depth/stencil combination found", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "runDepthAndStencilSetupChain"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (101) )) )}));
					//line 102 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				//line 104 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "trying next setup", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "runDepthAndStencilSetupChain"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )}));
			}
			
		}
		
		//line 107 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if ( ! (succeeded) ) 
		{
			//line 108 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, "no valid depth/stencil combination found", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "runDepthAndStencilSetupChain"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (108) )) )}));
		}
		
	}
	
	
	public int setupDepthBufferOnly()
	{
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, "GL_DEPTH_COMPONENT16 setup", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "setupDepthBufferOnly"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (113) )) )}));
		//line 115 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		this.depthStencilBuffers = new int[1];
		//line 116 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glGenRenderbuffers(1, this.depthStencilBuffers, 0);
		//line 118 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int depthBuffer = this.depthStencilBuffers[0];
		//line 120 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindRenderbuffer(android.opengl.GLES20.GL_RENDERBUFFER, depthBuffer);
		//line 121 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glRenderbufferStorage(android.opengl.GLES20.GL_RENDERBUFFER, android.opengl.GLES20.GL_DEPTH_COMPONENT16, this.get_realWidth(), this.get_realHeight());
		//line 122 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glFramebufferRenderbuffer(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_DEPTH_ATTACHMENT, android.opengl.GLES20.GL_RENDERBUFFER, depthBuffer);
		//line 124 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindRenderbuffer(android.opengl.GLES20.GL_RENDERBUFFER, 0);
		//line 126 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int result = android.opengl.GLES20.glCheckFramebufferStatus(android.opengl.GLES20.GL_FRAMEBUFFER);
		//line 128 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( result != android.opengl.GLES20.GL_FRAMEBUFFER_COMPLETE )) 
		{
			//line 129 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteRenderbuffers(this.depthStencilBuffers.length, this.depthStencilBuffers, 0);
		}
		
		//line 132 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return result;
	}
	
	
	public int setup_oesExtension()
	{
		//line 136 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, "GL_DEPTH_STENCIL_OES setup", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "setup_oesExtension"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (136) )) )}));
		//line 138 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		this.depthStencilBuffers = new int[1];
		//line 139 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glGenTextures(1, this.depthStencilBuffers, 0);
		//line 141 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int dsBuffer = this.depthStencilBuffers[0];
		//line 143 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, dsBuffer);
		//line 145 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexParameteri(android.opengl.GLES20.GL_TEXTURE_2D, android.opengl.GLES20.GL_TEXTURE_MIN_FILTER, android.opengl.GLES20.GL_LINEAR);
		//line 146 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glTexImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, android.opengl.GLES11Ext.GL_DEPTH_STENCIL_OES, this.get_realWidth(), this.get_realHeight(), 0, android.opengl.GLES11Ext.GL_DEPTH_STENCIL_OES, android.opengl.GLES11Ext.GL_UNSIGNED_INT_24_8_OES, null);
		//line 147 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glFramebufferTexture2D(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_DEPTH_ATTACHMENT, android.opengl.GLES20.GL_TEXTURE_2D, dsBuffer, 0);
		//line 148 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glFramebufferTexture2D(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_STENCIL_ATTACHMENT, android.opengl.GLES20.GL_TEXTURE_2D, dsBuffer, 0);
		//line 149 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, 0);
		//line 151 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int result = android.opengl.GLES20.glCheckFramebufferStatus(android.opengl.GLES20.GL_FRAMEBUFFER);
		//line 153 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( result != android.opengl.GLES20.GL_FRAMEBUFFER_COMPLETE )) 
		{
			//line 154 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteRenderbuffers(this.depthStencilBuffers.length, this.depthStencilBuffers, 0);
		}
		
		//line 157 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return result;
	}
	
	
	public int setup_separateBuffers()
	{
		//line 164 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, "GL_DEPTH_COMPONENT16 / GL_STENCIL_INDEX8 setup", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"kha.Image", "Image.hx", "setup_separateBuffers"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (164) )) )}));
		//line 166 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		this.depthStencilBuffers = new int[2];
		//line 167 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glGenRenderbuffers(2, this.depthStencilBuffers, 0);
		//line 169 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int depthBuffer = this.depthStencilBuffers[0];
		//line 170 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int stencilBuffer = this.depthStencilBuffers[1];
		//line 172 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindRenderbuffer(android.opengl.GLES20.GL_RENDERBUFFER, depthBuffer);
		//line 173 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glRenderbufferStorage(android.opengl.GLES20.GL_RENDERBUFFER, android.opengl.GLES20.GL_DEPTH_COMPONENT16, this.get_realWidth(), this.get_realHeight());
		//line 175 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindRenderbuffer(android.opengl.GLES20.GL_RENDERBUFFER, stencilBuffer);
		//line 176 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glRenderbufferStorage(android.opengl.GLES20.GL_RENDERBUFFER, android.opengl.GLES20.GL_STENCIL_INDEX8, this.get_realWidth(), this.get_realHeight());
		//line 178 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glFramebufferRenderbuffer(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_DEPTH_ATTACHMENT, android.opengl.GLES20.GL_RENDERBUFFER, depthBuffer);
		//line 179 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glFramebufferRenderbuffer(android.opengl.GLES20.GL_FRAMEBUFFER, android.opengl.GLES20.GL_STENCIL_ATTACHMENT, android.opengl.GLES20.GL_RENDERBUFFER, stencilBuffer);
		//line 181 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindRenderbuffer(android.opengl.GLES20.GL_RENDERBUFFER, 0);
		//line 183 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int result = android.opengl.GLES20.glCheckFramebufferStatus(android.opengl.GLES20.GL_FRAMEBUFFER);
		//line 185 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( result != android.opengl.GLES20.GL_FRAMEBUFFER_COMPLETE )) 
		{
			//line 186 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteRenderbuffers(this.depthStencilBuffers.length, this.depthStencilBuffers, 0);
		}
		
		//line 189 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return result;
	}
	
	
	public kha.graphics1.Graphics g1;
	
	public kha.graphics1.Graphics get_g1()
	{
		//line 254 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( this.graphics1 == null );
		//line 254 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 255 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			this.graphics1 = new kha.graphics2.Graphics1(((kha.Canvas) (this) ));
		}
		
		//line 257 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.graphics1;
	}
	
	
	public kha.graphics2.Graphics g2;
	
	public kha.graphics2.Graphics get_g2()
	{
		//line 263 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( this.graphics2 == null );
		//line 263 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 264 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			this.graphics2 = new kha.graphics4.Graphics2(((kha.Canvas) (this) ));
		}
		
		//line 266 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.graphics2;
	}
	
	
	public kha.graphics4.Graphics g4;
	
	public kha.graphics4.Graphics get_g4()
	{
		//line 272 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( this.graphics4 == null );
		//line 272 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 273 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			this.graphics4 = new kha.android.Graphics(((kha.Image) (this) ));
		}
		
		//line 275 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.graphics4;
	}
	
	
	public void unload()
	{
		//line 279 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( this.tex >= 0 )) 
		{
			//line 280 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			int[] textures = new int[1];
			//line 281 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			textures[0] = this.tex;
			//line 282 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteTextures(1, textures, 0);
		}
		
		//line 284 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (( this.framebuffer >= 0 )) 
		{
			//line 285 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			int[] framebuffers = new int[1];
			//line 286 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			framebuffers[0] = this.framebuffer;
			//line 287 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteFramebuffers(1, framebuffers, 0);
		}
		
		//line 289 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		boolean tmp = ( this.depthStencilBuffers != null );
		//line 289 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		if (tmp) 
		{
			//line 290 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			android.opengl.GLES20.glDeleteRenderbuffers(this.depthStencilBuffers.length, this.depthStencilBuffers, 0);
			//line 291 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			this.depthStencilBuffers = null;
		}
		
	}
	
	
	public void set(int stage)
	{
		//line 308 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glActiveTexture(( android.opengl.GLES20.GL_TEXTURE0 + stage ));
		//line 309 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, this.tex);
	}
	
	
	public int width;
	
	public int get_width()
	{
		//line 315 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.myWidth;
	}
	
	
	public int height;
	
	public int get_height()
	{
		//line 321 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.myHeight;
	}
	
	
	public int depth;
	
	public int get_depth()
	{
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return 1;
	}
	
	
	public int realWidth;
	
	public int get_realWidth()
	{
		//line 333 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.myRealWidth;
	}
	
	
	public int realHeight;
	
	public int get_realHeight()
	{
		//line 339 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.myRealHeight;
	}
	
	
	public int at(int x, int y)
	{
		//line 343 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return 0;
	}
	
	
	public boolean isOpaque(int x, int y)
	{
		//line 348 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return true;
	}
	
	
	public haxe.io.Bytes bytes;
	
	public haxe.io.Bytes lock(java.lang.Object level)
	{
		//line 353 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		int __temp_level59 = ( (haxe.lang.Runtime.eq(level, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(level)) )) );
		//line 354 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		this.bytes = haxe.io.Bytes.alloc(( (( this.format == kha.graphics4.TextureFormat.RGBA32 )) ? (( ( 4 * this.get_width() ) * this.get_height() )) : (( (( this.format == kha.graphics4.TextureFormat.RGBA128 )) ? (( ( 16 * this.get_width() ) * this.get_height() )) : (( this.get_width() * this.get_height() )) )) ));
		//line 355 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return this.bytes;
	}
	
	
	public void unlock()
	{
		//line 359 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, this.tex);
		//line 362 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 362 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			kha.graphics4.TextureFormat _g = this.format;
			//line 362 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (_g)
			{
				case RGBA32:
				{
					//line 368 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexSubImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, 0, 0, this.get_width(), this.get_height(), android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE, java.nio.ByteBuffer.wrap(((byte[]) (this.bytes.b) )));
					//line 368 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case L8:
				{
					//line 364 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexSubImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, 0, 0, this.get_width(), this.get_height(), android.opengl.GLES20.GL_LUMINANCE, android.opengl.GLES20.GL_UNSIGNED_BYTE, java.nio.ByteBuffer.wrap(((byte[]) (this.bytes.b) )));
					//line 364 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case RGBA128:
				{
					//line 366 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexSubImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, 0, 0, this.get_width(), this.get_height(), android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_FLOAT, java.nio.ByteBuffer.wrap(((byte[]) (this.bytes.b) )));
					//line 366 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				default:
				{
					//line 370 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					android.opengl.GLES20.glTexSubImage2D(android.opengl.GLES20.GL_TEXTURE_2D, 0, 0, 0, this.get_width(), this.get_height(), android.opengl.GLES20.GL_RGBA, android.opengl.GLES20.GL_UNSIGNED_BYTE, java.nio.ByteBuffer.wrap(((byte[]) (this.bytes.b) )));
					//line 370 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
			}
			
		}
		
		//line 374 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		android.opengl.GLES20.glBindTexture(android.opengl.GLES20.GL_TEXTURE_2D, 0);
		//line 375 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		this.bytes = null;
	}
	
	
	public void generateMipmaps(int levels)
	{
	}
	
	
	public void setMipmaps(haxe.root.Array<kha.Image> mipmaps)
	{
	}
	
	
	public void setDepthStencilFrom(kha.Image image)
	{
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (field.hashCode())
			{
				case 1975822437:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.realHeight = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1501354874:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myWidth = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -892127544:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.realWidth = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1135633933:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myHeight = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 95472323:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.depth = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 509340284:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myRealWidth = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1221029593:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.height = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1823315151:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myRealHeight = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.width = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 114727:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("tex")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.tex = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 290633709:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("framebuffer")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.framebuffer = ((int) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (field.hashCode())
			{
				case 94224491:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("bytes")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.bytes = ((haxe.io.Bytes) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1501354874:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myWidth = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1975822437:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.realHeight = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1135633933:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myHeight = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -892127544:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.realWidth = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 509340284:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myRealWidth = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 95472323:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.depth = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1823315151:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.myRealHeight = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1221029593:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.height = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1268779017:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("format")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.format = ((kha.graphics4.TextureFormat) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.width = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 114727:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("tex")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.tex = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3245:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.g4 = ((kha.graphics4.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 290633709:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("framebuffer")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.framebuffer = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3243:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.g2 = ((kha.graphics2.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1013819270:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depthStencilBuffers")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.depthStencilBuffers = ((int[]) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3242:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.g1 = ((kha.graphics1.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051642:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.graphics1 = ((kha.graphics1.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051639:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.graphics4 = ((kha.graphics4.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051641:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.graphics2 = ((kha.graphics2.Graphics) (value) );
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return value;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (field.hashCode())
			{
				case 678063429:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setDepthStencilFrom")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setDepthStencilFrom")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1501354874:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.myWidth;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -254809047:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setMipmaps")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setMipmaps")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1135633933:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.myHeight;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1954138038:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("generateMipmaps")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "generateMipmaps")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 509340284:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.myRealWidth;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -840442044:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("unlock")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "unlock")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1823315151:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.myRealHeight;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3327275:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("lock")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "lock")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1268779017:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("format")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.format;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 94224491:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("bytes")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.bytes;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 114727:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("tex")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.tex;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -336661013:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("isOpaque")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isOpaque")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 290633709:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("framebuffer")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.framebuffer;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3123:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("at")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "at")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1013819270:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depthStencilBuffers")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.depthStencilBuffers;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 755997934:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_realHeight")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051642:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.graphics1;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1975822437:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_realHeight();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.realHeight;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051641:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.graphics2;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -377287393:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_realWidth")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1173051639:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("graphics4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.graphics4;
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -892127544:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_realWidth();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.realWidth;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 214693665:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("runDepthAndStencilSetupChain")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "runDepthAndStencilSetupChain")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1132422298:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_depth")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 124513010:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setupDepthBufferOnly")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setupDepthBufferOnly")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 95472323:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_depth();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.depth;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -540857884:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setup_oesExtension")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setup_oesExtension")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 859648560:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_height")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1240121806:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setup_separateBuffers")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setup_separateBuffers")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1221029593:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_height();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.height;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3242:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_g1();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.g1;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1150076829:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_width")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338829:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g1")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_width();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.width;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3243:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_g2();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.g2;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113762:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("set")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338828:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g2")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -840442113:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("unload")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "unload")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3245:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("g4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.get_g4();
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return this.g4;
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338826:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g4")) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (field.hashCode())
			{
				case 1975822437:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.get_realHeight()) );
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.realHeight) );
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1501354874:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.myWidth) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -892127544:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.get_realWidth()) );
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.realWidth) );
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1135633933:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.myHeight) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 95472323:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.get_depth()) );
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.depth) );
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 509340284:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.myRealWidth) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1221029593:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.get_height()) );
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.height) );
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1823315151:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("myRealHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.myRealHeight) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						if (handleProperties) 
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.get_width()) );
						}
						else
						{
							//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
							return ((double) (this.width) );
						}
						
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 114727:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("tex")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.tex) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 290633709:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("framebuffer")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return ((double) (this.framebuffer) );
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			switch (field.hashCode())
			{
				case 678063429:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setDepthStencilFrom")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.setDepthStencilFrom(((kha.Image) (dynargs.__get(0)) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 214693665:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("runDepthAndStencilSetupChain")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.runDepthAndStencilSetupChain();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -254809047:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setMipmaps")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.setMipmaps(((haxe.root.Array<kha.Image>) (dynargs.__get(0)) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 124513010:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setupDepthBufferOnly")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.setupDepthBufferOnly();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1954138038:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("generateMipmaps")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.generateMipmaps(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -540857884:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setup_oesExtension")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.setup_oesExtension();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -840442044:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("unlock")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.unlock();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1240121806:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("setup_separateBuffers")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.setup_separateBuffers();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3327275:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("lock")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.lock(dynargs.__get(0));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338829:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g1")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_g1();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -336661013:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("isOpaque")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.isOpaque(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338828:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g2")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_g2();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 3123:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("at")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.at(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -1249338826:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_g4")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_g4();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 755997934:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_realHeight")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_realHeight();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -840442113:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("unload")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.unload();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case -377287393:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_realWidth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_realWidth();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 113762:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("set")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						this.set(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1132422298:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_depth")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_depth();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 1150076829:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_width")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_width();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
				case 859648560:
				{
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					if (field.equals("get_height")) 
					{
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						__temp_executeDef1 = false;
						//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
						return this.get_height();
					}
					
					//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
					break;
				}
				
				
			}
			
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("bytes");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("realHeight");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("realWidth");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("depth");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("height");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("width");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("g4");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("g2");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("g1");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("graphics4");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("graphics2");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("graphics1");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("depthStencilBuffers");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("framebuffer");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("tex");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("format");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("myRealHeight");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("myRealWidth");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("myHeight");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		baseArr.push("myWidth");
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
		{
			//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/Image.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


