// Generated by Haxe 3.3.0
package kha.graphics4;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PipelineState extends kha.graphics4.PipelineStateBase
{
	public PipelineState(haxe.lang.EmptyObject empty)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public PipelineState()
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		super(haxe.lang.EmptyObject.EMPTY);
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		kha.graphics4.PipelineState.__hx_ctor_kha_graphics4_PipelineState(this);
	}
	
	
	public static void __hx_ctor_kha_graphics4_PipelineState(kha.graphics4.PipelineState __temp_me181)
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		kha.graphics4.PipelineStateBase.__hx_ctor_kha_graphics4_PipelineStateBase(__temp_me181);
		//line 17 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		__temp_me181.program = android.opengl.GLES20.glCreateProgram();
		//line 18 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		__temp_me181.textures = new haxe.root.Array<java.lang.String>();
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		__temp_me181.textureValues = new haxe.root.Array();
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return new kha.graphics4.PipelineState(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return new kha.graphics4.PipelineState();
	}
	
	
	public int program;
	
	public haxe.root.Array<java.lang.String> textures;
	
	public haxe.root.Array textureValues;
	
	public void compile()
	{
		//line 23 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		this.compileShader(this.vertexShader);
		//line 24 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		this.compileShader(this.fragmentShader);
		//line 25 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glAttachShader(this.program, this.vertexShader.shader);
		//line 26 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glAttachShader(this.program, this.fragmentShader.shader);
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		int index = 0;
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int _g = 0;
			//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			haxe.root.Array<kha.graphics4.VertexElement> _g1 = this.inputLayout.__get(0).elements;
			//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			while (( _g < _g1.length ))
			{
				//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				kha.graphics4.VertexElement element = _g1.__get(_g);
				//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				 ++ _g;
				//line 30 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				android.opengl.GLES20.glBindAttribLocation(this.program, index, element.name);
				//line 31 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				 ++ index;
			}
			
		}
		
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glLinkProgram(this.program);
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		int[] values = new int[1];
		//line 36 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glGetProgramiv(this.program, android.opengl.GLES20.GL_LINK_STATUS, values, 0);
		//line 37 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		if (( values[0] == android.opengl.GLES20.GL_FALSE )) 
		{
			//line 38 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			throw haxe.lang.HaxeException.wrap("Could not link the shader program.");
		}
		
	}
	
	
	public void set()
	{
		//line 43 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glUseProgram(this.program);
		//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int _g1 = 0;
			//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int _g = this.textureValues.length;
			//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			while (( _g1 < _g ))
			{
				//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				int index = _g1++;
				//line 45 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				android.opengl.GLES20.glUniform1i(((int) (haxe.lang.Runtime.toInt(this.textureValues.__get(index))) ), index);
			}
			
		}
		
		//line 47 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glColorMask(this.colorWriteMaskRed, this.colorWriteMaskGreen, this.colorWriteMaskBlue, this.colorWriteMaskAlpha);
	}
	
	
	public void compileShader(java.lang.Object shader)
	{
		//line 51 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		if (( ! (haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(shader, "shader", true), -1)) )) 
		{
			//line 51 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			return ;
		}
		
		//line 52 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		int s = android.opengl.GLES20.glCreateShader(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(shader, "type", true))) ));
		//line 53 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glShaderSource(s, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(shader, "source", true)));
		//line 54 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glCompileShader(s);
		//line 55 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		int[] values = new int[1];
		//line 56 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		android.opengl.GLES20.glGetShaderiv(s, android.opengl.GLES20.GL_COMPILE_STATUS, values, 0);
		//line 57 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		if (( values[0] == android.opengl.GLES20.GL_FALSE )) 
		{
			//line 58 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			throw haxe.lang.HaxeException.wrap(( "Could not compile shader:\n" + android.opengl.GLES20.glGetShaderInfoLog(s) ));
		}
		
		//line 60 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		haxe.lang.Runtime.setField_f(shader, "shader", ((double) (s) ));
	}
	
	
	public kha.graphics4.ConstantLocation getConstantLocation(java.lang.String name)
	{
		//line 64 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return new kha.android.graphics4.ConstantLocation(((int) (android.opengl.GLES20.glGetUniformLocation(this.program, name)) ));
	}
	
	
	public kha.graphics4.TextureUnit getTextureUnit(java.lang.String name)
	{
		//line 68 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		int index = this.findTexture(name);
		//line 69 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		if (( index < 0 )) 
		{
			//line 70 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int location = android.opengl.GLES20.glGetUniformLocation(this.program, name);
			//line 71 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			index = this.textures.length;
			//line 72 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			this.textureValues.push(location);
			//line 73 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			this.textures.push(name);
		}
		
		//line 75 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return new kha.android.graphics4.TextureUnit(((int) (index) ));
	}
	
	
	public int findTexture(java.lang.String name)
	{
		//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int _g1 = 0;
			//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			int _g = this.textures.length;
			//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			while (( _g1 < _g ))
			{
				//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				int index = _g1++;
				//line 80 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				if (haxe.lang.Runtime.valEq(this.textures.__get(index), name)) 
				{
					//line 80 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					return index;
				}
				
			}
			
		}
		
		//line 82 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return -1;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			switch (field.hashCode())
			{
				case -309387644:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("program")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.program = ((int) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			switch (field.hashCode())
			{
				case 362602013:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("textureValues")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.textureValues = ((haxe.root.Array) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -309387644:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("program")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.program = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -1002647880:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("textures")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.textures = ((haxe.root.Array<java.lang.String>) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			switch (field.hashCode())
			{
				case -581810910:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("findTexture")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "findTexture")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -309387644:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("program")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.program;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 973497353:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("getTextureUnit")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getTextureUnit")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -1002647880:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("textures")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.textures;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -1905366289:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("getConstantLocation")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getConstantLocation")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 362602013:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("textureValues")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.textureValues;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -308081672:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("compileShader")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "compileShader")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 950491699:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("compile")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "compile")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 113762:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("set")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			switch (field.hashCode())
			{
				case -309387644:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("program")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return ((double) (this.program) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			switch (field.hashCode())
			{
				case -581810910:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("findTexture")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.findTexture(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 950491699:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("compile")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.compile();
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 973497353:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("getTextureUnit")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.getTextureUnit(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case 113762:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("set")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.set();
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -1905366289:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("getConstantLocation")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						return this.getConstantLocation(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
				case -308081672:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					if (field.equals("compileShader")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
						this.compileShader(dynargs.__get(0));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		baseArr.push("textureValues");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		baseArr.push("textures");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		baseArr.push("program");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/graphics4/PipelineState.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


