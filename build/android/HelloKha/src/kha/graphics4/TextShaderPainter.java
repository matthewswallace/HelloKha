// Generated by Haxe 3.3.0
package kha.graphics4;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TextShaderPainter extends haxe.lang.HxObject
{
	static
	{
		//line 533 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline = null;
		//line 534 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.structure = null;
		//line 537 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.bufferSize = 100;
	}
	
	public TextShaderPainter(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TextShaderPainter(kha.graphics4.Graphics g4)
	{
		//line 553 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.__hx_ctor_kha_graphics4_TextShaderPainter(this, g4);
	}
	
	
	public static void __hx_ctor_kha_graphics4_TextShaderPainter(kha.graphics4.TextShaderPainter __temp_me173, kha.graphics4.Graphics g4)
	{
		//line 551 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.destinationBlend = kha.graphics4.BlendingFactor.Undefined;
		//line 550 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.sourceBlend = kha.graphics4.BlendingFactor.Undefined;
		//line 548 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.bilinear = false;
		//line 545 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.myPipeline = null;
		//line 554 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.g = g4;
		//line 555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.bufferIndex = 0;
		//line 556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.initShaders();
		//line 557 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.initBuffers();
		//line 558 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.projectionLocation = kha.graphics4.TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
		//line 559 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me173.textureLocation = kha.graphics4.TextShaderPainter.shaderPipeline.getTextureUnit("tex");
	}
	
	
	public static kha.graphics4.PipelineState shaderPipeline;
	
	public static kha.graphics4.VertexStructure structure;
	
	public static int bufferSize;
	
	public static void initShaders()
	{
		//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp = ( kha.graphics4.TextShaderPainter.shaderPipeline != null );
		//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp) 
		{
			//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			return ;
		}
		
		//line 585 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline = new kha.graphics4.PipelineState();
		//line 586 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.fragmentShader = kha.Shaders.painter_text_frag;
		//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.vertexShader = kha.Shaders.painter_text_vert;
		//line 589 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.structure = new kha.graphics4.VertexStructure();
		//line 590 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.structure.add("vertexPosition", kha.graphics4.VertexData.Float3);
		//line 591 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.structure.add("texPosition", kha.graphics4.VertexData.Float2);
		//line 592 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.structure.add("vertexColor", kha.graphics4.VertexData.Float4);
		//line 593 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.inputLayout = new haxe.root.Array<kha.graphics4.VertexStructure>(new kha.graphics4.VertexStructure[]{kha.graphics4.TextShaderPainter.structure});
		//line 595 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.blendSource = kha.graphics4.BlendingFactor.SourceAlpha;
		//line 596 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.blendDestination = kha.graphics4.BlendingFactor.InverseSourceAlpha;
		//line 597 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.alphaBlendSource = kha.graphics4.BlendingFactor.SourceAlpha;
		//line 598 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.alphaBlendDestination = kha.graphics4.BlendingFactor.InverseSourceAlpha;
		//line 600 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.TextShaderPainter.shaderPipeline.compile();
	}
	
	
	public static int findIndex(int charcode, haxe.root.Array<java.lang.Object> fontGlyphs)
	{
		//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g1 = 0;
			//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g = fontGlyphs.length;
			//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			while (( _g1 < _g ))
			{
				//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int i = _g1++;
				//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				if (( ((int) (haxe.lang.Runtime.toInt(fontGlyphs.__get(i))) ) == charcode )) 
				{
					//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					return i;
				}
				
			}
			
		}
		
		//line 756 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return 0;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return new kha.graphics4.TextShaderPainter(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return new kha.graphics4.TextShaderPainter(((kha.graphics4.Graphics) (arr.__get(0)) ));
	}
	
	
	public kha.math.FastMatrix4 projectionMatrix;
	
	public kha.graphics4.ConstantLocation projectionLocation;
	
	public kha.graphics4.TextureUnit textureLocation;
	
	public int bufferIndex;
	
	public kha.graphics4.VertexBuffer rectVertexBuffer;
	
	public java.nio.FloatBuffer rectVertices;
	
	public kha.graphics4.IndexBuffer indexBuffer;
	
	public kha.Kravur font;
	
	public kha.Image lastTexture;
	
	public kha.graphics4.Graphics g;
	
	public kha.graphics4.PipelineState myPipeline;
	
	
	
	public int fontSize;
	
	public boolean bilinear;
	
	public kha.graphics4.BlendingFactor sourceBlend;
	
	public kha.graphics4.BlendingFactor destinationBlend;
	
	public kha.graphics4.PipelineState get_pipeline()
	{
		//line 563 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myPipeline;
	}
	
	
	public kha.graphics4.PipelineState set_pipeline(kha.graphics4.PipelineState pipe)
	{
		//line 567 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp = ( pipe == null );
		//line 567 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp) 
		{
			//line 568 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.projectionLocation = kha.graphics4.TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			//line 569 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.textureLocation = kha.graphics4.TextShaderPainter.shaderPipeline.getTextureUnit("tex");
		}
		else
		{
			//line 572 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		
		//line 575 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myPipeline = pipe;
	}
	
	
	public void setProjection(kha.math.FastMatrix4 projectionMatrix)
	{
		//line 579 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.projectionMatrix = projectionMatrix;
	}
	
	
	public void initBuffers()
	{
		//line 604 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.rectVertexBuffer = new kha.graphics4.VertexBuffer(( kha.graphics4.TextShaderPainter.bufferSize * 4 ), kha.graphics4.TextShaderPainter.structure, kha.graphics4.Usage.DynamicUsage, null);
		//line 605 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.rectVertices = this.rectVertexBuffer.lock(null, null);
		//line 607 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.indexBuffer = new kha.graphics4.IndexBuffer(( ( kha.graphics4.TextShaderPainter.bufferSize * 3 ) * 2 ), kha.graphics4.Usage.StaticUsage, null);
		//line 608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		haxe.root.Array<java.lang.Object> indices = this.indexBuffer.lock();
		//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g1 = 0;
			//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g = kha.graphics4.TextShaderPainter.bufferSize;
			//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			while (( _g1 < _g ))
			{
				//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int i = _g1++;
				//line 610 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( i * 3 ) * 2 ), ( i * 4 ));
				//line 611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( ( i * 3 ) * 2 ) + 1 ), ( ( i * 4 ) + 1 ));
				//line 612 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( ( i * 3 ) * 2 ) + 2 ), ( ( i * 4 ) + 2 ));
				//line 613 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( ( i * 3 ) * 2 ) + 3 ), ( i * 4 ));
				//line 614 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( ( i * 3 ) * 2 ) + 4 ), ( ( i * 4 ) + 2 ));
				//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				indices.__set(( ( ( i * 3 ) * 2 ) + 5 ), ( ( i * 4 ) + 3 ));
			}
			
		}
		
		//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.indexBuffer.unlock();
	}
	
	
	public void setRectVertices(double bottomleftx, double bottomlefty, double topleftx, double toplefty, double toprightx, double toprighty, double bottomrightx, double bottomrighty)
	{
		//line 625 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		int baseIndex = ( ( this.bufferIndex * 9 ) * 4 );
		//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, baseIndex, bottomleftx);
		//line 627 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 1 ), bottomlefty);
		//line 628 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 2 ), -5.0);
		//line 630 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 9 ), topleftx);
		//line 631 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 10 ), toplefty);
		//line 632 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 11 ), -5.0);
		//line 634 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 18 ), toprightx);
		//line 635 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 19 ), toprighty);
		//line 636 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 20 ), -5.0);
		//line 638 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 27 ), bottomrightx);
		//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 28 ), bottomrighty);
		//line 640 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 29 ), -5.0);
	}
	
	
	public void setRectTexCoords(double left, double top, double right, double bottom)
	{
		//line 644 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		int baseIndex = ( ( this.bufferIndex * 9 ) * 4 );
		//line 645 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 3 ), left);
		//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 4 ), bottom);
		//line 648 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 12 ), left);
		//line 649 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 13 ), top);
		//line 651 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 21 ), right);
		//line 652 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 22 ), top);
		//line 654 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 30 ), right);
		//line 655 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 31 ), bottom);
	}
	
	
	public void setRectColors(double opacity, int color)
	{
		//line 659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		int baseIndex = ( ( this.bufferIndex * 9 ) * 4 );
		//line 660 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double a = ( opacity * (( (( ((int) (color) ) >>> 24 )) * 0.00392156862745098 )) );
		//line 661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 5 ), ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 ));
		//line 662 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 6 ), ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 ));
		//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 7 ), ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 ));
		//line 664 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 8 ), a);
		//line 666 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 14 ), ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 ));
		//line 667 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 15 ), ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 ));
		//line 668 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 16 ), ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 ));
		//line 669 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 17 ), a);
		//line 671 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 23 ), ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 ));
		//line 672 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 24 ), ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 ));
		//line 673 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 25 ), ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 ));
		//line 674 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 26 ), a);
		//line 676 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 32 ), ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 ));
		//line 677 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 33 ), ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 ));
		//line 678 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 34 ), ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 ));
		//line 679 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.arrays._Float32Array.Float32Array_Impl_.set(this.rectVertices, ( baseIndex + 35 ), a);
	}
	
	
	public void drawBuffer()
	{
		//line 683 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.rectVertexBuffer.unlock();
		//line 684 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setVertexBuffer(this.rectVertexBuffer);
		//line 685 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setIndexBuffer(this.indexBuffer);
		//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.PipelineState tmp = null;
		//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp1 = ( this.get_pipeline() == null );
		//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp1) 
		{
			//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = kha.graphics4.TextShaderPainter.shaderPipeline;
		}
		else
		{
			//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = this.get_pipeline();
		}
		
		//line 686 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setPipeline(tmp);
		//line 687 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setTexture(this.textureLocation, this.lastTexture);
		//line 688 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setMatrix(this.projectionLocation, this.projectionMatrix);
		//line 689 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setTextureParameters(this.textureLocation, kha.graphics4.TextureAddressing.Clamp, kha.graphics4.TextureAddressing.Clamp, ( (this.bilinear) ? (kha.graphics4.TextureFilter.LinearFilter) : (kha.graphics4.TextureFilter.PointFilter) ), ( (this.bilinear) ? (kha.graphics4.TextureFilter.LinearFilter) : (kha.graphics4.TextureFilter.PointFilter) ), kha.graphics4.MipMapFilter.NoMipFilter);
		//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.drawIndexedVertices(0, ( ( this.bufferIndex * 2 ) * 3 ));
		//line 699 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.setTexture(this.textureLocation, null);
		//line 700 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.bufferIndex = 0;
		//line 701 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.rectVertices = this.rectVertexBuffer.lock(null, null);
	}
	
	
	public void setBilinearFilter(boolean bilinear)
	{
		//line 705 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.end();
		//line 706 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.bilinear = bilinear;
	}
	
	
	public void setFont(kha.Font font)
	{
		//line 710 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.font = ((kha.Kravur) (font) );
	}
	
	
	public java.lang.String text;
	
	public void startString(java.lang.String text)
	{
		//line 721 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.text = text;
	}
	
	
	public int charCodeAt(int position)
	{
		//line 730 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(this.text, position))) );
	}
	
	
	public int stringLength()
	{
		//line 739 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.text.length();
	}
	
	
	public void endString()
	{
		//line 748 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.text = null;
	}
	
	
	public void drawString(java.lang.String text, double opacity, int color, double x, double y, kha.math.FastMatrix3 transformation, haxe.root.Array<java.lang.Object> fontGlyphs)
	{
		//line 760 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.KravurImage font = this.font._get(this.fontSize, fontGlyphs);
		//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.Image tex = font.getTexture();
		//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp = false;
		//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp1 = ( this.lastTexture != null );
		//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp1) 
		{
			//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = ( tex != this.lastTexture );
		}
		else
		{
			//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = false;
		}
		
		//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp) 
		{
			//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.drawBuffer();
		}
		
		//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.lastTexture = tex;
		//line 765 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double xpos = x;
		//line 767 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.startString(text);
		//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g1 = 0;
			//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int _g = this.stringLength();
			//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			while (( _g1 < _g ))
			{
				//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int i = _g1++;
				//line 769 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.AlignedQuad q = font.getBakedQuad(kha.graphics4.TextShaderPainter.findIndex(this.charCodeAt(i), fontGlyphs), xpos, y);
				//line 770 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				boolean tmp2 = ( q != null );
				//line 770 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				if (tmp2) 
				{
					//line 771 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (( ( this.bufferIndex + 1 ) >= kha.graphics4.TextShaderPainter.bufferSize )) 
					{
						//line 771 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.drawBuffer();
					}
					
					//line 772 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					this.setRectColors(opacity, color);
					//line 773 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					this.setRectTexCoords(( ( q.s0 * tex.get_width() ) / tex.get_realWidth() ), ( ( q.t0 * tex.get_height() ) / tex.get_realHeight() ), ( ( q.s1 * tex.get_width() ) / tex.get_realWidth() ), ( ( q.t1 * tex.get_height() ) / tex.get_realHeight() ));
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x1 = q.x0;
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y1 = q.y1;
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double w = ( ( ( transformation._02 * x1 ) + ( transformation._12 * y1 ) ) + transformation._22 );
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x2 = ( (( ( ( transformation._00 * x1 ) + ( transformation._10 * y1 ) ) + transformation._20 )) / w );
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y2 = ( (( ( ( transformation._01 * x1 ) + ( transformation._11 * y1 ) ) + transformation._21 )) / w );
					//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x3 = q.x0;
					//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y3 = q.y0;
					//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double w1 = ( ( ( transformation._02 * x3 ) + ( transformation._12 * y3 ) ) + transformation._22 );
					//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x4 = ( (( ( ( transformation._00 * x3 ) + ( transformation._10 * y3 ) ) + transformation._20 )) / w1 );
					//line 775 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y4 = ( (( ( ( transformation._01 * x3 ) + ( transformation._11 * y3 ) ) + transformation._21 )) / w1 );
					//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x5 = q.x1;
					//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y5 = q.y0;
					//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double w2 = ( ( ( transformation._02 * x5 ) + ( transformation._12 * y5 ) ) + transformation._22 );
					//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x6 = ( (( ( ( transformation._00 * x5 ) + ( transformation._10 * y5 ) ) + transformation._20 )) / w2 );
					//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y6 = ( (( ( ( transformation._01 * x5 ) + ( transformation._11 * y5 ) ) + transformation._21 )) / w2 );
					//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x7 = q.x1;
					//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y7 = q.y1;
					//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double w3 = ( ( ( transformation._02 * x7 ) + ( transformation._12 * y7 ) ) + transformation._22 );
					//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double x8 = ( (( ( ( transformation._00 * x7 ) + ( transformation._10 * y7 ) ) + transformation._20 )) / w3 );
					//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					double y8 = ( (( ( ( transformation._01 * x7 ) + ( transformation._11 * y7 ) ) + transformation._21 )) / w3 );
					//line 778 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					this.setRectVertices(x2, y2, x4, y4, x6, y6, x8, y8);
					//line 779 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					xpos += q.xadvance;
					//line 780 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					 ++ this.bufferIndex;
				}
				
			}
			
		}
		
		//line 783 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.endString();
	}
	
	
	public void end()
	{
		//line 787 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (( this.bufferIndex > 0 )) 
		{
			//line 787 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.drawBuffer();
		}
		
		//line 788 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.lastTexture = null;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 365601008:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fontSize")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.fontSize = ((int) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1045476238:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bufferIndex")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.bufferIndex = ((int) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 3556653:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("text")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.text = haxe.lang.Runtime.toString(value);
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -766241040:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionMatrix")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.projectionMatrix = ((kha.math.FastMatrix4) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1178387683:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("destinationBlend")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.destinationBlend = ((kha.graphics4.BlendingFactor) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -328003804:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionLocation")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.projectionLocation = ((kha.graphics4.ConstantLocation) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -111664906:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("sourceBlend")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.sourceBlend = ((kha.graphics4.BlendingFactor) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -415592976:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("textureLocation")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.textureLocation = ((kha.graphics4.TextureUnit) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 887622188:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bilinear")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.bilinear = haxe.lang.Runtime.toBool(value);
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1045476238:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bufferIndex")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.bufferIndex = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 365601008:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fontSize")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.fontSize = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -582263032:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("rectVertexBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.rectVertexBuffer = ((kha.graphics4.VertexBuffer) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -372069726:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.set_pipeline(((kha.graphics4.PipelineState) (value) ));
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1616249341:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("rectVertices")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.rectVertices = ((java.nio.FloatBuffer) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 88780910:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myPipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myPipeline = ((kha.graphics4.PipelineState) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 857359282:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("indexBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.indexBuffer = ((kha.graphics4.IndexBuffer) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 103:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("g")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.g = ((kha.graphics4.Graphics) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 3148879:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("font")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.font = ((kha.Kravur) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 466347429:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("lastTexture")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.lastTexture = ((kha.Image) (value) );
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 100571:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("end")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "end")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -766241040:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionMatrix")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.projectionMatrix;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -88377739:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawString")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -328003804:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionLocation")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.projectionLocation;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1609204940:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("endString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "endString")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -415592976:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("textureLocation")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.textureLocation;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -133532073:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("stringLength")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "stringLength")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1045476238:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bufferIndex")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.bufferIndex;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 397153782:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("charCodeAt")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "charCodeAt")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -582263032:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("rectVertexBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.rectVertexBuffer;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1866154221:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("startString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "startString")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1616249341:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("rectVertices")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.rectVertices;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 3556653:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("text")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.text;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 857359282:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("indexBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.indexBuffer;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1984576465:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setFont")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setFont")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 3148879:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("font")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.font;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 818324934:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setBilinearFilter")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setBilinearFilter")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 466347429:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("lastTexture")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.lastTexture;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -574510428:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawBuffer")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 103:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("g")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.g;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 19140214:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectColors")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setRectColors")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 88780910:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myPipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.myPipeline;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1137074081:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectTexCoords")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setRectTexCoords")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -372069726:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.get_pipeline();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -141455489:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectVertices")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setRectVertices")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 365601008:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fontSize")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.fontSize;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1548047619:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("initBuffers")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "initBuffers")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 887622188:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bilinear")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.bilinear;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1493577647:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setProjection")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setProjection")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -111664906:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("sourceBlend")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.sourceBlend;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -746132001:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_pipeline")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1178387683:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("destinationBlend")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.destinationBlend;
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1999842667:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_pipeline")) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 365601008:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fontSize")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((double) (this.fontSize) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1045476238:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("bufferIndex")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((double) (this.bufferIndex) );
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 100571:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("end")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.end();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1999842667:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.get_pipeline();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -88377739:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.drawString(haxe.lang.Runtime.toString(dynargs.__get(0)), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(3))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(4))) ), ((kha.math.FastMatrix3) (dynargs.__get(5)) ), ((haxe.root.Array<java.lang.Object>) (dynargs.__get(6)) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -746132001:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_pipeline")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.set_pipeline(((kha.graphics4.PipelineState) (dynargs.__get(0)) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1609204940:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("endString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.endString();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1493577647:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setProjection")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setProjection(((kha.math.FastMatrix4) (dynargs.__get(0)) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -133532073:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("stringLength")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.stringLength();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1548047619:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("initBuffers")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.initBuffers();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 397153782:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("charCodeAt")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.charCodeAt(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -141455489:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectVertices")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setRectVertices(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(1))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(2))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(3))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(4))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(5))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(6))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(7))) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1866154221:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("startString")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.startString(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1137074081:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectTexCoords")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setRectTexCoords(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(1))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(2))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(3))) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1984576465:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setFont")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setFont(((kha.Font) (dynargs.__get(0)) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 19140214:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setRectColors")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setRectColors(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 818324934:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setBilinearFilter")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setBilinearFilter(haxe.lang.Runtime.toBool(dynargs.__get(0)));
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -574510428:
				{
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawBuffer")) 
					{
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.drawBuffer();
					}
					
					//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("text");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("destinationBlend");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("sourceBlend");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("bilinear");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("fontSize");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("pipeline");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("myPipeline");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("g");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("lastTexture");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("font");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("indexBuffer");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("rectVertices");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("rectVertexBuffer");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("bufferIndex");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("textureLocation");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("projectionLocation");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("projectionMatrix");
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


