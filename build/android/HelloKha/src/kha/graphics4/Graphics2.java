// Generated by Haxe 3.3.0
package kha.graphics4;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Graphics2 extends kha.graphics2.Graphics
{
	public Graphics2(haxe.lang.EmptyObject empty)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public Graphics2(kha.Canvas canvas)
	{
		//line 804 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		super(haxe.lang.EmptyObject.EMPTY);
		//line 804 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics4.Graphics2.__hx_ctor_kha_graphics4_Graphics2(this, canvas);
	}
	
	
	public static void __hx_ctor_kha_graphics4_Graphics2(kha.graphics4.Graphics2 __temp_me177, kha.Canvas canvas)
	{
		//line 1023 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.myMipmapScaleQuality = kha.graphics2.ImageScaleQuality.High;
		//line 1011 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.myImageScaleQuality = kha.graphics2.ImageScaleQuality.High;
		//line 804 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.graphics2.Graphics.__hx_ctor_kha_graphics2_Graphics(__temp_me177);
		//line 805 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.set_color(kha._Color.Color_Impl_.White);
		//line 806 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.canvas = canvas;
		//line 807 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.g = canvas.get_g4();
		//line 808 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.imagePainter = new kha.graphics4.ImageShaderPainter(((kha.graphics4.Graphics) (__temp_me177.g) ));
		//line 809 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.coloredPainter = new kha.graphics4.ColoredShaderPainter(((kha.graphics4.Graphics) (__temp_me177.g) ));
		//line 810 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.textPainter = new kha.graphics4.TextShaderPainter(((kha.graphics4.Graphics) (__temp_me177.g) ));
		//line 811 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.textPainter.fontSize = __temp_me177.get_fontSize();
		//line 812 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		__temp_me177.setProjection();
		//line 814 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp = ( kha.graphics4.Graphics2.videoPipeline == null );
		//line 814 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp) 
		{
			//line 815 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.Graphics2.videoPipeline = new kha.graphics4.PipelineState();
			//line 816 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.Graphics2.videoPipeline.fragmentShader = kha.Shaders.painter_video_frag;
			//line 817 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.Graphics2.videoPipeline.vertexShader = kha.Shaders.painter_video_vert;
			//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.VertexStructure structure = new kha.graphics4.VertexStructure();
			//line 820 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			structure.add("vertexPosition", kha.graphics4.VertexData.Float3);
			//line 821 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			structure.add("texPosition", kha.graphics4.VertexData.Float2);
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			structure.add("vertexColor", kha.graphics4.VertexData.Float4);
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.Graphics2.videoPipeline.inputLayout = new haxe.root.Array<kha.graphics4.VertexStructure>(new kha.graphics4.VertexStructure[]{structure});
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.Graphics2.videoPipeline.compile();
		}
		
	}
	
	
	public static kha.graphics4.PipelineState videoPipeline;
	
	public static int upperPowerOfTwo(int v)
	{
		//line 830 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		 -- v;
		//line 831 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		v |= ( v >>> 1 );
		//line 832 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		v |= ( v >>> 2 );
		//line 833 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		v |= ( v >>> 4 );
		//line 834 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		v |= ( v >>> 8 );
		//line 835 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		v |= ( v >>> 16 );
		//line 837 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return  ++ v;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return new kha.graphics4.Graphics2(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return new kha.graphics4.Graphics2(((kha.Canvas) (arr.__get(0)) ));
	}
	
	
	public int myColor;
	
	public kha.Font myFont;
	
	public kha.math.FastMatrix4 projectionMatrix;
	
	public kha.graphics4.ImageShaderPainter imagePainter;
	
	public kha.graphics4.ColoredShaderPainter coloredPainter;
	
	public kha.graphics4.TextShaderPainter textPainter;
	
	public kha.Canvas canvas;
	
	public kha.graphics4.Graphics g;
	
	public void setProjection()
	{
		//line 841 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		int width = this.canvas.get_width();
		//line 842 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		int height = this.canvas.get_height();
		//line 843 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (( this.canvas instanceof kha.Framebuffer )) 
		{
			//line 844 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.projectionMatrix = kha.math.FastMatrix4.orthogonalProjection(((double) (0) ), ((double) (width) ), ((double) (height) ), ((double) (0) ), 0.1, ((double) (1000) ));
		}
		else
		{
			//line 846 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if ( ! (kha.Image.get_nonPow2Supported()) ) 
			{
				//line 847 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				width = kha.graphics4.Graphics2.upperPowerOfTwo(width);
				//line 848 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				height = kha.graphics4.Graphics2.upperPowerOfTwo(height);
			}
			
			//line 850 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (this.g.renderTargetsInvertedY()) 
			{
				//line 851 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				this.projectionMatrix = kha.math.FastMatrix4.orthogonalProjection(((double) (0) ), ((double) (width) ), ((double) (0) ), ((double) (height) ), 0.1, ((double) (1000) ));
			}
			else
			{
				//line 853 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				this.projectionMatrix = kha.math.FastMatrix4.orthogonalProjection(((double) (0) ), ((double) (width) ), ((double) (height) ), ((double) (0) ), 0.1, ((double) (1000) ));
			}
			
		}
		
		//line 856 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.setProjection(this.projectionMatrix);
		//line 857 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.setProjection(this.projectionMatrix);
		//line 858 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.setProjection(this.projectionMatrix);
	}
	
	
	@Override public void drawImage(kha.Image img, double x, double y)
	{
		//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ColoredShaderPainter _this = this.coloredPainter;
			//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.triangleBufferIndex > 0 )) 
			{
				//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawTriBuffer(false);
			}
			
			//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.bufferIndex > 0 )) 
			{
				//line 891 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawBuffer(false);
			}
			
		}
		
		//line 892 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double xw = ( x + img.get_width() );
		//line 894 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double yh = ( y + img.get_height() );
		//line 895 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 895 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this1._02 * x ) + ( _this1._12 * yh ) ) + _this1._22 );
		//line 895 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x1 = ( (( ( ( _this1._00 * x ) + ( _this1._10 * yh ) ) + _this1._20 )) / w );
		//line 895 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y1 = ( (( ( ( _this1._01 * x ) + ( _this1._11 * yh ) ) + _this1._21 )) / w );
		//line 896 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 896 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this2._02 * x ) + ( _this2._12 * y ) ) + _this2._22 );
		//line 896 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x2 = ( (( ( ( _this2._00 * x ) + ( _this2._10 * y ) ) + _this2._20 )) / w1 );
		//line 896 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y2 = ( (( ( ( _this2._01 * x ) + ( _this2._11 * y ) ) + _this2._21 )) / w1 );
		//line 897 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this3 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 897 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this3._02 * xw ) + ( _this3._12 * y ) ) + _this3._22 );
		//line 897 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x3 = ( (( ( ( _this3._00 * xw ) + ( _this3._10 * y ) ) + _this3._20 )) / w2 );
		//line 897 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y3 = ( (( ( ( _this3._01 * xw ) + ( _this3._11 * y ) ) + _this3._21 )) / w2 );
		//line 898 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this4 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 898 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w3 = ( ( ( _this4._02 * xw ) + ( _this4._12 * yh ) ) + _this4._22 );
		//line 898 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x4 = ( (( ( ( _this4._00 * xw ) + ( _this4._10 * yh ) ) + _this4._20 )) / w3 );
		//line 898 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y4 = ( (( ( ( _this4._01 * xw ) + ( _this4._11 * yh ) ) + _this4._21 )) / w3 );
		//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ImageShaderPainter _this5 = this.imagePainter;
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			double opacity = this.get_opacity();
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int color = this.get_color();
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean tmp = false;
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( ( _this5.bufferIndex + 1 ) < kha.graphics4.ImageShaderPainter.bufferSize )) 
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				boolean tmp1 = ( _this5.lastTexture != null );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				if (tmp1) 
				{
					//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					tmp = ( img != _this5.lastTexture );
				}
				else
				{
					//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					tmp = false;
				}
				
			}
			else
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				tmp = true;
			}
			
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (tmp) 
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this5.drawBuffer();
			}
			
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double r = ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double g = ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double b = ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double a = ( ( (( ((int) (color) ) >>> 24 )) * 0.00392156862745098 ) * opacity );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 5 ), r);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 6 ), g);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 7 ), b);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 8 ), a);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 14 ), r);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 15 ), g);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 16 ), b);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 17 ), a);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 23 ), r);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 24 ), g);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 25 ), b);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 26 ), a);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 32 ), r);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 33 ), g);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 34 ), b);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 35 ), a);
			}
			
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double right = ( ((double) (img.get_width()) ) / img.get_realWidth() );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double bottom = ( ((double) (img.get_height()) ) / img.get_realHeight() );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex1 = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 3 ), ((double) (0) ));
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 4 ), bottom);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 12 ), ((double) (0) ));
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 13 ), ((double) (0) ));
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 21 ), right);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 22 ), ((double) (0) ));
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 30 ), right);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 31 ), bottom);
			}
			
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex2 = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, baseIndex2, x1);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 1 ), y1);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 2 ), -5.0);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 9 ), x2);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 10 ), y2);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 11 ), -5.0);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 18 ), x3);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 19 ), y3);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 20 ), -5.0);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 27 ), x4);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 28 ), y4);
				//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 29 ), -5.0);
			}
			
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			 ++ _this5.bufferIndex;
			//line 899 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			_this5.lastTexture = img;
		}
		
	}
	
	
	@Override public void drawScaledSubImage(kha.Image img, double sx, double sy, double sw, double sh, double dx, double dy, double dw, double dh)
	{
		//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ColoredShaderPainter _this = this.coloredPainter;
			//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.triangleBufferIndex > 0 )) 
			{
				//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawTriBuffer(false);
			}
			
			//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.bufferIndex > 0 )) 
			{
				//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawBuffer(false);
			}
			
		}
		
		//line 905 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 906 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 903 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y = ( dy + dh );
		//line 906 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this1._02 * dx ) + ( _this1._12 * value_y ) ) + _this1._22 );
		//line 906 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x = ( (( ( ( _this1._00 * dx ) + ( _this1._10 * value_y ) ) + _this1._20 )) / w );
		//line 906 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y = ( (( ( ( _this1._01 * dx ) + ( _this1._11 * value_y ) ) + _this1._21 )) / w );
		//line 907 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 907 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this2._02 * dx ) + ( _this2._12 * dy ) ) + _this2._22 );
		//line 907 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x1 = ( (( ( ( _this2._00 * dx ) + ( _this2._10 * dy ) ) + _this2._20 )) / w1 );
		//line 907 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y1 = ( (( ( ( _this2._01 * dx ) + ( _this2._11 * dy ) ) + _this2._21 )) / w1 );
		//line 908 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this3 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 903 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x = ( dx + dw );
		//line 908 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this3._02 * value_x ) + ( _this3._12 * dy ) ) + _this3._22 );
		//line 908 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x2 = ( (( ( ( _this3._00 * value_x ) + ( _this3._10 * dy ) ) + _this3._20 )) / w2 );
		//line 908 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y2 = ( (( ( ( _this3._01 * value_x ) + ( _this3._11 * dy ) ) + _this3._21 )) / w2 );
		//line 909 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this4 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 903 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x1 = ( dx + dw );
		//line 903 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y1 = ( dy + dh );
		//line 909 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w3 = ( ( ( _this4._02 * value_x1 ) + ( _this4._12 * value_y1 ) ) + _this4._22 );
		//line 909 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x3 = ( (( ( ( _this4._00 * value_x1 ) + ( _this4._10 * value_y1 ) ) + _this4._20 )) / w3 );
		//line 909 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y3 = ( (( ( ( _this4._01 * value_x1 ) + ( _this4._11 * value_y1 ) ) + _this4._21 )) / w3 );
		//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ImageShaderPainter _this5 = this.imagePainter;
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			double opacity = this.get_opacity();
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int color = this.get_color();
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean tmp = false;
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( ( _this5.bufferIndex + 1 ) < kha.graphics4.ImageShaderPainter.bufferSize )) 
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				boolean tmp1 = ( _this5.lastTexture != null );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				if (tmp1) 
				{
					//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					tmp = ( img != _this5.lastTexture );
				}
				else
				{
					//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					tmp = false;
				}
				
			}
			else
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				tmp = true;
			}
			
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (tmp) 
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this5.drawBuffer();
			}
			
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double left = ( sx / img.get_realWidth() );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double top = ( sy / img.get_realHeight() );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double right = ( (( sx + sw )) / img.get_realWidth() );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double bottom = ( (( sy + sh )) / img.get_realHeight() );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 3 ), left);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 4 ), bottom);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 12 ), left);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 13 ), top);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 21 ), right);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 22 ), top);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 30 ), right);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex + 31 ), bottom);
			}
			
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double r = ( (( (( ((int) (color) ) & 16711680 )) >>> 16 )) * 0.00392156862745098 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double g = ( (( (( ((int) (color) ) & 65280 )) >>> 8 )) * 0.00392156862745098 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double b = ( (( ((int) (color) ) & 255 )) * 0.00392156862745098 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				double a = ( ( (( ((int) (color) ) >>> 24 )) * 0.00392156862745098 ) * opacity );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex1 = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 5 ), r);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 6 ), g);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 7 ), b);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 8 ), a);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 14 ), r);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 15 ), g);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 16 ), b);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 17 ), a);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 23 ), r);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 24 ), g);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 25 ), b);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 26 ), a);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 32 ), r);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 33 ), g);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 34 ), b);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex1 + 35 ), a);
			}
			
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			{
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				int baseIndex2 = ( ( _this5.bufferIndex * kha.graphics4.ImageShaderPainter.vertexSize ) * 4 );
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, baseIndex2, x);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 1 ), y);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 2 ), -5.0);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 9 ), x1);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 10 ), y1);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 11 ), -5.0);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 18 ), x2);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 19 ), y2);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 20 ), -5.0);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 27 ), x3);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 28 ), y3);
				//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				kha.arrays._Float32Array.Float32Array_Impl_.set(_this5.rectVertices, ( baseIndex2 + 29 ), -5.0);
			}
			
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			 ++ _this5.bufferIndex;
			//line 910 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			_this5.lastTexture = img;
		}
		
	}
	
	
	@Override public int get_color()
	{
		//line 914 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myColor;
	}
	
	
	@Override public int set_color(int color)
	{
		//line 918 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myColor = color;
	}
	
	
	@Override public void drawRect(double x, double y, double width, double height, java.lang.Object strength)
	{
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double __temp_strength174 = ( (haxe.lang.Runtime.eq(strength, null)) ? (1.0) : (((double) (haxe.lang.Runtime.toDouble(strength)) )) );
		//line 922 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 923 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x = ( x - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y = ( y + ( __temp_strength174 / 2 ) );
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this._02 * value_x ) + ( _this._12 * value_y ) ) + _this._22 );
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x1 = ( (( ( ( _this._00 * value_x ) + ( _this._10 * value_y ) ) + _this._20 )) / w );
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y1 = ( (( ( ( _this._01 * value_x ) + ( _this._11 * value_y ) ) + _this._21 )) / w );
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p1 = new kha.math.FastVector2(x1, y1);
		//line 926 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x1 = ( x - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y1 = ( y - ( __temp_strength174 / 2 ) );
		//line 926 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this1._02 * value_x1 ) + ( _this1._12 * value_y1 ) ) + _this1._22 );
		//line 926 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x2 = ( (( ( ( _this1._00 * value_x1 ) + ( _this1._10 * value_y1 ) ) + _this1._20 )) / w1 );
		//line 926 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y2 = ( (( ( ( _this1._01 * value_x1 ) + ( _this1._11 * value_y1 ) ) + _this1._21 )) / w1 );
		//line 926 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p2 = new kha.math.FastVector2(x2, y2);
		//line 927 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x2 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y2 = ( y - ( __temp_strength174 / 2 ) );
		//line 927 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this2._02 * value_x2 ) + ( _this2._12 * value_y2 ) ) + _this2._22 );
		//line 927 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x3 = ( (( ( ( _this2._00 * value_x2 ) + ( _this2._10 * value_y2 ) ) + _this2._20 )) / w2 );
		//line 927 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y3 = ( (( ( ( _this2._01 * value_x2 ) + ( _this2._11 * value_y2 ) ) + _this2._21 )) / w2 );
		//line 927 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p3 = new kha.math.FastVector2(x3, y3);
		//line 928 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this3 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x3 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y3 = ( y + ( __temp_strength174 / 2 ) );
		//line 928 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w3 = ( ( ( _this3._02 * value_x3 ) + ( _this3._12 * value_y3 ) ) + _this3._22 );
		//line 928 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x4 = ( (( ( ( _this3._00 * value_x3 ) + ( _this3._10 * value_y3 ) ) + _this3._20 )) / w3 );
		//line 928 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y4 = ( (( ( ( _this3._01 * value_x3 ) + ( _this3._11 * value_y3 ) ) + _this3._21 )) / w3 );
		//line 928 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p4 = new kha.math.FastVector2(x4, y4);
		//line 929 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillRect(this.get_opacity(), this.get_color(), p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);
		//line 931 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this4 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x4 = ( x - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y4 = ( ( y + height ) + ( __temp_strength174 / 2 ) );
		//line 931 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w4 = ( ( ( _this4._02 * value_x4 ) + ( _this4._12 * value_y4 ) ) + _this4._22 );
		//line 931 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x5 = ( (( ( ( _this4._00 * value_x4 ) + ( _this4._10 * value_y4 ) ) + _this4._20 )) / w4 );
		//line 931 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y5 = ( (( ( ( _this4._01 * value_x4 ) + ( _this4._11 * value_y4 ) ) + _this4._21 )) / w4 );
		//line 931 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p1 = new kha.math.FastVector2(x5, y5);
		//line 932 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this5 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x5 = ( x + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y5 = ( y - ( __temp_strength174 / 2 ) );
		//line 932 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w5 = ( ( ( _this5._02 * value_x5 ) + ( _this5._12 * value_y5 ) ) + _this5._22 );
		//line 932 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x6 = ( (( ( ( _this5._00 * value_x5 ) + ( _this5._10 * value_y5 ) ) + _this5._20 )) / w5 );
		//line 932 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y6 = ( (( ( ( _this5._01 * value_x5 ) + ( _this5._11 * value_y5 ) ) + _this5._21 )) / w5 );
		//line 932 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p3 = new kha.math.FastVector2(x6, y6);
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this6 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x6 = ( x + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y6 = ( ( y + height ) + ( __temp_strength174 / 2 ) );
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w6 = ( ( ( _this6._02 * value_x6 ) + ( _this6._12 * value_y6 ) ) + _this6._22 );
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x7 = ( (( ( ( _this6._00 * value_x6 ) + ( _this6._10 * value_y6 ) ) + _this6._20 )) / w6 );
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y7 = ( (( ( ( _this6._01 * value_x6 ) + ( _this6._11 * value_y6 ) ) + _this6._21 )) / w6 );
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p4 = new kha.math.FastVector2(x7, y7);
		//line 934 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillRect(this.get_opacity(), this.get_color(), p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);
		//line 936 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this7 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x7 = ( x - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y7 = ( ( y + height ) - ( __temp_strength174 / 2 ) );
		//line 936 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w7 = ( ( ( _this7._02 * value_x7 ) + ( _this7._12 * value_y7 ) ) + _this7._22 );
		//line 936 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x8 = ( (( ( ( _this7._00 * value_x7 ) + ( _this7._10 * value_y7 ) ) + _this7._20 )) / w7 );
		//line 936 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y8 = ( (( ( ( _this7._01 * value_x7 ) + ( _this7._11 * value_y7 ) ) + _this7._21 )) / w7 );
		//line 936 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p2 = new kha.math.FastVector2(x8, y8);
		//line 937 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this8 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x8 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y8 = ( ( y + height ) - ( __temp_strength174 / 2 ) );
		//line 937 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w8 = ( ( ( _this8._02 * value_x8 ) + ( _this8._12 * value_y8 ) ) + _this8._22 );
		//line 937 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x9 = ( (( ( ( _this8._00 * value_x8 ) + ( _this8._10 * value_y8 ) ) + _this8._20 )) / w8 );
		//line 937 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y9 = ( (( ( ( _this8._01 * value_x8 ) + ( _this8._11 * value_y8 ) ) + _this8._21 )) / w8 );
		//line 937 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p3 = new kha.math.FastVector2(x9, y9);
		//line 938 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this9 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x9 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y9 = ( ( y + height ) + ( __temp_strength174 / 2 ) );
		//line 938 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w9 = ( ( ( _this9._02 * value_x9 ) + ( _this9._12 * value_y9 ) ) + _this9._22 );
		//line 938 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x10 = ( (( ( ( _this9._00 * value_x9 ) + ( _this9._10 * value_y9 ) ) + _this9._20 )) / w9 );
		//line 938 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y10 = ( (( ( ( _this9._01 * value_x9 ) + ( _this9._11 * value_y9 ) ) + _this9._21 )) / w9 );
		//line 938 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p4 = new kha.math.FastVector2(x10, y10);
		//line 939 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillRect(this.get_opacity(), this.get_color(), p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this10 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x10 = ( ( x + width ) - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y10 = ( ( y + height ) + ( __temp_strength174 / 2 ) );
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w10 = ( ( ( _this10._02 * value_x10 ) + ( _this10._12 * value_y10 ) ) + _this10._22 );
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x11 = ( (( ( ( _this10._00 * value_x10 ) + ( _this10._10 * value_y10 ) ) + _this10._20 )) / w10 );
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y11 = ( (( ( ( _this10._01 * value_x10 ) + ( _this10._11 * value_y10 ) ) + _this10._21 )) / w10 );
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p1 = new kha.math.FastVector2(x11, y11);
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this11 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x11 = ( ( x + width ) - ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y11 = ( y - ( __temp_strength174 / 2 ) );
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w11 = ( ( ( _this11._02 * value_x11 ) + ( _this11._12 * value_y11 ) ) + _this11._22 );
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x12 = ( (( ( ( _this11._00 * value_x11 ) + ( _this11._10 * value_y11 ) ) + _this11._20 )) / w11 );
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y12 = ( (( ( ( _this11._01 * value_x11 ) + ( _this11._11 * value_y11 ) ) + _this11._21 )) / w11 );
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p2 = new kha.math.FastVector2(x12, y12);
		//line 943 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this12 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x12 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y12 = ( y - ( __temp_strength174 / 2 ) );
		//line 943 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w12 = ( ( ( _this12._02 * value_x12 ) + ( _this12._12 * value_y12 ) ) + _this12._22 );
		//line 943 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x13 = ( (( ( ( _this12._00 * value_x12 ) + ( _this12._10 * value_y12 ) ) + _this12._20 )) / w12 );
		//line 943 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y13 = ( (( ( ( _this12._01 * value_x12 ) + ( _this12._11 * value_y12 ) ) + _this12._21 )) / w12 );
		//line 943 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p3 = new kha.math.FastVector2(x13, y13);
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this13 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x13 = ( ( x + width ) + ( __temp_strength174 / 2 ) );
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y13 = ( ( y + height ) + ( __temp_strength174 / 2 ) );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w13 = ( ( ( _this13._02 * value_x13 ) + ( _this13._12 * value_y13 ) ) + _this13._22 );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x14 = ( (( ( ( _this13._00 * value_x13 ) + ( _this13._10 * value_y13 ) ) + _this13._20 )) / w13 );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y14 = ( (( ( ( _this13._01 * value_x13 ) + ( _this13._11 * value_y13 ) ) + _this13._21 )) / w13 );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p4 = new kha.math.FastVector2(x14, y14);
		//line 945 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillRect(this.get_opacity(), this.get_color(), p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);
	}
	
	
	@Override public void fillRect(double x, double y, double width, double height)
	{
		//line 949 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 950 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 952 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this = this.transformations.__get(( this.transformations.length - 1 ));
		//line 948 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y = ( y + height );
		//line 952 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this._02 * x ) + ( _this._12 * value_y ) ) + _this._22 );
		//line 952 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x1 = ( (( ( ( _this._00 * x ) + ( _this._10 * value_y ) ) + _this._20 )) / w );
		//line 952 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y1 = ( (( ( ( _this._01 * x ) + ( _this._11 * value_y ) ) + _this._21 )) / w );
		//line 953 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 953 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this1._02 * x ) + ( _this1._12 * y ) ) + _this1._22 );
		//line 953 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x2 = ( (( ( ( _this1._00 * x ) + ( _this1._10 * y ) ) + _this1._20 )) / w1 );
		//line 953 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y2 = ( (( ( ( _this1._01 * x ) + ( _this1._11 * y ) ) + _this1._21 )) / w1 );
		//line 954 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 948 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x = ( x + width );
		//line 954 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this2._02 * value_x ) + ( _this2._12 * y ) ) + _this2._22 );
		//line 954 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x3 = ( (( ( ( _this2._00 * value_x ) + ( _this2._10 * y ) ) + _this2._20 )) / w2 );
		//line 954 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y3 = ( (( ( ( _this2._01 * value_x ) + ( _this2._11 * y ) ) + _this2._21 )) / w2 );
		//line 955 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this3 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 948 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_x1 = ( x + width );
		//line 948 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double value_y1 = ( y + height );
		//line 955 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w3 = ( ( ( _this3._02 * value_x1 ) + ( _this3._12 * value_y1 ) ) + _this3._22 );
		//line 955 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x4 = ( (( ( ( _this3._00 * value_x1 ) + ( _this3._10 * value_y1 ) ) + _this3._20 )) / w3 );
		//line 955 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y4 = ( (( ( ( _this3._01 * value_x1 ) + ( _this3._11 * value_y1 ) ) + _this3._21 )) / w3 );
		//line 956 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillRect(this.get_opacity(), this.get_color(), x1, y1, x2, y2, x3, y3, x4, y4);
	}
	
	
	@Override public void drawString(java.lang.String text, double x, double y)
	{
		//line 960 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ColoredShaderPainter _this = this.coloredPainter;
			//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.triangleBufferIndex > 0 )) 
			{
				//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawTriBuffer(false);
			}
			
			//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.bufferIndex > 0 )) 
			{
				//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawBuffer(false);
			}
			
		}
		
		//line 963 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.drawString(text, this.get_opacity(), this.get_color(), x, y, this.transformations.__get(( this.transformations.length - 1 )), this.get_fontGlyphs());
	}
	
	
	@Override public kha.Font get_font()
	{
		//line 967 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myFont;
	}
	
	
	@Override public kha.Font set_font(kha.Font font)
	{
		//line 971 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.setFont(font);
		//line 972 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myFont = font;
	}
	
	
	@Override public int set_fontSize(int value)
	{
		//line 976 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return super.set_fontSize(this.textPainter.fontSize = value);
	}
	
	
	@Override public void drawLine(double x1, double y1, double x2, double y2, java.lang.Object strength)
	{
		//line 979 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double __temp_strength175 = ( (haxe.lang.Runtime.eq(strength, null)) ? (1.0) : (((double) (haxe.lang.Runtime.toDouble(strength)) )) );
		//line 980 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 981 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 983 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 vec = ( (( y2 == y1 )) ? (new kha.math.FastVector2(0, -1)) : (new kha.math.FastVector2(1, (  - ((( x2 - x1 )))  / (( y2 - y1 )) ))) );
		//line 986 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		vec.set_length(__temp_strength175);
		//line 987 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p1 = new kha.math.FastVector2(( x1 + ( 0.5 * vec.x ) ), ( y1 + ( 0.5 * vec.y ) ));
		//line 988 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p2 = new kha.math.FastVector2(( x2 + ( 0.5 * vec.x ) ), ( y2 + ( 0.5 * vec.y ) ));
		//line 989 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p3 = new kha.math.FastVector2(( p1.x - vec.x ), ( p1.y - vec.y ));
		//line 990 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastVector2 p4 = new kha.math.FastVector2(( p2.x - vec.x ), ( p2.y - vec.y ));
		//line 992 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this = this.transformations.__get(( this.transformations.length - 1 ));
		//line 992 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this._02 * p1.x ) + ( _this._12 * p1.y ) ) + _this._22 );
		//line 992 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x = ( (( ( ( _this._00 * p1.x ) + ( _this._10 * p1.y ) ) + _this._20 )) / w );
		//line 992 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y = ( (( ( ( _this._01 * p1.x ) + ( _this._11 * p1.y ) ) + _this._21 )) / w );
		//line 992 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p1 = new kha.math.FastVector2(x, y);
		//line 993 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 993 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this1._02 * p2.x ) + ( _this1._12 * p2.y ) ) + _this1._22 );
		//line 993 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x3 = ( (( ( ( _this1._00 * p2.x ) + ( _this1._10 * p2.y ) ) + _this1._20 )) / w1 );
		//line 993 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y3 = ( (( ( ( _this1._01 * p2.x ) + ( _this1._11 * p2.y ) ) + _this1._21 )) / w1 );
		//line 993 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p2 = new kha.math.FastVector2(x3, y3);
		//line 994 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 994 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this2._02 * p3.x ) + ( _this2._12 * p3.y ) ) + _this2._22 );
		//line 994 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x4 = ( (( ( ( _this2._00 * p3.x ) + ( _this2._10 * p3.y ) ) + _this2._20 )) / w2 );
		//line 994 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y4 = ( (( ( ( _this2._01 * p3.x ) + ( _this2._11 * p3.y ) ) + _this2._21 )) / w2 );
		//line 994 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p3 = new kha.math.FastVector2(x4, y4);
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this3 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w3 = ( ( ( _this3._02 * p4.x ) + ( _this3._12 * p4.y ) ) + _this3._22 );
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x5 = ( (( ( ( _this3._00 * p4.x ) + ( _this3._10 * p4.y ) ) + _this3._20 )) / w3 );
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y5 = ( (( ( ( _this3._01 * p4.x ) + ( _this3._11 * p4.y ) ) + _this3._21 )) / w3 );
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		p4 = new kha.math.FastVector2(x5, y5);
		//line 997 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillTriangle(this.get_opacity(), this.get_color(), p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);
		//line 998 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillTriangle(this.get_opacity(), this.get_color(), p3.x, p3.y, p2.x, p2.y, p4.x, p4.y);
	}
	
	
	@Override public void fillTriangle(double x1, double y1, double x2, double y2, double x3, double y3)
	{
		//line 1002 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 1003 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 1005 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this = this.transformations.__get(( this.transformations.length - 1 ));
		//line 1005 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w = ( ( ( _this._02 * x1 ) + ( _this._12 * y1 ) ) + _this._22 );
		//line 1005 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x = ( (( ( ( _this._00 * x1 ) + ( _this._10 * y1 ) ) + _this._20 )) / w );
		//line 1005 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y = ( (( ( ( _this._01 * x1 ) + ( _this._11 * y1 ) ) + _this._21 )) / w );
		//line 1006 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this1 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 1006 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w1 = ( ( ( _this1._02 * x2 ) + ( _this1._12 * y2 ) ) + _this1._22 );
		//line 1006 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x4 = ( (( ( ( _this1._00 * x2 ) + ( _this1._10 * y2 ) ) + _this1._20 )) / w1 );
		//line 1006 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y4 = ( (( ( ( _this1._01 * x2 ) + ( _this1._11 * y2 ) ) + _this1._21 )) / w1 );
		//line 1007 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		kha.math.FastMatrix3 _this2 = this.transformations.__get(( this.transformations.length - 1 ));
		//line 1007 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double w2 = ( ( ( _this2._02 * x3 ) + ( _this2._12 * y3 ) ) + _this2._22 );
		//line 1007 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double x5 = ( (( ( ( _this2._00 * x3 ) + ( _this2._10 * y3 ) ) + _this2._20 )) / w2 );
		//line 1007 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		double y5 = ( (( ( ( _this2._01 * x3 ) + ( _this2._11 * y3 ) ) + _this2._21 )) / w2 );
		//line 1008 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.fillTriangle(this.get_opacity(), this.get_color(), x, y, x4, y4, x5, y5);
	}
	
	
	public kha.graphics2.ImageScaleQuality myImageScaleQuality;
	
	@Override public kha.graphics2.ImageScaleQuality get_imageScaleQuality()
	{
		//line 1014 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myImageScaleQuality;
	}
	
	
	@Override public kha.graphics2.ImageScaleQuality set_imageScaleQuality(kha.graphics2.ImageScaleQuality value)
	{
		//line 1018 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.setBilinearFilter(( value == kha.graphics2.ImageScaleQuality.High ));
		//line 1019 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.setBilinearFilter(( value == kha.graphics2.ImageScaleQuality.High ));
		//line 1020 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myImageScaleQuality = value;
	}
	
	
	public kha.graphics2.ImageScaleQuality myMipmapScaleQuality;
	
	@Override public kha.graphics2.ImageScaleQuality get_mipmapScaleQuality()
	{
		//line 1026 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myMipmapScaleQuality;
	}
	
	
	@Override public kha.graphics2.ImageScaleQuality set_mipmapScaleQuality(kha.graphics2.ImageScaleQuality value)
	{
		//line 1030 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.setBilinearMipmapFilter(( value == kha.graphics2.ImageScaleQuality.High ));
		//line 1032 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return this.myMipmapScaleQuality = value;
	}
	
	
	@Override public void setPipeline(kha.graphics4.PipelineState pipeline)
	{
		//line 1036 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.flush();
		//line 1037 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.set_pipeline(pipeline);
		//line 1038 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.coloredPainter.set_pipeline(pipeline);
		//line 1039 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.set_pipeline(pipeline);
		//line 1040 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp = ( pipeline != null );
		//line 1040 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp) 
		{
			//line 1040 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.g.setPipeline(pipeline);
		}
		
	}
	
	
	@Override public void scissor(int x, int y, int width, int height)
	{
		//line 1044 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.flush();
		//line 1045 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.scissor(x, y, width, height);
	}
	
	
	@Override public void disableScissor()
	{
		//line 1050 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.flush();
		//line 1051 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.disableScissor();
	}
	
	
	@Override public void begin(java.lang.Object clear, java.lang.Object clearColor)
	{
		//line 1054 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean __temp_clear176 = ( (haxe.lang.Runtime.eq(clear, null)) ? (true) : (haxe.lang.Runtime.toBool(clear)) );
		//line 1055 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.begin(null);
		//line 1056 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (__temp_clear176) 
		{
			//line 1056 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			this.clear(clearColor);
		}
		
		//line 1057 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.setProjection();
	}
	
	
	@Override public void clear(java.lang.Object color)
	{
		//line 1061 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.flush();
		//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		java.lang.Object tmp = null;
		//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		boolean tmp1 = haxe.lang.Runtime.eq(color, null);
		//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		if (tmp1) 
		{
			//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = kha._Color.Color_Impl_.Black;
		}
		else
		{
			//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			tmp = color;
		}
		
		//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.clear(tmp, null, null);
	}
	
	
	@Override public void flush()
	{
		//line 1066 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.imagePainter.end();
		//line 1067 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.textPainter.end();
		//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			kha.graphics4.ColoredShaderPainter _this = this.coloredPainter;
			//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.triangleBufferIndex > 0 )) 
			{
				//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawTriBuffer(false);
			}
			
			//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (( _this.bufferIndex > 0 )) 
			{
				//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				_this.drawBuffer(false);
			}
			
		}
		
	}
	
	
	@Override public void end()
	{
		//line 1072 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.flush();
		//line 1073 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.g.end();
	}
	
	
	public void drawVideoInternal(kha.Video video, double x, double y, double width, double height)
	{
	}
	
	
	@Override public void drawVideo(kha.Video video, double x, double y, double width, double height)
	{
		//line 1081 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.setPipeline(kha.graphics4.Graphics2.videoPipeline);
		//line 1082 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.drawVideoInternal(video, x, y, width, height);
		//line 1083 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		this.setPipeline(null);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 1483070743:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myColor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myColor = ((int) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case -1590454839:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myMipmapScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myMipmapScaleQuality = ((kha.graphics2.ImageScaleQuality) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1483070743:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myColor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myColor = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1102624004:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myImageScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myImageScaleQuality = ((kha.graphics2.ImageScaleQuality) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1060448229:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myFont")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.myFont = ((kha.Font) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 103:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("g")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.g = ((kha.graphics4.Graphics) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -766241040:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionMatrix")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.projectionMatrix = ((kha.math.FastMatrix4) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1367706280:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("canvas")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.canvas = ((kha.Canvas) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -203151440:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("imagePainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.imagePainter = ((kha.graphics4.ImageShaderPainter) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1641350242:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("textPainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.textPainter = ((kha.graphics4.TextShaderPainter) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1597128727:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("coloredPainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.coloredPainter = ((kha.graphics4.ColoredShaderPainter) (value) );
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return value;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 138125719:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawVideo")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawVideo")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1483070743:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myColor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.myColor;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1094862196:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawVideoInternal")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawVideoInternal")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1060448229:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myFont")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.myFont;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("end")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "end")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -766241040:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("projectionMatrix")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.projectionMatrix;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 97532676:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("flush")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "flush")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -203151440:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("imagePainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.imagePainter;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 94746189:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("clear")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "clear")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1597128727:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("coloredPainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.coloredPainter;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("begin")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "begin")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1641350242:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("textPainter")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.textPainter;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -801444908:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("disableScissor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "disableScissor")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1367706280:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("canvas")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.canvas;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1918503900:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("scissor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "scissor")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 103:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("g")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.g;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1617250596:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setPipeline")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setPipeline")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1493577647:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setProjection")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setProjection")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 200964602:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_mipmapScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_mipmapScaleQuality")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 126236279:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawImage")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawImage")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1112163706:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_mipmapScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_mipmapScaleQuality")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -156901415:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawScaledSubImage")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawScaledSubImage")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1590454839:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myMipmapScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.myMipmapScaleQuality;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1131792698:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_color")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_color")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 190580403:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_imageScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_imageScaleQuality")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 917175622:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_color")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_color")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1949336743:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_imageScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_imageScaleQuality")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -826951352:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawRect")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawRect")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1102624004:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myImageScaleQuality")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return this.myImageScaleQuality;
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -729134585:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fillRect")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fillRect")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 462434475:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("fillTriangle")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fillTriangle")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -88377739:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawString")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawString")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -827125928:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawLine")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "drawLine")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1976261528:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("get_font")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_font")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -8461267:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_fontSize")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_fontSize")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1415149068:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("set_font")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_font")) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (field.hashCode())
			{
				case 1483070743:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("myColor")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return ((double) (this.myColor) );
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			int __temp_hash2 = field.hashCode();
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			boolean __temp_executeDef1 = true;
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			switch (__temp_hash2)
			{
				case 138125719:
				case 100571:
				case 97532676:
				case 94746189:
				case 93616297:
				case -801444908:
				case 1918503900:
				case 1617250596:
				case 200964602:
				case -1112163706:
				case 190580403:
				case 1949336743:
				case 462434475:
				case -827125928:
				case -8461267:
				case 1415149068:
				case 1976261528:
				case -88377739:
				case -729134585:
				case -826951352:
				case 917175622:
				case 1131792698:
				case -156901415:
				case 126236279:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (( (( ( __temp_hash2 == 138125719 ) && field.equals("drawVideo") )) || ( (( ( __temp_hash2 == 100571 ) && field.equals("end") )) || ( (( ( __temp_hash2 == 97532676 ) && field.equals("flush") )) || ( (( ( __temp_hash2 == 94746189 ) && field.equals("clear") )) || ( (( ( __temp_hash2 == 93616297 ) && field.equals("begin") )) || ( (( ( __temp_hash2 == -801444908 ) && field.equals("disableScissor") )) || ( (( ( __temp_hash2 == 1918503900 ) && field.equals("scissor") )) || ( (( ( __temp_hash2 == 1617250596 ) && field.equals("setPipeline") )) || ( (( ( __temp_hash2 == 200964602 ) && field.equals("set_mipmapScaleQuality") )) || ( (( ( __temp_hash2 == -1112163706 ) && field.equals("get_mipmapScaleQuality") )) || ( (( ( __temp_hash2 == 190580403 ) && field.equals("set_imageScaleQuality") )) || ( (( ( __temp_hash2 == 1949336743 ) && field.equals("get_imageScaleQuality") )) || ( (( ( __temp_hash2 == 462434475 ) && field.equals("fillTriangle") )) || ( (( ( __temp_hash2 == -827125928 ) && field.equals("drawLine") )) || ( (( ( __temp_hash2 == -8461267 ) && field.equals("set_fontSize") )) || ( (( ( __temp_hash2 == 1415149068 ) && field.equals("set_font") )) || ( (( ( __temp_hash2 == 1976261528 ) && field.equals("get_font") )) || ( (( ( __temp_hash2 == -88377739 ) && field.equals("drawString") )) || ( (( ( __temp_hash2 == -729134585 ) && field.equals("fillRect") )) || ( (( ( __temp_hash2 == -826951352 ) && field.equals("drawRect") )) || ( (( ( __temp_hash2 == 917175622 ) && field.equals("set_color") )) || ( (( ( __temp_hash2 == 1131792698 ) && field.equals("get_color") )) || ( (( ( __temp_hash2 == -156901415 ) && field.equals("drawScaledSubImage") )) || field.equals("drawImage") ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						return haxe.lang.Runtime.slowCallField(this, field, dynargs);
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case -1493577647:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("setProjection")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.setProjection();
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
				case 1094862196:
				{
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					if (field.equals("drawVideoInternal")) 
					{
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						__temp_executeDef1 = false;
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
						this.drawVideoInternal(((kha.Video) (dynargs.__get(0)) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(1))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(2))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(3))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(4))) ));
					}
					
					//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
					break;
				}
				
				
			}
			
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			if (__temp_executeDef1) 
			{
				//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("myMipmapScaleQuality");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("myImageScaleQuality");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("g");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("canvas");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("textPainter");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("coloredPainter");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("imagePainter");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("projectionMatrix");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("myFont");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		baseArr.push("myColor");
		//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
		{
			//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics4/Graphics2.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


