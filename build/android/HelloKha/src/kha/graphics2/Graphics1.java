// Generated by Haxe 3.3.0
package kha.graphics2;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Graphics1 extends haxe.lang.HxObject implements kha.graphics1.Graphics
{
	public Graphics1(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Graphics1(kha.Canvas canvas)
	{
		//line 15 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		kha.graphics2.Graphics1.__hx_ctor_kha_graphics2_Graphics1(this, canvas);
	}
	
	
	public static void __hx_ctor_kha_graphics2_Graphics1(kha.graphics2.Graphics1 __temp_me144, kha.Canvas canvas)
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		__temp_me144.canvas = canvas;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		return new kha.graphics2.Graphics1(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		return new kha.graphics2.Graphics1(((kha.Canvas) (arr.__get(0)) ));
	}
	
	
	public kha.Canvas canvas;
	
	public kha.Image texture;
	
	public haxe.io.Bytes pixels;
	
	public void begin()
	{
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		boolean tmp = ( this.texture == null );
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		if (tmp) 
		{
			//line 21 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			this.texture = kha.Image.create(this.canvas.get_width(), this.canvas.get_height(), kha.graphics4.TextureFormat.RGBA32, kha.graphics4.Usage.ReadableUsage);
		}
		
		//line 23 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		this.pixels = this.texture.lock(null);
	}
	
	
	public void end()
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		this.texture.unlock();
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		this.canvas.get_g2().begin(null, null);
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		this.canvas.get_g2().drawImage(this.texture, ((double) (0) ), ((double) (0) ));
		//line 30 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		this.canvas.get_g2().end();
	}
	
	
	public void setPixel(int x, int y, int color)
	{
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		haxe.io.Bytes _this = this.pixels;
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		int pos = ( ( ( y * this.texture.get_realWidth() ) * 4 ) + ( x * 4 ) );
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		_this.b[pos] = ((byte) (color) );
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		_this.b[( pos + 1 )] = ((byte) (( color >> 8 )) );
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		_this.b[( pos + 2 )] = ((byte) (( color >> 16 )) );
		//line 34 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		_this.b[( pos + 3 )] = ((byte) (( color >>> 24 )) );
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			switch (field.hashCode())
			{
				case -987857235:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("pixels")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.pixels = ((haxe.io.Bytes) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case -1367706280:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("canvas")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.canvas = ((kha.Canvas) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case -1417816805:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("texture")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.texture = ((kha.Image) (value) );
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return value;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			switch (field.hashCode())
			{
				case 1401393988:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("setPixel")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setPixel")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case -1367706280:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("canvas")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return this.canvas;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "end")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case -1417816805:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("texture")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return this.texture;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "begin")) );
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case -987857235:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("pixels")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						return this.pixels;
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			switch (field.hashCode())
			{
				case 1401393988:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("setPixel")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.setPixel(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(2))) ));
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case 93616297:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("begin")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.begin();
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
				case 100571:
				{
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					if (field.equals("end")) 
					{
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						__temp_executeDef1 = false;
						//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
						this.end();
					}
					
					//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
					break;
				}
				
				
			}
			
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		baseArr.push("pixels");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		baseArr.push("texture");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		baseArr.push("canvas");
		//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
		{
			//line 10 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/Graphics1.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


