// Generated by Haxe 3.3.0
package kha.graphics2.truetype;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class StbTruetype extends haxe.lang.HxObject
{
	static
	{
		//line 185 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_vmove = 1;
		//line 186 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_vline = 2;
		//line 187 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_vcurve = 3;
		//line 189 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
		//line 190 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MACSTYLE_BOLD = 1;
		//line 191 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
		//line 192 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
		//line 193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MACSTYLE_NONE = 8;
		//line 196 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
		//line 197 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
		//line 198 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
		//line 199 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
		//line 202 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
		//line 203 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
		//line 204 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
		//line 205 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
		//line 206 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
		//line 209 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_EID_SYMBOL = 0;
		//line 210 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
		//line 211 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
		//line 212 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
		//line 215 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_ROMAN = 0;
		//line 216 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_ARABIC = 4;
		//line 217 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
		//line 218 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_HEBREW = 5;
		//line 219 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
		//line 220 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_GREEK = 6;
		//line 221 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_KOREAN = 3;
		//line 222 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
		//line 226 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
		//line 227 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
		//line 228 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
		//line 229 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
		//line 230 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
		//line 231 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
		//line 232 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
		//line 233 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
		//line 234 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
		//line 235 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
		//line 236 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
		//line 237 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
		//line 240 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
		//line 241 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
		//line 242 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
		//line 243 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
		//line 244 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
		//line 245 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
		//line 246 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
		//line 247 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
		//line 248 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
		//line 249 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
		//line 250 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
		//line 251 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
		//line 252 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
		//line 253 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
		//line 255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
		//line 257 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.STBTT_RASTERIZER_VERSION = 2;
	}
	
	public StbTruetype(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public StbTruetype()
	{
		//line 181 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.__hx_ctor_kha_graphics2_truetype_StbTruetype(this);
	}
	
	
	public static void __hx_ctor_kha_graphics2_truetype_StbTruetype(kha.graphics2.truetype.StbTruetype __temp_me168)
	{
	}
	
	
	public static void STBTT_assert(boolean value)
	{
		//line 182 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if ( ! (value) ) 
		{
			//line 182 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			throw haxe.lang.HaxeException.wrap("Error");
		}
		
	}
	
	
	public static double STBTT_POINT_SIZE(double x)
	{
		//line 183 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return  - (x) ;
	}
	
	
	public static int STBTT_vmove;
	
	public static int STBTT_vline;
	
	public static int STBTT_vcurve;
	
	public static int STBTT_MACSTYLE_DONTCARE;
	
	public static int STBTT_MACSTYLE_BOLD;
	
	public static int STBTT_MACSTYLE_ITALIC;
	
	public static int STBTT_MACSTYLE_UNDERSCORE;
	
	public static int STBTT_MACSTYLE_NONE;
	
	public static int STBTT_PLATFORM_ID_UNICODE;
	
	public static int STBTT_PLATFORM_ID_MAC;
	
	public static int STBTT_PLATFORM_ID_ISO;
	
	public static int STBTT_PLATFORM_ID_MICROSOFT;
	
	public static int STBTT_UNICODE_EID_UNICODE_1_0;
	
	public static int STBTT_UNICODE_EID_UNICODE_1_1;
	
	public static int STBTT_UNICODE_EID_ISO_10646;
	
	public static int STBTT_UNICODE_EID_UNICODE_2_0_BMP;
	
	public static int STBTT_UNICODE_EID_UNICODE_2_0_FULL;
	
	public static int STBTT_MS_EID_SYMBOL;
	
	public static int STBTT_MS_EID_UNICODE_BMP;
	
	public static int STBTT_MS_EID_SHIFTJIS;
	
	public static int STBTT_MS_EID_UNICODE_FULL;
	
	public static int STBTT_MAC_EID_ROMAN;
	
	public static int STBTT_MAC_EID_ARABIC;
	
	public static int STBTT_MAC_EID_JAPANESE;
	
	public static int STBTT_MAC_EID_HEBREW;
	
	public static int STBTT_MAC_EID_CHINESE_TRAD;
	
	public static int STBTT_MAC_EID_GREEK;
	
	public static int STBTT_MAC_EID_KOREAN;
	
	public static int STBTT_MAC_EID_RUSSIAN;
	
	public static int STBTT_MS_LANG_ENGLISH;
	
	public static int STBTT_MS_LANG_ITALIAN;
	
	public static int STBTT_MS_LANG_CHINESE;
	
	public static int STBTT_MS_LANG_JAPANESE;
	
	public static int STBTT_MS_LANG_DUTCH;
	
	public static int STBTT_MS_LANG_KOREAN;
	
	public static int STBTT_MS_LANG_FRENCH;
	
	public static int STBTT_MS_LANG_RUSSIAN;
	
	public static int STBTT_MS_LANG_GERMAN;
	
	public static int STBTT_MS_LANG_SPANISH;
	
	public static int STBTT_MS_LANG_HEBREW;
	
	public static int STBTT_MS_LANG_SWEDISH;
	
	public static int STBTT_MAC_LANG_ENGLISH;
	
	public static int STBTT_MAC_LANG_JAPANESE;
	
	public static int STBTT_MAC_LANG_ARABIC;
	
	public static int STBTT_MAC_LANG_KOREAN;
	
	public static int STBTT_MAC_LANG_DUTCH;
	
	public static int STBTT_MAC_LANG_RUSSIAN;
	
	public static int STBTT_MAC_LANG_FRENCH;
	
	public static int STBTT_MAC_LANG_SPANISH;
	
	public static int STBTT_MAC_LANG_GERMAN;
	
	public static int STBTT_MAC_LANG_SWEDISH;
	
	public static int STBTT_MAC_LANG_HEBREW;
	
	public static int STBTT_MAC_LANG_CHINESE_SIMPLIFIED;
	
	public static int STBTT_MAC_LANG_ITALIAN;
	
	public static int STBTT_MAC_LANG_CHINESE_TRAD;
	
	public static int STBTT_MAX_OVERSAMPLE;
	
	public static int STBTT_RASTERIZER_VERSION;
	
	public static int ttBYTE(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos161 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return p.readU8(__temp_pos161);
	}
	
	
	public static int ttCHAR(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 263 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos162 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 264 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = p.readU8(__temp_pos162);
		//line 265 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( n >= 128 )) 
		{
			//line 266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ( n - 256 );
		}
		
		//line 267 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return n;
	}
	
	
	public static int ttUSHORT(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 270 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos163 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 271 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(__temp_pos163);
		//line 272 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( __temp_pos163 + 1 ));
		//line 273 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( ch2 | ( ch1 << 8 ) );
	}
	
	
	public static int ttSHORT(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos164 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 277 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(__temp_pos164);
		//line 278 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( __temp_pos164 + 1 ));
		//line 279 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 280 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( (( n & 32768 )) != 0 )) 
		{
			//line 281 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ( n - 65536 );
		}
		
		//line 282 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return n;
	}
	
	
	public static int ttULONG(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos165 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(__temp_pos165);
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( __temp_pos165 + 1 ));
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch3 = p.readU8(( __temp_pos165 + 2 ));
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch4 = p.readU8(( __temp_pos165 + 3 ));
		//line 285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch2 << 16 ) ) | ( ch1 << 24 ) );
	}
	
	
	public static int ttLONG(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 287 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos166 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 288 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(__temp_pos166);
		//line 289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( __temp_pos166 + 1 ));
		//line 290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch3 = p.readU8(( __temp_pos166 + 2 ));
		//line 291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch4 = p.readU8(( __temp_pos166 + 3 ));
		//line 292 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch2 << 16 ) ) | ( ch1 << 24 ) );
	}
	
	
	public static int ttFixed(kha.internal.BytesBlob p, java.lang.Object pos)
	{
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int __temp_pos167 = ( (haxe.lang.Runtime.eq(pos, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(pos)) )) );
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(__temp_pos167);
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( __temp_pos167 + 1 ));
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch3 = p.readU8(( __temp_pos167 + 2 ));
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch4 = p.readU8(( __temp_pos167 + 3 ));
		//line 295 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch2 << 16 ) ) | ( ch1 << 24 ) );
	}
	
	
	public static boolean stbtt_tag4(kha.internal.BytesBlob p, int pos, int c0, int c1, int c2, int c3)
	{
		//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( p.readU8(pos) == c0 ) && ( p.readU8(( pos + 1 )) == c1 ) ) && ( p.readU8(( pos + 2 )) == c2 ) )) 
		{
			//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ( p.readU8(( pos + 3 )) == c3 );
		}
		else
		{
			//line 297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return false;
		}
		
	}
	
	
	public static boolean stbtt_tag(kha.internal.BytesBlob p, int pos, java.lang.String str)
	{
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c0 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(str, 0))) );
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(str, 1))) );
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c2 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(str, 2))) );
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c3 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(str, 3))) );
		//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( p.readU8(pos) == c0 ) && ( p.readU8(( pos + 1 )) == c1 ) ) && ( p.readU8(( pos + 2 )) == c2 ) )) 
		{
			//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ( p.readU8(( pos + 3 )) == c3 );
		}
		else
		{
			//line 298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return false;
		}
		
	}
	
	
	public static boolean stbtt__isfont(kha.internal.BytesBlob font)
	{
		//line 302 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c0 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("1", 0))) );
		//line 302 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( font.readU8(0) == c0 ) && ( font.readU8(1) == 0 ) ) && ( font.readU8(2) == 0 ) ) && ( font.readU8(3) == 0 ) )) 
		{
			//line 302 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return true;
		}
		
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c01 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("typ1", 0))) );
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("typ1", 1))) );
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c2 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("typ1", 2))) );
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c3 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("typ1", 3))) );
		//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( font.readU8(0) == c01 ) && ( font.readU8(1) == c1 ) ) && ( font.readU8(2) == c2 ) ) && ( font.readU8(3) == c3 ) )) 
		{
			//line 303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return true;
		}
		
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c02 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("OTTO", 0))) );
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c11 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("OTTO", 1))) );
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c21 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("OTTO", 2))) );
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c31 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("OTTO", 3))) );
		//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( font.readU8(0) == c02 ) && ( font.readU8(1) == c11 ) ) && ( font.readU8(2) == c21 ) ) && ( font.readU8(3) == c31 ) )) 
		{
			//line 304 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return true;
		}
		
		//line 305 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( font.readU8(0) == 0 ) && ( font.readU8(1) == 1 ) ) && ( font.readU8(2) == 0 ) ) && ( font.readU8(3) == 0 ) )) 
		{
			//line 305 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return true;
		}
		
		//line 306 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return false;
	}
	
	
	public static int stbtt__find_table(kha.internal.BytesBlob data, int fontstart, java.lang.String tag)
	{
		//line 311 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( fontstart + 4 );
		//line 311 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = data.readU8(pos);
		//line 311 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = data.readU8(( pos + 1 ));
		//line 311 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int num_tables = ( ch2 | ( ch1 << 8 ) );
		//line 312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int tabledir = ( fontstart + 12 );
		//line 313 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 313 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 0;
			//line 313 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < num_tables ))
			{
				//line 313 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 314 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int loc = ( tabledir + ( 16 * i ) );
				//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int c0 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(tag, 0))) );
				//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int c1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(tag, 1))) );
				//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int c2 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(tag, 2))) );
				//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int c3 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(tag, 3))) );
				//line 315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( ( ( data.readU8(loc) == c0 ) && ( data.readU8(( loc + 1 )) == c1 ) ) && ( data.readU8(( loc + 2 )) == c2 ) ) && ( data.readU8(( loc + 3 )) == c3 ) )) 
				{
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int pos1 = ( loc + 8 );
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch11 = data.readU8(pos1);
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch21 = data.readU8(( pos1 + 1 ));
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch3 = data.readU8(( pos1 + 2 ));
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch4 = data.readU8(( pos1 + 3 ));
					//line 316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					return ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch21 << 16 ) ) | ( ch11 << 24 ) );
				}
				
			}
			
		}
		
		//line 318 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return 0;
	}
	
	
	public static int stbtt_GetFontOffsetForIndex(kha.internal.BytesBlob font_collection, int index)
	{
		//line 323 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (kha.graphics2.truetype.StbTruetype.stbtt__isfont(font_collection)) 
		{
			//line 324 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( index == 0 )) 
			{
				//line 324 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return 0;
			}
			else
			{
				//line 324 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return -1;
			}
			
		}
		
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c0 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("ttcf", 0))) );
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("ttcf", 1))) );
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c2 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("ttcf", 2))) );
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int c3 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt("ttcf", 3))) );
		//line 327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( font_collection.readU8(0) == c0 ) && ( font_collection.readU8(1) == c1 ) ) && ( font_collection.readU8(2) == c2 ) ) && ( font_collection.readU8(3) == c3 ) )) 
		{
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean tmp = false;
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch1 = font_collection.readU8(4);
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch2 = font_collection.readU8(5);
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch3 = font_collection.readU8(6);
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch4 = font_collection.readU8(7);
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( (( ( ( ch4 | ( ch3 << 8 ) ) | ( ch2 << 16 ) ) | ( ch1 << 24 ) )) != 65536 )) 
			{
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch11 = font_collection.readU8(4);
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch21 = font_collection.readU8(5);
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch31 = font_collection.readU8(6);
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch41 = font_collection.readU8(7);
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				tmp = ( (( ( ( ch41 | ( ch31 << 8 ) ) | ( ch21 << 16 ) ) | ( ch11 << 24 ) )) == 131072 );
			}
			else
			{
				//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				tmp = true;
			}
			
			//line 329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (tmp) 
			{
				//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch12 = font_collection.readU8(8);
				//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch22 = font_collection.readU8(9);
				//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch32 = font_collection.readU8(10);
				//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch42 = font_collection.readU8(11);
				//line 330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int n = ( ( ( ch42 | ( ch32 << 8 ) ) | ( ch22 << 16 ) ) | ( ch12 << 24 ) );
				//line 331 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( index >= n )) 
				{
					//line 332 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					return -1;
				}
				
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int pos = ( 12 + ( index * 4 ) );
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch13 = font_collection.readU8(pos);
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch23 = font_collection.readU8(( pos + 1 ));
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch33 = font_collection.readU8(( pos + 2 ));
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch43 = font_collection.readU8(( pos + 3 ));
				//line 333 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return ( ( ( ch43 | ( ch33 << 8 ) ) | ( ch23 << 16 ) ) | ( ch13 << 24 ) );
			}
			
		}
		
		//line 336 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return -1;
	}
	
	
	public static boolean stbtt_InitFont(kha.graphics2.truetype.Stbtt_fontinfo info, kha.internal.BytesBlob data, int fontstart)
	{
		//line 340 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int cmap = 0;
		//line 340 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int t = 0;
		//line 341 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int numTables = 0;
		//line 343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.data = data;
		//line 344 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.fontstart = fontstart;
		//line 346 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		cmap = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "cmap");
		//line 347 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.loca = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "loca");
		//line 348 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.head = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "head");
		//line 349 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.glyf = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "glyf");
		//line 350 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.hhea = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "hhea");
		//line 351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.hmtx = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "hmtx");
		//line 352 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.kern = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "kern");
		//line 353 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( ( ( ( cmap == 0 ) || ( info.loca == 0 ) ) || ( info.head == 0 ) ) || ( info.glyf == 0 ) ) || ( info.hhea == 0 ) ) || ( info.hmtx == 0 ) )) 
		{
			//line 354 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return false;
		}
		
		//line 356 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		t = kha.graphics2.truetype.StbTruetype.stbtt__find_table(data, fontstart, "maxp");
		//line 357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( t != 0 )) 
		{
			//line 358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos = ( t + 4 );
			//line 358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch1 = data.readU8(pos);
			//line 358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch2 = data.readU8(( pos + 1 ));
			//line 358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			info.numGlyphs = ( ch2 | ( ch1 << 8 ) );
		}
		else
		{
			//line 360 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			info.numGlyphs = 65535;
		}
		
		//line 365 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos1 = ( cmap + 2 );
		//line 365 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = data.readU8(pos1);
		//line 365 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = data.readU8(( pos1 + 1 ));
		//line 365 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		numTables = ( ch21 | ( ch11 << 8 ) );
		//line 366 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.index_map = 0;
		//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 0;
			//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < numTables ))
			{
				//line 368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int encoding_record = ( ( cmap + 4 ) + ( 8 * i ) );
				//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				{
					//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch12 = data.readU8(encoding_record);
					//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch22 = data.readU8(( encoding_record + 1 ));
					//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g2 = ( ch22 | ( ch12 << 8 ) );
					//line 371 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					switch (_g2)
					{
						case 0:
						{
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos2 = ( encoding_record + 4 );
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch13 = data.readU8(pos2);
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch23 = data.readU8(( pos2 + 1 ));
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch3 = data.readU8(( pos2 + 2 ));
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch4 = data.readU8(( pos2 + 3 ));
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							info.index_map = ( cmap + (( ( ( ch4 | ( ch3 << 8 ) ) | ( ch23 << 16 ) ) | ( ch13 << 24 ) )) );
							//line 381 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							break;
						}
						
						
						case 3:
						{
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos3 = ( encoding_record + 2 );
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch14 = data.readU8(pos3);
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch24 = data.readU8(( pos3 + 1 ));
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g21 = ( ch24 | ( ch14 << 8 ) );
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							switch (_g21)
							{
								case 1:
								case 10:
								{
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									int pos4 = ( encoding_record + 4 );
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									int ch15 = data.readU8(pos4);
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									int ch25 = data.readU8(( pos4 + 1 ));
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									int ch31 = data.readU8(( pos4 + 2 ));
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									int ch41 = data.readU8(( pos4 + 3 ));
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									info.index_map = ( cmap + (( ( ( ch41 | ( ch31 << 8 ) ) | ( ch25 << 16 ) ) | ( ch15 << 24 ) )) );
									//line 376 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									break;
								}
								
								
							}
							
							//line 373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							break;
						}
						
						
					}
					
				}
				
			}
			
		}
		
		//line 384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( info.index_map == 0 )) 
		{
			//line 385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return false;
		}
		
		//line 387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos5 = ( info.head + 50 );
		//line 387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch16 = data.readU8(pos5);
		//line 387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch26 = data.readU8(( pos5 + 1 ));
		//line 387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		info.indexToLocFormat = ( ch26 | ( ch16 << 8 ) );
		//line 388 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return true;
	}
	
	
	public static int stbtt_FindGlyphIndex(kha.graphics2.truetype.Stbtt_fontinfo info, int unicode_codepoint)
	{
		//line 392 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob data = info.data;
		//line 393 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int index_map = info.index_map;
		//line 395 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = data.readU8(index_map);
		//line 395 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = data.readU8(( index_map + 1 ));
		//line 395 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int format = ( ch2 | ( ch1 << 8 ) );
		//line 396 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( format == 0 )) 
		{
			//line 397 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos = ( index_map + 2 );
			//line 397 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch11 = data.readU8(pos);
			//line 397 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch21 = data.readU8(( pos + 1 ));
			//line 397 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int bytes = ( ch21 | ( ch11 << 8 ) );
			//line 398 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( unicode_codepoint < ( bytes - 6 ) )) 
			{
				//line 399 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return data.readU8(( ( index_map + 6 ) + unicode_codepoint ));
			}
			
			//line 400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 0;
		}
		else
		{
			//line 401 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( format == 6 )) 
			{
				//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int pos1 = ( index_map + 6 );
				//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch12 = data.readU8(pos1);
				//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch22 = data.readU8(( pos1 + 1 ));
				//line 402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int first = ( ch22 | ( ch12 << 8 ) );
				//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int pos2 = ( index_map + 8 );
				//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch13 = data.readU8(pos2);
				//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int ch23 = data.readU8(( pos2 + 1 ));
				//line 403 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int count = ( ch23 | ( ch13 << 8 ) );
				//line 404 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( unicode_codepoint >= first ) && ( unicode_codepoint < ( first + count ) ) )) 
				{
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int pos3 = ( ( index_map + 10 ) + ( (( unicode_codepoint - first )) * 2 ) );
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch14 = data.readU8(pos3);
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch24 = data.readU8(( pos3 + 1 ));
					//line 405 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					return ( ch24 | ( ch14 << 8 ) );
				}
				
				//line 406 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return 0;
			}
			else
			{
				//line 407 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( format == 2 )) 
				{
					//line 408 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				else
				{
					//line 410 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( format == 4 )) 
					{
						//line 411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos4 = ( index_map + 6 );
						//line 411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch15 = data.readU8(pos4);
						//line 411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch25 = data.readU8(( pos4 + 1 ));
						//line 411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int segcount = ( (( ch25 | ( ch15 << 8 ) )) >> 1 );
						//line 412 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos5 = ( index_map + 8 );
						//line 412 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch16 = data.readU8(pos5);
						//line 412 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch26 = data.readU8(( pos5 + 1 ));
						//line 412 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int searchRange = ( (( ch26 | ( ch16 << 8 ) )) >> 1 );
						//line 413 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos6 = ( index_map + 10 );
						//line 413 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch17 = data.readU8(pos6);
						//line 413 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch27 = data.readU8(( pos6 + 1 ));
						//line 413 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int entrySelector = ( ch27 | ( ch17 << 8 ) );
						//line 414 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos7 = ( index_map + 12 );
						//line 414 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch18 = data.readU8(pos7);
						//line 414 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch28 = data.readU8(( pos7 + 1 ));
						//line 414 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int rangeShift = ( (( ch28 | ( ch18 << 8 ) )) >> 1 );
						//line 417 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int endCount = ( index_map + 14 );
						//line 418 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int search = endCount;
						//line 420 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( unicode_codepoint > 65535 )) 
						{
							//line 421 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							return 0;
						}
						
						//line 425 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos8 = ( endCount + ( rangeShift * 2 ) );
						//line 425 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch19 = data.readU8(pos8);
						//line 425 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch29 = data.readU8(( pos8 + 1 ));
						//line 425 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( unicode_codepoint >= (( ch29 | ( ch19 << 8 ) )) )) 
						{
							//line 426 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							search = ( endCount + ( rangeShift * 2 ) );
						}
						
						//line 429 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						search -= 2;
						//line 430 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						while (( entrySelector != 0 ))
						{
							//line 431 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int end = 0;
							//line 432 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							searchRange >>= 1;
							//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos9 = ( search + ( searchRange * 2 ) );
							//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch110 = data.readU8(pos9);
							//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch210 = data.readU8(( pos9 + 1 ));
							//line 433 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							end = ( ch210 | ( ch110 << 8 ) );
							//line 434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( unicode_codepoint > end )) 
							{
								//line 435 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								search += ( searchRange * 2 );
							}
							
							//line 436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							 -- entrySelector;
						}
						
						//line 438 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						search += 2;
						//line 441 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int offset = 0;
						//line 441 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int start = 0;
						//line 442 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int item = ( ( search - endCount ) >> 1 );
						//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos10 = ( endCount + ( 2 * item ) );
							//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch111 = data.readU8(pos10);
							//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch211 = data.readU8(( pos10 + 1 ));
							//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( unicode_codepoint > (( ch211 | ( ch111 << 8 ) )) )) 
							{
								//line 444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								throw haxe.lang.HaxeException.wrap("Error");
							}
							
						}
						
						//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos11 = ( ( ( ( index_map + 14 ) + ( segcount * 2 ) ) + 2 ) + ( 2 * item ) );
						//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch112 = data.readU8(pos11);
						//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch212 = data.readU8(( pos11 + 1 ));
						//line 445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						start = ( ch212 | ( ch112 << 8 ) );
						//line 446 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( unicode_codepoint < start )) 
						{
							//line 447 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							return 0;
						}
						
						//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos12 = ( ( ( ( index_map + 14 ) + ( segcount * 6 ) ) + 2 ) + ( 2 * item ) );
						//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch113 = data.readU8(pos12);
						//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch213 = data.readU8(( pos12 + 1 ));
						//line 449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						offset = ( ch213 | ( ch113 << 8 ) );
						//line 450 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( offset == 0 )) 
						{
							//line 451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos13 = ( ( ( ( index_map + 14 ) + ( segcount * 4 ) ) + 2 ) + ( 2 * item ) );
							//line 451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch114 = data.readU8(pos13);
							//line 451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch214 = data.readU8(( pos13 + 1 ));
							//line 451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n = ( ch214 | ( ch114 << 8 ) );
							//line 451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							return ( unicode_codepoint + (( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) )) );
						}
						
						//line 453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int pos14 = ( ( ( ( ( ( offset + ( (( unicode_codepoint - start )) * 2 ) ) + index_map ) + 14 ) + ( segcount * 6 ) ) + 2 ) + ( 2 * item ) );
						//line 453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch115 = data.readU8(pos14);
						//line 453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch215 = data.readU8(( pos14 + 1 ));
						//line 453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						return ( ch215 | ( ch115 << 8 ) );
					}
					else
					{
						//line 455 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( ( format == 12 ) || ( format == 13 ) )) 
						{
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int pos15 = ( index_map + 12 );
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch116 = data.readU8(pos15);
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch216 = data.readU8(( pos15 + 1 ));
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch3 = data.readU8(( pos15 + 2 ));
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch4 = data.readU8(( pos15 + 3 ));
							//line 456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ngroups = ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch216 << 16 ) ) | ( ch116 << 24 ) );
							//line 457 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int low = 0;
							//line 457 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int high = 0;
							//line 458 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							low = 0;
							//line 458 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							high = ngroups;
							//line 460 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							while (( low < high ))
							{
								//line 461 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int mid = ( low + (( ( high - low ) >> 1 )) );
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int pos16 = ( ( index_map + 16 ) + ( mid * 12 ) );
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch117 = data.readU8(pos16);
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch217 = data.readU8(( pos16 + 1 ));
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch31 = data.readU8(( pos16 + 2 ));
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch41 = data.readU8(( pos16 + 3 ));
								//line 462 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int start_char = ( ( ( ch41 | ( ch31 << 8 ) ) | ( ch217 << 16 ) ) | ( ch117 << 24 ) );
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int pos17 = ( ( ( index_map + 16 ) + ( mid * 12 ) ) + 4 );
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch118 = data.readU8(pos17);
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch218 = data.readU8(( pos17 + 1 ));
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch32 = data.readU8(( pos17 + 2 ));
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch42 = data.readU8(( pos17 + 3 ));
								//line 463 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int end_char = ( ( ( ch42 | ( ch32 << 8 ) ) | ( ch218 << 16 ) ) | ( ch118 << 24 ) );
								//line 464 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								if (( unicode_codepoint < start_char )) 
								{
									//line 465 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									high = mid;
								}
								else
								{
									//line 466 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									if (( unicode_codepoint > end_char )) 
									{
										//line 467 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										low = ( mid + 1 );
									}
									else
									{
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int pos18 = ( ( ( index_map + 16 ) + ( mid * 12 ) ) + 8 );
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int ch119 = data.readU8(pos18);
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int ch219 = data.readU8(( pos18 + 1 ));
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int ch33 = data.readU8(( pos18 + 2 ));
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int ch43 = data.readU8(( pos18 + 3 ));
										//line 469 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										int start_glyph = ( ( ( ch43 | ( ch33 << 8 ) ) | ( ch219 << 16 ) ) | ( ch119 << 24 ) );
										//line 470 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										if (( format == 12 )) 
										{
											//line 471 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
											return ( ( start_glyph + unicode_codepoint ) - start_char );
										}
										else
										{
											//line 473 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
											return start_glyph;
										}
										
									}
									
								}
								
							}
							
							//line 476 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							return 0;
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 479 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		throw haxe.lang.HaxeException.wrap("Error");
	}
	
	
	public static kha.graphics2.truetype.Stbtt_vertex[] stbtt_GetCodepointShape(kha.graphics2.truetype.Stbtt_fontinfo info, int unicode_codepoint)
	{
		//line 484 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphShape(info, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, unicode_codepoint));
	}
	
	
	public static void stbtt_setvertex(kha.graphics2.truetype.Stbtt_vertex v, int type, int x, int y, int cx, int cy)
	{
		//line 488 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		v.type = type;
		//line 489 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		v.x = x;
		//line 490 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		v.y = y;
		//line 491 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		v.cx = cx;
		//line 492 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		v.cy = cy;
	}
	
	
	public static int stbtt__GetGlyfOffset(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph_index)
	{
		//line 496 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int g1 = 0;
		//line 496 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int g2 = 0;
		//line 498 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( glyph_index >= info.numGlyphs )) 
		{
			//line 498 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return -1;
		}
		
		//line 499 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( info.indexToLocFormat >= 2 )) 
		{
			//line 499 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return -1;
		}
		
		//line 501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( info.indexToLocFormat == 0 )) 
		{
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int tmp = info.glyf;
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p = info.data;
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos = ( info.loca + ( glyph_index * 2 ) );
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch1 = p.readU8(pos);
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch2 = p.readU8(( pos + 1 ));
			//line 502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			g1 = ( tmp + ( (( ch2 | ( ch1 << 8 ) )) * 2 ) );
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int tmp1 = info.glyf;
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p1 = info.data;
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos1 = ( ( info.loca + ( glyph_index * 2 ) ) + 2 );
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch11 = p1.readU8(pos1);
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch21 = p1.readU8(( pos1 + 1 ));
			//line 503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			g2 = ( tmp1 + ( (( ch21 | ( ch11 << 8 ) )) * 2 ) );
		}
		else
		{
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p2 = info.data;
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos2 = ( info.loca + ( glyph_index * 4 ) );
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch12 = p2.readU8(pos2);
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch22 = p2.readU8(( pos2 + 1 ));
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch3 = p2.readU8(( pos2 + 2 ));
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch4 = p2.readU8(( pos2 + 3 ));
			//line 505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			g1 = ( info.glyf + (( ( ( ch4 | ( ch3 << 8 ) ) | ( ch22 << 16 ) ) | ( ch12 << 24 ) )) );
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p3 = info.data;
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos3 = ( ( info.loca + ( glyph_index * 4 ) ) + 4 );
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch13 = p3.readU8(pos3);
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch23 = p3.readU8(( pos3 + 1 ));
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch31 = p3.readU8(( pos3 + 2 ));
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch41 = p3.readU8(( pos3 + 3 ));
			//line 506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			g2 = ( info.glyf + (( ( ( ch41 | ( ch31 << 8 ) ) | ( ch23 << 16 ) ) | ( ch13 << 24 ) )) );
		}
		
		//line 509 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( g1 == g2 )) 
		{
			//line 509 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return -1;
		}
		else
		{
			//line 509 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return g1;
		}
		
	}
	
	
	public static boolean stbtt_GetGlyphBox(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph_index, kha.graphics2.truetype.Stbtt_temp_rect rect)
	{
		//line 513 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int g = kha.graphics2.truetype.StbTruetype.stbtt__GetGlyfOffset(info, glyph_index);
		//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( g < 0 )) 
		{
			//line 514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return false;
		}
		
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( g + 2 );
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.x0 = ( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) );
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p1 = info.data;
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos1 = ( g + 4 );
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = p1.readU8(pos1);
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = p1.readU8(( pos1 + 1 ));
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n1 = ( ch21 | ( ch11 << 8 ) );
		//line 517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.y0 = ( (( (( n1 & 32768 )) != 0 )) ? (( n1 - 65536 )) : (n1) );
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p2 = info.data;
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos2 = ( g + 6 );
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch12 = p2.readU8(pos2);
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch22 = p2.readU8(( pos2 + 1 ));
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n2 = ( ch22 | ( ch12 << 8 ) );
		//line 518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.x1 = ( (( (( n2 & 32768 )) != 0 )) ? (( n2 - 65536 )) : (n2) );
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p3 = info.data;
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos3 = ( g + 8 );
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch13 = p3.readU8(pos3);
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch23 = p3.readU8(( pos3 + 1 ));
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n3 = ( ch23 | ( ch13 << 8 ) );
		//line 519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.y1 = ( (( (( n3 & 32768 )) != 0 )) ? (( n3 - 65536 )) : (n3) );
		//line 520 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return true;
	}
	
	
	public static boolean stbtt_GetCodepointBox(kha.graphics2.truetype.Stbtt_fontinfo info, int codepoint, kha.graphics2.truetype.Stbtt_temp_rect rect)
	{
		//line 524 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBox(info, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, codepoint), rect);
	}
	
	
	public static boolean stbtt_IsGlyphEmpty(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph_index)
	{
		//line 528 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int numberOfContours = 0;
		//line 529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int g = kha.graphics2.truetype.StbTruetype.stbtt__GetGlyfOffset(info, glyph_index);
		//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( g < 0 )) 
		{
			//line 530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return true;
		}
		
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(g);
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( g + 1 ));
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( (( n & 32768 )) != 0 )) 
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			numberOfContours = ( n - 65536 );
		}
		else
		{
			//line 531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			numberOfContours = n;
		}
		
		//line 532 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( numberOfContours == 0 );
	}
	
	
	public static int stbtt__close_shape(kha.graphics2.truetype.Stbtt_vertex[] vertices, int num_vertices, boolean was_off, boolean start_off, int sx, int sy, int scx, int scy, int cx, int cy)
	{
		//line 537 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (start_off) 
		{
			//line 538 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (was_off) 
			{
				//line 539 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 3, ( ( cx + scx ) >> 1 ), ( ( cy + scy ) >> 1 ), cx, cy);
			}
			
			//line 540 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 3, sx, sy, scx, scy);
		}
		else
		{
			//line 542 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (was_off) 
			{
				//line 543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 3, sx, sy, cx, cy);
			}
			else
			{
				//line 545 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 2, sx, sy, 0, 0);
			}
			
		}
		
		//line 547 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return num_vertices;
	}
	
	
	public static void copyVertices(kha.graphics2.truetype.Stbtt_vertex[] from, kha.graphics2.truetype.Stbtt_vertex[] to, int offset, int count)
	{
		//line 551 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int _g1 = 0;
		//line 551 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		while (( _g1 < count ))
		{
			//line 551 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int i = _g1++;
			//line 552 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			((kha.graphics2.truetype.Stbtt_vertex[]) (to) )[( offset + i )] = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (from) )[i]) );
		}
		
	}
	
	
	public static kha.graphics2.truetype.Stbtt_vertex[] stbtt_GetGlyphShape(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph_index)
	{
		//line 557 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int numberOfContours = 0;
		//line 558 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob endPtsOfContours = null;
		//line 559 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob data = info.data;
		//line 560 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_vertex[] vertices = null;
		//line 561 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int num_vertices = 0;
		//line 562 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int g = kha.graphics2.truetype.StbTruetype.stbtt__GetGlyfOffset(info, glyph_index);
		//line 564 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( g < 0 )) 
		{
			//line 564 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return null;
		}
		
		//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = data.readU8(g);
		//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = data.readU8(( g + 1 ));
		//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( (( n & 32768 )) != 0 )) 
		{
			//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			numberOfContours = ( n - 65536 );
		}
		else
		{
			//line 566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			numberOfContours = n;
		}
		
		//line 568 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( numberOfContours > 0 )) 
		{
			//line 569 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int flags = 0;
			//line 569 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int flagcount = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ins = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int j = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int m = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int n1 = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int next_move = 0;
			//line 570 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int off = 0;
			//line 571 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean was_off = false;
			//line 572 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean start_off = false;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int x = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int y = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int cx = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int cy = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int sx = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int sy = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int scx = 0;
			//line 573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int scy = 0;
			//line 574 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob points = null;
			//line 575 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pointsIndex = 0;
			//line 576 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			endPtsOfContours = data.sub(( g + 10 ), ( data.get_length() - (( g + 10 )) ));
			//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos = ( ( g + 10 ) + ( numberOfContours * 2 ) );
			//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch11 = data.readU8(pos);
			//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch21 = data.readU8(( pos + 1 ));
			//line 577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			ins = ( ch21 | ( ch11 << 8 ) );
			//line 578 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			points = data.sub(( ( ( ( g + 10 ) + ( numberOfContours * 2 ) ) + 2 ) + ins ), ( data.get_length() - (( ( ( ( g + 10 ) + ( numberOfContours * 2 ) ) + 2 ) + ins )) ));
			//line 580 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos1 = ( ( numberOfContours * 2 ) - 2 );
			//line 580 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch12 = endPtsOfContours.readU8(pos1);
			//line 580 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch22 = endPtsOfContours.readU8(( pos1 + 1 ));
			//line 580 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			n1 = ( 1 + (( ch22 | ( ch12 << 8 ) )) );
			//line 582 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			m = ( n1 + ( 2 * numberOfContours ) );
			//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.Stbtt_vertex[] this1 = new kha.graphics2.truetype.Stbtt_vertex[m];
			//line 583 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			vertices = ((kha.graphics2.truetype.Stbtt_vertex[]) (this1) );
			//line 584 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean tmp = ( vertices == null );
			//line 584 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (tmp) 
			{
				//line 585 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return null;
			}
			else
			{
				//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g1 = 0;
				//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g = ((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) ).length;
				//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g1 < _g ))
				{
					//line 587 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i = _g1++;
					//line 588 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i] = new kha.graphics2.truetype.Stbtt_vertex();
				}
				
			}
			
			//line 592 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			next_move = 0;
			//line 593 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			flagcount = 0;
			//line 599 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			off = ( m - n1 );
			//line 603 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 603 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g11 = 0;
				//line 603 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g11 < n1 ))
				{
					//line 603 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i1 = _g11++;
					//line 604 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( flagcount == 0 )) 
					{
						//line 605 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						flags = points.readU8(pointsIndex++);
						//line 606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( flags & 8 )) != 0 )) 
						{
							//line 607 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							flagcount = points.readU8(pointsIndex++);
						}
						
					}
					else
					{
						//line 609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						 -- flagcount;
					}
					
					//line 610 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i1 )]) ).type = flags;
				}
				
			}
			
			//line 614 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			x = 0;
			//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g12 = 0;
				//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g12 < n1 ))
				{
					//line 615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i2 = _g12++;
					//line 616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					flags = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i2 )]) ).type;
					//line 617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( flags & 2 )) != 0 )) 
					{
						//line 618 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int dx = points.readU8(pointsIndex++);
						//line 619 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						x += ( (( (( flags & 16 )) != 0 )) ? (dx) : ( - (dx) ) );
					}
					else
					{
						//line 621 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( flags & 16 )) == 0 )) 
						{
							//line 622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int value = 0;
							//line 623 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch13 = points.readU8(pointsIndex);
							//line 624 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch23 = points.readU8(( pointsIndex + 1 ));
							//line 625 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n2 = ( ch23 | ( ch13 << 8 ) );
							//line 626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( (( n2 & 32768 )) != 0 )) 
							{
								//line 627 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								value = ( n2 - 65536 );
							}
							else
							{
								//line 629 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								value = n2;
							}
							
							//line 630 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							x += value;
							//line 631 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							pointsIndex += 2;
						}
						
					}
					
					//line 634 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i2 )]) ).x = x;
				}
				
			}
			
			//line 638 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			y = 0;
			//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g13 = 0;
				//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g13 < n1 ))
				{
					//line 639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i3 = _g13++;
					//line 640 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					flags = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i3 )]) ).type;
					//line 641 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( flags & 4 )) != 0 )) 
					{
						//line 642 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int dy = points.readU8(pointsIndex++);
						//line 643 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						y += ( (( (( flags & 32 )) != 0 )) ? (dy) : ( - (dy) ) );
					}
					else
					{
						//line 645 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( flags & 32 )) == 0 )) 
						{
							//line 646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int value1 = 0;
							//line 647 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch14 = points.readU8(pointsIndex);
							//line 648 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch24 = points.readU8(( pointsIndex + 1 ));
							//line 649 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n3 = ( ch24 | ( ch14 << 8 ) );
							//line 650 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( (( n3 & 32768 )) != 0 )) 
							{
								//line 651 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								value1 = ( n3 - 65536 );
							}
							else
							{
								//line 653 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								value1 = n3;
							}
							
							//line 654 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							y += value1;
							//line 655 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							pointsIndex += 2;
						}
						
					}
					
					//line 658 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i3 )]) ).y = y;
				}
				
			}
			
			//line 662 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			num_vertices = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scy = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scx = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			cy = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			cx = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			sy = 0;
			//line 663 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			sx = 0;
			//line 664 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int i4 = 0;
			//line 665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( i4 < n1 ))
			{
				//line 666 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				flags = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i4 )]) ).type;
				//line 667 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				x = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i4 )]) ).x;
				//line 668 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				y = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( off + i4 )]) ).y;
				//line 670 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( next_move == i4 )) 
				{
					//line 671 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( i4 != 0 )) 
					{
						//line 672 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						num_vertices = kha.graphics2.truetype.StbTruetype.stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy);
					}
					
					//line 675 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					start_off = ( (( flags & 1 )) == 0 );
					//line 676 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (start_off) 
					{
						//line 679 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						scx = x;
						//line 680 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						scy = y;
						//line 681 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( ( off + i4 ) + 1 )]) ).type & 1 )) == 0 )) 
						{
							//line 683 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sx = ( ( x + ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( ( off + i4 ) + 1 )]) ).x ) >> 1 );
							//line 684 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy = ( ( y + ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( ( off + i4 ) + 1 )]) ).y ) >> 1 );
						}
						else
						{
							//line 687 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sx = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( ( off + i4 ) + 1 )]) ).x;
							//line 688 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[( ( off + i4 ) + 1 )]) ).y;
							//line 689 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							 ++ i4;
						}
						
					}
					else
					{
						//line 692 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						sx = x;
						//line 693 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						sy = y;
					}
					
					//line 695 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 1, sx, sy, 0, 0);
					//line 696 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					was_off = false;
					//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int pos2 = ( j * 2 );
					//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch15 = endPtsOfContours.readU8(pos2);
					//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch25 = endPtsOfContours.readU8(( pos2 + 1 ));
					//line 697 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					next_move = ( 1 + (( ch25 | ( ch15 << 8 ) )) );
					//line 698 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					 ++ j;
				}
				else
				{
					//line 700 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( flags & 1 )) == 0 )) 
					{
						//line 701 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (was_off) 
						{
							//line 702 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 3, ( ( cx + x ) >> 1 ), ( ( cy + y ) >> 1 ), cx, cy);
						}
						
						//line 703 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						cx = x;
						//line 704 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						cy = y;
						//line 705 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						was_off = true;
					}
					else
					{
						//line 707 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (was_off) 
						{
							//line 708 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 3, x, y, cx, cy);
						}
						else
						{
							//line 710 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt_setvertex(((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[num_vertices++], 2, x, y, 0, 0);
						}
						
						//line 711 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						was_off = false;
					}
					
				}
				
				//line 714 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 ++ i4;
			}
			
			//line 716 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			num_vertices = kha.graphics2.truetype.StbTruetype.stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx, sy, scx, scy, cx, cy);
		}
		else
		{
			//line 717 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( numberOfContours == -1 )) 
			{
				//line 719 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int more = 1;
				//line 720 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.internal.BytesBlob comp = data.sub(( g + 10 ), ( data.get_length() - (( g + 10 )) ));
				//line 721 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int compIndex = 0;
				//line 722 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				num_vertices = 0;
				//line 723 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				vertices = null;
				//line 724 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( more != 0 ))
				{
					//line 725 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int flags1 = 0;
					//line 725 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int gidx = 0;
					//line 726 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int comp_num_verts = 0;
					//line 727 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.Stbtt_vertex[] comp_verts = null;
					//line 728 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.Stbtt_vertex[] tmp1 = null;
					//line 729 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx0 = ((double) (1) );
					//line 730 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx1 = ((double) (0) );
					//line 731 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx2 = ((double) (0) );
					//line 732 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx3 = ((double) (1) );
					//line 733 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx4 = ((double) (0) );
					//line 734 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double mtx5 = ((double) (0) );
					//line 735 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double m1 = 0.0;
					//line 735 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					double n4 = 0.0;
					//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch16 = comp.readU8(compIndex);
					//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch26 = comp.readU8(( compIndex + 1 ));
					//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int n5 = ( ch26 | ( ch16 << 8 ) );
					//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( n5 & 32768 )) != 0 )) 
					{
						//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						flags1 = ( n5 - 65536 );
					}
					else
					{
						//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						flags1 = n5;
					}
					
					//line 737 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					compIndex += 2;
					//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch17 = comp.readU8(compIndex);
					//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch27 = comp.readU8(( compIndex + 1 ));
					//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int n6 = ( ch27 | ( ch17 << 8 ) );
					//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( n6 & 32768 )) != 0 )) 
					{
						//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						gidx = ( n6 - 65536 );
					}
					else
					{
						//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						gidx = n6;
					}
					
					//line 738 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					compIndex += 2;
					//line 740 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( flags1 & 2 )) != 0 )) 
					{
						//line 741 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( flags1 & 1 )) != 0 )) 
						{
							//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch18 = comp.readU8(compIndex);
							//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch28 = comp.readU8(( compIndex + 1 ));
							//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n7 = ( ch28 | ( ch18 << 8 ) );
							//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( (( n7 & 32768 )) != 0 )) 
							{
								//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx4 = ((double) (( n7 - 65536 )) );
							}
							else
							{
								//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx4 = ((double) (n7) );
							}
							
							//line 742 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							compIndex += 2;
							//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch19 = comp.readU8(compIndex);
							//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch29 = comp.readU8(( compIndex + 1 ));
							//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n8 = ( ch29 | ( ch19 << 8 ) );
							//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( (( n8 & 32768 )) != 0 )) 
							{
								//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx5 = ((double) (( n8 - 65536 )) );
							}
							else
							{
								//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx5 = ((double) (n8) );
							}
							
							//line 743 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							compIndex += 2;
						}
						else
						{
							//line 745 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n9 = comp.readU8(compIndex);
							//line 745 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( n9 >= 128 )) 
							{
								//line 745 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx4 = ((double) (( n9 - 256 )) );
							}
							else
							{
								//line 745 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx4 = ((double) (n9) );
							}
							
							//line 745 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							 ++ compIndex;
							//line 746 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n10 = comp.readU8(compIndex);
							//line 746 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( n10 >= 128 )) 
							{
								//line 746 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx5 = ((double) (( n10 - 256 )) );
							}
							else
							{
								//line 746 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx5 = ((double) (n10) );
							}
							
							//line 746 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							 ++ compIndex;
						}
						
					}
					else
					{
						//line 751 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						throw haxe.lang.HaxeException.wrap("Error");
					}
					
					//line 753 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( flags1 & 8 )) != 0 )) 
					{
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch110 = comp.readU8(compIndex);
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int ch210 = comp.readU8(( compIndex + 1 ));
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int n11 = ( ch210 | ( ch110 << 8 ) );
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						mtx3 = ( (( (( (( n11 & 32768 )) != 0 )) ? (( n11 - 65536 )) : (n11) )) / 16384.0 );
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						mtx0 = mtx3;
						//line 754 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						compIndex += 2;
						//line 755 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						mtx2 = ((double) (0) );
						//line 755 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						mtx1 = mtx2;
					}
					else
					{
						//line 756 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (( flags1 & 64 )) != 0 )) 
						{
							//line 757 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch111 = comp.readU8(compIndex);
							//line 757 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch211 = comp.readU8(( compIndex + 1 ));
							//line 757 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n12 = ( ch211 | ( ch111 << 8 ) );
							//line 757 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							mtx0 = ( (( (( (( n12 & 32768 )) != 0 )) ? (( n12 - 65536 )) : (n12) )) / 16384.0 );
							//line 757 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							compIndex += 2;
							//line 758 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							mtx2 = ((double) (0) );
							//line 758 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							mtx1 = mtx2;
							//line 759 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch112 = comp.readU8(compIndex);
							//line 759 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int ch212 = comp.readU8(( compIndex + 1 ));
							//line 759 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int n13 = ( ch212 | ( ch112 << 8 ) );
							//line 759 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							mtx3 = ( (( (( (( n13 & 32768 )) != 0 )) ? (( n13 - 65536 )) : (n13) )) / 16384.0 );
							//line 759 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							compIndex += 2;
						}
						else
						{
							//line 760 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( (( flags1 & 128 )) != 0 )) 
							{
								//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch113 = comp.readU8(compIndex);
								//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch213 = comp.readU8(( compIndex + 1 ));
								//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int n14 = ( ch213 | ( ch113 << 8 ) );
								//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx0 = ( (( (( (( n14 & 32768 )) != 0 )) ? (( n14 - 65536 )) : (n14) )) / 16384.0 );
								//line 761 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								compIndex += 2;
								//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch114 = comp.readU8(compIndex);
								//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch214 = comp.readU8(( compIndex + 1 ));
								//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int n15 = ( ch214 | ( ch114 << 8 ) );
								//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx1 = ( (( (( (( n15 & 32768 )) != 0 )) ? (( n15 - 65536 )) : (n15) )) / 16384.0 );
								//line 762 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								compIndex += 2;
								//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch115 = comp.readU8(compIndex);
								//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch215 = comp.readU8(( compIndex + 1 ));
								//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int n16 = ( ch215 | ( ch115 << 8 ) );
								//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx2 = ( (( (( (( n16 & 32768 )) != 0 )) ? (( n16 - 65536 )) : (n16) )) / 16384.0 );
								//line 763 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								compIndex += 2;
								//line 764 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch116 = comp.readU8(compIndex);
								//line 764 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int ch216 = comp.readU8(( compIndex + 1 ));
								//line 764 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int n17 = ( ch216 | ( ch116 << 8 ) );
								//line 764 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								mtx3 = ( (( (( (( n17 & 32768 )) != 0 )) ? (( n17 - 65536 )) : (n17) )) / 16384.0 );
								//line 764 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								compIndex += 2;
							}
							
						}
						
					}
					
					//line 768 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					m1 = java.lang.Math.sqrt(( ( mtx0 * mtx0 ) + ( mtx1 * mtx1 ) ));
					//line 769 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					n4 = java.lang.Math.sqrt(( ( mtx2 * mtx2 ) + ( mtx3 * mtx3 ) ));
					//line 772 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					comp_verts = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphShape(info, gidx);
					//line 773 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					boolean tmp2 = ( comp_verts == null );
					//line 773 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (tmp2) 
					{
						//line 773 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						comp_num_verts = 0;
					}
					else
					{
						//line 773 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						comp_num_verts = ((kha.graphics2.truetype.Stbtt_vertex[]) (comp_verts) ).length;
					}
					
					//line 774 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( comp_num_verts > 0 )) 
					{
						//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g14 = 0;
							//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g2 = comp_num_verts;
							//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							while (( _g14 < _g2 ))
							{
								//line 776 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int i5 = _g14++;
								//line 777 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								kha.graphics2.truetype.Stbtt_vertex v = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (comp_verts) )[i5]) );
								//line 778 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int x1 = 0;
								//line 778 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int y1 = 0;
								//line 779 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								x1 = v.x;
								//line 779 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								y1 = v.y;
								//line 780 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								v.x = ((int) (( m1 * (( ( ( mtx0 * x1 ) + ( mtx2 * y1 ) ) + mtx4 )) )) );
								//line 781 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								v.y = ((int) (( n4 * (( ( ( mtx1 * x1 ) + ( mtx3 * y1 ) ) + mtx5 )) )) );
								//line 782 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								x1 = v.cx;
								//line 782 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								y1 = v.cy;
								//line 783 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								v.cx = ((int) (( m1 * (( ( ( mtx0 * x1 ) + ( mtx2 * y1 ) ) + mtx4 )) )) );
								//line 784 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								v.cy = ((int) (( n4 * (( ( ( mtx1 * x1 ) + ( mtx3 * y1 ) ) + mtx5 )) )) );
							}
							
						}
						
						//line 787 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						kha.graphics2.truetype.Stbtt_vertex[] this2 = new kha.graphics2.truetype.Stbtt_vertex[( num_vertices + comp_num_verts )];
						//line 787 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						tmp1 = ((kha.graphics2.truetype.Stbtt_vertex[]) (this2) );
						//line 788 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						boolean tmp3 = ( tmp1 == null );
						//line 788 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (tmp3) 
						{
							//line 789 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							return null;
						}
						
						//line 791 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( num_vertices > 0 )) 
						{
							//line 791 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.copyVertices(vertices, tmp1, 0, num_vertices);
						}
						
						//line 792 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						kha.graphics2.truetype.StbTruetype.copyVertices(comp_verts, tmp1, num_vertices, comp_num_verts);
						//line 793 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						vertices = tmp1;
						//line 794 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						num_vertices += comp_num_verts;
					}
					
					//line 797 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					more = ( flags1 & 32 );
				}
				
			}
			else
			{
				//line 799 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( numberOfContours < 0 )) 
				{
					//line 801 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
			}
			
		}
		
		//line 806 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp4 = ( vertices == null );
		//line 806 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp4) 
		{
			//line 806 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return null;
		}
		
		//line 807 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) ).length < num_vertices )) 
		{
			//line 807 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			throw haxe.lang.HaxeException.wrap("Error");
		}
		
		//line 808 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( num_vertices < ((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) ).length )) 
		{
			//line 809 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.Stbtt_vertex[] this3 = new kha.graphics2.truetype.Stbtt_vertex[num_vertices];
			//line 809 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.Stbtt_vertex[] tmp5 = ((kha.graphics2.truetype.Stbtt_vertex[]) (this3) );
			//line 810 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.copyVertices(vertices, tmp5, 0, num_vertices);
			//line 811 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return tmp5;
		}
		else
		{
			//line 814 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return vertices;
		}
		
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics stbtt_GetGlyphHMetrics(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph_index)
	{
		//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( info.hhea + 34 );
		//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 819 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int numOfLongHorMetrics = ( ch2 | ( ch1 << 8 ) );
		//line 820 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics metrics = new kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics();
		//line 821 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( glyph_index < numOfLongHorMetrics )) 
		{
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p1 = info.data;
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos1 = ( info.hmtx + ( 4 * glyph_index ) );
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch11 = p1.readU8(pos1);
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch21 = p1.readU8(( pos1 + 1 ));
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int n = ( ch21 | ( ch11 << 8 ) );
			//line 822 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			metrics.advanceWidth = ( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) );
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p2 = info.data;
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos2 = ( ( info.hmtx + ( 4 * glyph_index ) ) + 2 );
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch12 = p2.readU8(pos2);
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch22 = p2.readU8(( pos2 + 1 ));
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int n1 = ( ch22 | ( ch12 << 8 ) );
			//line 823 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			metrics.leftSideBearing = ( (( (( n1 & 32768 )) != 0 )) ? (( n1 - 65536 )) : (n1) );
		}
		else
		{
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p3 = info.data;
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos3 = ( info.hmtx + ( 4 * (( numOfLongHorMetrics - 1 )) ) );
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch13 = p3.readU8(pos3);
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch23 = p3.readU8(( pos3 + 1 ));
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int n2 = ( ch23 | ( ch13 << 8 ) );
			//line 825 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			metrics.advanceWidth = ( (( (( n2 & 32768 )) != 0 )) ? (( n2 - 65536 )) : (n2) );
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.internal.BytesBlob p4 = info.data;
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos4 = ( ( info.hmtx + ( 4 * numOfLongHorMetrics ) ) + ( 2 * (( glyph_index - numOfLongHorMetrics )) ) );
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch14 = p4.readU8(pos4);
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch24 = p4.readU8(( pos4 + 1 ));
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int n3 = ( ch24 | ( ch14 << 8 ) );
			//line 826 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			metrics.leftSideBearing = ( (( (( n3 & 32768 )) != 0 )) ? (( n3 - 65536 )) : (n3) );
		}
		
		//line 828 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return metrics;
	}
	
	
	public static int stbtt_GetGlyphKernAdvance(kha.graphics2.truetype.Stbtt_fontinfo info, int glyph1, int glyph2)
	{
		//line 832 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob data = info.data.sub(info.kern, ( info.data.get_length() - info.kern ));
		//line 833 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int needle = 0;
		//line 833 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int straw = 0;
		//line 834 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int l = 0;
		//line 834 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int r = 0;
		//line 834 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int m = 0;
		//line 837 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( info.kern == 0 )) 
		{
			//line 838 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 0;
		}
		
		//line 839 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = data.readU8(2);
		//line 839 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = data.readU8(3);
		//line 839 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( (( ch2 | ( ch1 << 8 ) )) < 1 )) 
		{
			//line 840 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 0;
		}
		
		//line 841 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = data.readU8(8);
		//line 841 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = data.readU8(9);
		//line 841 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( (( ch21 | ( ch11 << 8 ) )) != 1 )) 
		{
			//line 842 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 0;
		}
		
		//line 844 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		l = 0;
		//line 845 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch12 = data.readU8(10);
		//line 845 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch22 = data.readU8(11);
		//line 845 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		r = ( (( ch22 | ( ch12 << 8 ) )) - 1 );
		//line 846 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		needle = ( ( glyph1 << 16 ) | glyph2 );
		//line 847 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		while (( l <= r ))
		{
			//line 848 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			m = ( ( l + r ) >> 1 );
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int pos = ( 18 + ( m * 6 ) );
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch13 = data.readU8(pos);
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch23 = data.readU8(( pos + 1 ));
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch3 = data.readU8(( pos + 2 ));
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int ch4 = data.readU8(( pos + 3 ));
			//line 849 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			straw = ( ( ( ch4 | ( ch3 << 8 ) ) | ( ch23 << 16 ) ) | ( ch13 << 24 ) );
			//line 850 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( needle < straw )) 
			{
				//line 851 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				r = ( m - 1 );
			}
			else
			{
				//line 852 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( needle > straw )) 
				{
					//line 853 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					l = ( m + 1 );
				}
				else
				{
					//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int pos1 = ( 22 + ( m * 6 ) );
					//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch14 = data.readU8(pos1);
					//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int ch24 = data.readU8(( pos1 + 1 ));
					//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int n = ( ch24 | ( ch14 << 8 ) );
					//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( (( n & 32768 )) != 0 )) 
					{
						//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						return ( n - 65536 );
					}
					else
					{
						//line 855 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						return n;
					}
					
				}
				
			}
			
		}
		
		//line 857 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return 0;
	}
	
	
	public static int stbtt_GetCodepointKernAdvance(kha.graphics2.truetype.Stbtt_fontinfo info, int ch1, int ch2)
	{
		//line 861 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( info.kern == 0 )) 
		{
			//line 862 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 0;
		}
		
		//line 863 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphKernAdvance(info, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, ch1), kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, ch2));
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics stbtt_GetCodepointHMetrics(kha.graphics2.truetype.Stbtt_fontinfo info, int codepoint)
	{
		//line 867 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphHMetrics(info, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, codepoint));
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_font_v_metrics stbtt_GetFontVMetrics(kha.graphics2.truetype.Stbtt_fontinfo info)
	{
		//line 871 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_font_v_metrics metrics = new kha.graphics2.truetype.Stbtt_temp_font_v_metrics();
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( info.hhea + 4 );
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 872 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		metrics.ascent = ( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) );
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p1 = info.data;
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos1 = ( info.hhea + 6 );
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = p1.readU8(pos1);
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = p1.readU8(( pos1 + 1 ));
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n1 = ( ch21 | ( ch11 << 8 ) );
		//line 873 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		metrics.descent = ( (( (( n1 & 32768 )) != 0 )) ? (( n1 - 65536 )) : (n1) );
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p2 = info.data;
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos2 = ( info.hhea + 8 );
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch12 = p2.readU8(pos2);
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch22 = p2.readU8(( pos2 + 1 ));
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n2 = ( ch22 | ( ch12 << 8 ) );
		//line 874 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		metrics.lineGap = ( (( (( n2 & 32768 )) != 0 )) ? (( n2 - 65536 )) : (n2) );
		//line 875 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return metrics;
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_rect stbtt_GetFontBoundingBox(kha.graphics2.truetype.Stbtt_fontinfo info)
	{
		//line 879 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_rect rect = new kha.graphics2.truetype.Stbtt_temp_rect();
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( info.head + 36 );
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 880 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.x0 = ( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) );
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p1 = info.data;
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos1 = ( info.head + 38 );
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = p1.readU8(pos1);
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = p1.readU8(( pos1 + 1 ));
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n1 = ( ch21 | ( ch11 << 8 ) );
		//line 881 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.y0 = ( (( (( n1 & 32768 )) != 0 )) ? (( n1 - 65536 )) : (n1) );
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p2 = info.data;
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos2 = ( info.head + 40 );
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch12 = p2.readU8(pos2);
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch22 = p2.readU8(( pos2 + 1 ));
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n2 = ( ch22 | ( ch12 << 8 ) );
		//line 882 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.x1 = ( (( (( n2 & 32768 )) != 0 )) ? (( n2 - 65536 )) : (n2) );
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p3 = info.data;
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos3 = ( info.head + 42 );
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch13 = p3.readU8(pos3);
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch23 = p3.readU8(( pos3 + 1 ));
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n3 = ( ch23 | ( ch13 << 8 ) );
		//line 883 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		rect.y1 = ( (( (( n3 & 32768 )) != 0 )) ? (( n3 - 65536 )) : (n3) );
		//line 884 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return rect;
	}
	
	
	public static double stbtt_ScaleForPixelHeight(kha.graphics2.truetype.Stbtt_fontinfo info, double height)
	{
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( info.hhea + 4 );
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = ( ch2 | ( ch1 << 8 ) );
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int tmp = ( (( (( n & 32768 )) != 0 )) ? (( n - 65536 )) : (n) );
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p1 = info.data;
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos1 = ( info.hhea + 6 );
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch11 = p1.readU8(pos1);
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch21 = p1.readU8(( pos1 + 1 ));
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n1 = ( ch21 | ( ch11 << 8 ) );
		//line 888 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int fheight = ( tmp - (( (( (( n1 & 32768 )) != 0 )) ? (( n1 - 65536 )) : (n1) )) );
		//line 889 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( height / fheight );
	}
	
	
	public static double stbtt_ScaleForMappingEmToPixels(kha.graphics2.truetype.Stbtt_fontinfo info, double pixels)
	{
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.internal.BytesBlob p = info.data;
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int pos = ( info.head + 18 );
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch1 = p.readU8(pos);
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ch2 = p.readU8(( pos + 1 ));
		//line 893 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int unitsPerEm = ( ch2 | ( ch1 << 8 ) );
		//line 894 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( pixels / unitsPerEm );
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_rect stbtt_GetGlyphBitmapBoxSubpixel(kha.graphics2.truetype.Stbtt_fontinfo font, int glyph, double scale_x, double scale_y, double shift_x, double shift_y)
	{
		//line 903 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_rect rect = new kha.graphics2.truetype.Stbtt_temp_rect();
		//line 904 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if ( ! (kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBox(font, glyph, rect)) ) 
		{
			//line 906 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.x0 = 0;
			//line 907 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.y0 = 0;
			//line 908 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.x1 = 0;
			//line 909 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.y1 = 0;
		}
		else
		{
			//line 912 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int x0 = rect.x0;
			//line 913 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int x1 = rect.x1;
			//line 914 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int y0 = rect.y0;
			//line 915 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int y1 = rect.y1;
			//line 916 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.x0 = ((int) (java.lang.Math.floor(( ( x0 * scale_x ) + shift_x ))) );
			//line 917 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.y0 = ((int) (java.lang.Math.floor(( (  - (y1)  * scale_y ) + shift_y ))) );
			//line 918 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.x1 = ((int) (java.lang.Math.ceil(( ( x1 * scale_x ) + shift_x ))) );
			//line 919 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			rect.y1 = ((int) (java.lang.Math.ceil(( (  - (y0)  * scale_y ) + shift_y ))) );
		}
		
		//line 921 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return rect;
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_rect stbtt_GetGlyphBitmapBox(kha.graphics2.truetype.Stbtt_fontinfo font, int glyph, double scale_x, double scale_y)
	{
		//line 925 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y, 0.0, 0.0);
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_rect stbtt_GetCodepointBitmapBoxSubpixel(kha.graphics2.truetype.Stbtt_fontinfo font, int codepoint, double scale_x, double scale_y, double shift_x, double shift_y)
	{
		//line 929 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(font, codepoint), scale_x, scale_y, shift_x, shift_y);
	}
	
	
	public static kha.graphics2.truetype.Stbtt_temp_rect stbtt_GetCodepointBitmapBox(kha.graphics2.truetype.Stbtt_fontinfo font, int codepoint, double scale_x, double scale_y)
	{
		//line 933 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y, 0.0, 0.0);
	}
	
	
	public static kha.graphics2.truetype.Stbtt__active_edge stbtt__new_active(kha.graphics2.truetype.Stbtt__edge[] e, int eIndex, int off_x, double start_point)
	{
		//line 941 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__active_edge z = new kha.graphics2.truetype.Stbtt__active_edge();
		//line 942 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double dxdy = ( (( ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).x1 - ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).x0 )) / (( ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y1 - ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y0 )) );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( z == null );
		//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 944 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return z;
		}
		
		//line 945 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.fdx = dxdy;
		//line 946 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.fdy = ( (( dxdy != 0.0 )) ? (( 1.0 / dxdy )) : (0.0) );
		//line 947 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.fx = ( ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).x0 + ( dxdy * (( start_point - ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y0 )) ) );
		//line 948 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.fx -= ((double) (off_x) );
		//line 949 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.direction = ( (((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).invert) ? (1.0) : (-1.0) );
		//line 950 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.sy = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y0;
		//line 951 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.ey = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y1;
		//line 952 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		z.next = null;
		//line 953 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return z;
	}
	
	
	public static void stbtt__handle_clipped_edge(double[] scanline, int scanlineIndex, int x, kha.graphics2.truetype.Stbtt__active_edge e, double x0, double y0, double x1, double y1)
	{
		//line 959 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( y0 == y1 )) 
		{
			//line 959 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ;
		}
		
		//line 960 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if ( ! ((( y0 < y1 ))) ) 
		{
			//line 960 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			throw haxe.lang.HaxeException.wrap("Error");
		}
		
		//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if ( ! ((( e.sy <= e.ey ))) ) 
		{
			//line 961 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			throw haxe.lang.HaxeException.wrap("Error");
		}
		
		//line 962 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( y0 > e.ey )) 
		{
			//line 962 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ;
		}
		
		//line 963 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( y1 < e.sy )) 
		{
			//line 963 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ;
		}
		
		//line 964 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( y0 < e.sy )) 
		{
			//line 965 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			x0 += ( ( (( x1 - x0 )) * (( e.sy - y0 )) ) / (( y1 - y0 )) );
			//line 966 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			y0 = e.sy;
		}
		
		//line 968 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( y1 > e.ey )) 
		{
			//line 969 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			x1 += ( ( (( x1 - x0 )) * (( e.ey - y1 )) ) / (( y1 - y0 )) );
			//line 970 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			y1 = e.ey;
		}
		
		//line 973 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( x0 == x )) 
		{
			//line 974 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if ( ! ((( x1 <= ( x + 1 ) ))) ) 
			{
				//line 974 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				throw haxe.lang.HaxeException.wrap("Error");
			}
			
		}
		else
		{
			//line 975 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( x0 == ( x + 1 ) )) 
			{
				//line 976 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if ( ! ((( x1 >= x ))) ) 
				{
					//line 976 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
			}
			else
			{
				//line 977 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( x0 <= x )) 
				{
					//line 978 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if ( ! ((( x1 <= x ))) ) 
					{
						//line 978 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						throw haxe.lang.HaxeException.wrap("Error");
					}
					
				}
				else
				{
					//line 979 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( x0 >= ( x + 1 ) )) 
					{
						//line 980 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if ( ! ((( x1 >= ( x + 1 ) ))) ) 
						{
							//line 980 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							throw haxe.lang.HaxeException.wrap("Error");
						}
						
					}
					else
					{
						//line 982 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if ( ! ((( ( x1 >= x ) && ( x1 <= ( x + 1 ) ) ))) ) 
						{
							//line 982 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							throw haxe.lang.HaxeException.wrap("Error");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 984 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( x0 <= x ) && ( x1 <= x ) )) 
		{
			//line 985 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g = ( scanlineIndex + x );
			//line 985 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			((double[]) (scanline) )[_g] = ( ((double) (((double[]) (scanline) )[_g]) ) + ( e.direction * (( y1 - y0 )) ) );
		}
		else
		{
			//line 986 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if ( ! ((( ( x0 >= ( x + 1 ) ) && ( x1 >= ( x + 1 ) ) ))) ) 
			{
				//line 989 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if ( ! ((( ( ( ( x0 >= x ) && ( x0 <= ( x + 1 ) ) ) && ( x1 >= x ) ) && ( x1 <= ( x + 1 ) ) ))) ) 
				{
					//line 989 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
				//line 990 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				{
					//line 990 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g1 = ( scanlineIndex + x );
					//line 990 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((double[]) (scanline) )[_g1] = ( ((double) (((double[]) (scanline) )[_g1]) ) + ( ( e.direction * (( y1 - y0 )) ) * (( 1 - ( (( ( x0 - x ) + (( x1 - x )) )) / 2 ) )) ) );
				}
				
			}
			
		}
		
	}
	
	
	public static void stbtt__fill_active_edges_new(double[] scanline, double[] scanline_fill, int scanline_fillIndex, int len, kha.graphics2.truetype.Stbtt__active_edge e, double y_top)
	{
		//line 995 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double y_bottom = ( y_top + 1 );
		//line 997 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		while (true)
		{
			//line 997 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean tmp =  ! ((( e != null ))) ;
			//line 997 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (tmp) 
			{
				//line 997 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				break;
			}
			
			//line 1001 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if ( ! ((( e.ey >= y_top ))) ) 
			{
				//line 1001 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				throw haxe.lang.HaxeException.wrap("Error");
			}
			
			//line 1003 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( e.fdx == 0 )) 
			{
				//line 1004 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double x0 = e.fx;
				//line 1005 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( x0 < len )) 
				{
					//line 1006 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( x0 >= 0 )) 
					{
						//line 1007 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, ((int) (x0) ), e, x0, y_top, x0, y_bottom);
						//line 1008 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline_fill, ( scanline_fillIndex - 1 ), ((int) (( x0 + 1 )) ), e, x0, y_top, x0, y_bottom);
					}
					else
					{
						//line 1010 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline_fill, ( scanline_fillIndex - 1 ), 0, e, x0, y_top, x0, y_bottom);
					}
					
				}
				
			}
			else
			{
				//line 1014 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double x01 = e.fx;
				//line 1015 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double dx = e.fdx;
				//line 1016 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double xb = ( x01 + dx );
				//line 1017 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double x_top = 0.0;
				//line 1017 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double x_bottom = 0.0;
				//line 1018 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double sy0 = 0.0;
				//line 1018 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double sy1 = 0.0;
				//line 1019 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double dy = e.fdy;
				//line 1020 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if ( ! ((( ( e.sy <= y_bottom ) && ( e.ey >= y_top ) ))) ) 
				{
					//line 1020 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
				//line 1025 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( e.sy > y_top )) 
				{
					//line 1026 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					x_top = ( x01 + ( dx * (( e.sy - y_top )) ) );
					//line 1027 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					sy0 = e.sy;
				}
				else
				{
					//line 1029 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					x_top = x01;
					//line 1030 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					sy0 = y_top;
				}
				
				//line 1032 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( e.ey < y_bottom )) 
				{
					//line 1033 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					x_bottom = ( x01 + ( dx * (( e.ey - y_top )) ) );
					//line 1034 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					sy1 = e.ey;
				}
				else
				{
					//line 1036 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					x_bottom = xb;
					//line 1037 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					sy1 = y_bottom;
				}
				
				//line 1040 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( ( ( x_top >= 0 ) && ( x_bottom >= 0 ) ) && ( x_top < len ) ) && ( x_bottom < len ) )) 
				{
					//line 1043 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( ((int) (x_top) ) == ((int) (x_bottom) ) )) 
					{
						//line 1044 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double height = 0.0;
						//line 1046 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int x = ((int) (x_top) );
						//line 1047 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						height = ( sy1 - sy0 );
						//line 1048 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if ( ! ((( ( x >= 0 ) && ( x < len ) ))) ) 
						{
							//line 1048 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							throw haxe.lang.HaxeException.wrap("Error");
						}
						
						//line 1049 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((double[]) (scanline) )[x] = ( ((double) (((double[]) (scanline) )[x]) ) + ( ( e.direction * (( 1 - ( (( ( x_top - x ) + (( x_bottom - x )) )) / 2 ) )) ) * height ) );
						//line 1050 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 1050 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g = ( scanline_fillIndex + x );
							//line 1050 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							((double[]) (scanline_fill) )[_g] = ( ((double) (((double[]) (scanline_fill) )[_g]) ) + ( e.direction * height ) );
						}
						
					}
					else
					{
						//line 1052 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int x1 = 0;
						//line 1052 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int x2 = 0;
						//line 1053 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double y_crossing = 0.0;
						//line 1053 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double step = 0.0;
						//line 1053 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double sign = 0.0;
						//line 1053 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double area = 0.0;
						//line 1055 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( x_top > x_bottom )) 
						{
							//line 1057 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							double t = 0.0;
							//line 1058 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy0 = ( y_bottom - (( sy0 - y_top )) );
							//line 1059 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy1 = ( y_bottom - (( sy1 - y_top )) );
							//line 1060 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							t = sy0;
							//line 1060 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy0 = sy1;
							//line 1060 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							sy1 = t;
							//line 1061 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							t = x_bottom;
							//line 1061 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							x_bottom = x_top;
							//line 1061 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							x_top = t;
							//line 1062 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							dx =  - (dx) ;
							//line 1063 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							dy =  - (dy) ;
							//line 1064 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							t = x01;
							//line 1064 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							x01 = xb;
							//line 1064 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							xb = t;
						}
						
						//line 1067 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						x1 = ((int) (x_top) );
						//line 1068 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						x2 = ((int) (x_bottom) );
						//line 1070 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						y_crossing = ( ( (( ( x1 + 1 ) - x01 )) * dy ) + y_top );
						//line 1072 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						sign = e.direction;
						//line 1074 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						area = ( sign * (( y_crossing - sy0 )) );
						//line 1076 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((double[]) (scanline) )[x1] = ( ((double) (((double[]) (scanline) )[x1]) ) + ( area * (( 1 - ( (( ( x_top - x1 ) + (( ( x1 + 1 ) - x1 )) )) / 2 ) )) ) );
						//line 1078 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						step = ( sign * dy );
						//line 1079 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 1079 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g1 = ( x1 + 1 );
							//line 1079 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							while (( _g1 < x2 ))
							{
								//line 1079 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								int x3 = _g1++;
								//line 1080 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								((double[]) (scanline) )[x3] = ( ((double) (((double[]) (scanline) )[x3]) ) + (( area + ( step / 2 ) )) );
								//line 1081 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								area += step;
							}
							
						}
						
						//line 1083 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						y_crossing += ( dy * (( x2 - (( x1 + 1 )) )) );
						//line 1085 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if ( ! ((( java.lang.Math.abs(area) <= 1.01 ))) ) 
						{
							//line 1085 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							throw haxe.lang.HaxeException.wrap("Error");
						}
						
						//line 1087 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((double[]) (scanline) )[x2] = ( ((double) (((double[]) (scanline) )[x2]) ) + (( area + ( ( sign * (( 1 - ( (( ( x2 - x2 ) + (( x_bottom - x2 )) )) / 2 ) )) ) * (( sy1 - y_crossing )) ) )) );
						//line 1089 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 1089 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g2 = ( scanline_fillIndex + x2 );
							//line 1089 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							((double[]) (scanline_fill) )[_g2] = ( ((double) (((double[]) (scanline_fill) )[_g2]) ) + ( sign * (( sy1 - sy0 )) ) );
						}
						
					}
					
				}
				else
				{
					//line 1096 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g11 = 0;
					//line 1096 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					while (( _g11 < len ))
					{
						//line 1096 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int x4 = _g11++;
						//line 1112 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double x11 = ((double) (x4) );
						//line 1113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double x21 = ((double) (( x4 + 1 )) );
						//line 1114 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double x31 = xb;
						//line 1116 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double y1 = 0.0;
						//line 1116 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double y2 = 0.0;
						//line 1121 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						y1 = ( ( (( x4 - x01 )) / dx ) + y_top );
						//line 1122 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						y2 = ( ( (( ( x4 + 1 ) - x01 )) / dx ) + y_top );
						//line 1124 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( ( x01 < x11 ) && ( x31 > x21 ) )) 
						{
							//line 1125 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x11, y1);
							//line 1126 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x11, y1, x21, y2);
							//line 1127 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x21, y2, x31, y_bottom);
						}
						else
						{
							//line 1128 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							if (( ( x31 < x11 ) && ( x01 > x21 ) )) 
							{
								//line 1129 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x21, y2);
								//line 1130 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x21, y2, x11, y1);
								//line 1131 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x11, y1, x31, y_bottom);
							}
							else
							{
								//line 1132 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
								if (( ( x01 < x11 ) && ( x31 > x11 ) )) 
								{
									//line 1133 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x11, y1);
									//line 1134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x11, y1, x31, y_bottom);
								}
								else
								{
									//line 1135 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									if (( ( x31 < x11 ) && ( x01 > x11 ) )) 
									{
										//line 1136 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x11, y1);
										//line 1137 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x11, y1, x31, y_bottom);
									}
									else
									{
										//line 1138 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										if (( ( x01 < x21 ) && ( x31 > x21 ) )) 
										{
											//line 1139 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
											kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x21, y2);
											//line 1140 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
											kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x21, y2, x31, y_bottom);
										}
										else
										{
											//line 1141 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
											if (( ( x31 < x21 ) && ( x01 > x21 ) )) 
											{
												//line 1142 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
												kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x21, y2);
												//line 1143 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
												kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x21, y2, x31, y_bottom);
											}
											else
											{
												//line 1145 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
												kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge(scanline, 0, x4, e, x01, y_top, x31, y_bottom);
											}
											
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
			}
			
			//line 1150 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			e = e.next;
		}
		
	}
	
	
	public static void stbtt__rasterize_sorted_edges(kha.graphics2.truetype.Stbtt__bitmap result, kha.graphics2.truetype.Stbtt__edge[] e, int n, int vsubsample, int off_x, int off_y)
	{
		//line 1156 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__active_edge active = null;
		//line 1157 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int y = 0;
		//line 1157 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int j = 0;
		//line 1158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double[] scanline = null;
		//line 1158 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double[] scanline2 = null;
		//line 1159 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int scanline2Index = 0;
		//line 1160 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int eIndex = 0;
		//line 1162 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( result.w > 64 )) 
		{
			//line 1163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			double[] this1 = new double[( ( result.w * 2 ) + 1 )];
			//line 1163 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scanline = ((double[]) (this1) );
		}
		else
		{
			//line 1165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			double[] this2 = new double[129];
			//line 1165 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scanline = ((double[]) (this2) );
		}
		
		//line 1167 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		scanline2 = scanline;
		//line 1168 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		scanline2Index = result.w;
		//line 1170 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		y = off_y;
		//line 1171 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).y0 = ((double) (( ( off_y + result.h ) + 1 )) );
		//line 1173 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		while (( j < result.h ))
		{
			//line 1175 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			double scan_y_top = ( y + 0.0 );
			//line 1176 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			double scan_y_bottom = ( y + 1.0 );
			//line 1177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.Stbtt__active_edge step_value = null;
			//line 1177 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			java.lang.Object step_parent = null;
			//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			step_value = active;
			//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			step_parent = null;
			//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g1 = 0;
				//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g = result.w;
				//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g1 < _g ))
				{
					//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i = _g1++;
					//line 1179 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((double[]) (scanline) )[i] = ((double) (0) );
				}
				
			}
			
			//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g11 = 0;
				//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int _g2 = ( result.w + 1 );
				//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( _g11 < _g2 ))
				{
					//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int i1 = _g11++;
					//line 1180 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((double[]) (scanline2) )[( scanline2Index + i1 )] = ((double) (0) );
				}
				
			}
			
			//line 1184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (true)
			{
				//line 1184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				boolean tmp =  ! ((( step_value != null ))) ;
				//line 1184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (tmp) 
				{
					//line 1184 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					break;
				}
				
				//line 1185 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.Stbtt__active_edge z = step_value;
				//line 1186 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( z.ey <= scan_y_top )) 
				{
					//line 1188 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					boolean tmp1 = ( step_parent == null );
					//line 1188 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (tmp1) 
					{
						//line 1189 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						active = z.next;
						//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						step_value = z.next;
					}
					else
					{
						//line 1193 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						haxe.lang.Runtime.setField(step_parent, "next", z.next);
						//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						step_value = z.next;
					}
					
					//line 1197 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (( z.direction == 0 )) 
					{
						//line 1197 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						throw haxe.lang.HaxeException.wrap("Error");
					}
					
					//line 1198 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					z.direction = ((double) (0) );
				}
				else
				{
					//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					step_parent = step_value;
					//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					step_value = step_value.next;
				}
				
			}
			
			//line 1207 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y0 <= scan_y_bottom ))
			{
				//line 1208 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y0 != ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[eIndex]) ).y1 )) 
				{
					//line 1209 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.Stbtt__active_edge z1 = kha.graphics2.truetype.StbTruetype.stbtt__new_active(e, eIndex, off_x, scan_y_top);
					//line 1210 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if ( ! ((( z1.ey >= scan_y_top ))) ) 
					{
						//line 1210 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						throw haxe.lang.HaxeException.wrap("Error");
					}
					
					//line 1212 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					z1.next = active;
					//line 1213 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					active = z1;
				}
				
				//line 1215 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 ++ eIndex;
			}
			
			//line 1219 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean tmp2 = ( active != null );
			//line 1219 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (tmp2) 
			{
				//line 1220 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt__fill_active_edges_new(scanline, scanline2, ( scanline2Index + 1 ), result.w, active, scan_y_top);
			}
			
			//line 1222 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			{
				//line 1223 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double sum = ((double) (0) );
				//line 1224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				{
					//line 1224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g12 = 0;
					//line 1224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g3 = result.w;
					//line 1224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					while (( _g12 < _g3 ))
					{
						//line 1224 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int i2 = _g12++;
						//line 1225 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						double k = 0.0;
						//line 1226 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int m = 0;
						//line 1227 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						sum += ((double) (((double[]) (scanline2) )[( scanline2Index + i2 )]) );
						//line 1228 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						k = ( ((double) (((double[]) (scanline) )[i2]) ) + sum );
						//line 1229 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						k = ( ( java.lang.Math.abs(k) * 255.0 ) + 0.5 );
						//line 1230 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						m = ((int) (k) );
						//line 1231 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( m > 255 )) 
						{
							//line 1231 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							m = 255;
						}
						
						//line 1232 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						result.pixels.writeU8(( ( result.pixels_offset + ( j * result.stride ) ) + i2 ), m);
					}
					
				}
				
			}
			
			//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			step_parent = null;
			//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			step_value = active;
			//line 1238 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (true)
			{
				//line 1238 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				boolean tmp3 =  ! ((( step_value != null ))) ;
				//line 1238 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (tmp3) 
				{
					//line 1238 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					break;
				}
				
				//line 1239 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.Stbtt__active_edge z2 = step_value;
				//line 1240 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				z2.fx += z2.fdx;
				//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				step_parent = step_value;
				//line 1155 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				step_value = step_value.next;
			}
			
			//line 1246 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			 ++ y;
			//line 1247 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			 ++ j;
		}
		
	}
	
	
	public static boolean STBTT__COMPARE(kha.graphics2.truetype.Stbtt__edge a, kha.graphics2.truetype.Stbtt__edge b)
	{
		//line 1251 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return ( a.y0 < b.y0 );
	}
	
	
	public static void stbtt__sort_edges_ins_sort(kha.graphics2.truetype.Stbtt__edge[] p, int n)
	{
		//line 1254 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int j = 0;
		//line 1255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 1;
			//line 1255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < n ))
			{
				//line 1255 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 1256 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.Stbtt__edge t = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[i]) );
				//line 1258 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				j = i;
				//line 1259 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (( j > 0 ))
				{
					//line 1260 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.Stbtt__edge b = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( j - 1 )]) );
					//line 1261 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					boolean c = kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(t, b);
					//line 1262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if ( ! (c) ) 
					{
						//line 1262 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						break;
					}
					
					//line 1263 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt__edge[]) (p) )[j] = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( j - 1 )]) );
					//line 1264 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					 -- j;
				}
				
				//line 1266 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( i != j )) 
				{
					//line 1267 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					((kha.graphics2.truetype.Stbtt__edge[]) (p) )[j] = t;
				}
				
			}
			
		}
		
	}
	
	
	public static void stbtt__sort_edges_quicksort(kha.graphics2.truetype.Stbtt__edge[] p, int pIndex, int n)
	{
		//line 1273 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		while (( n > 12 ))
		{
			//line 1274 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.Stbtt__edge t = null;
			//line 1275 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean c01 = false;
			//line 1275 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean c12 = false;
			//line 1275 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean c = false;
			//line 1276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int m = 0;
			//line 1276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int i = 0;
			//line 1276 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int j = 0;
			//line 1279 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			m = ( n >> 1 );
			//line 1280 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			c01 = kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex]) ), ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )]) ));
			//line 1281 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			c12 = kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )]) ), ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( ( pIndex + n ) - 1 )]) ));
			//line 1283 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( c01 != c12 )) 
			{
				//line 1285 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int z = 0;
				//line 1286 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				c = kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex]) ), ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( ( pIndex + n ) - 1 )]) ));
				//line 1289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( c == c12 )) 
				{
					//line 1289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					z = 0;
				}
				else
				{
					//line 1289 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					z = ( n - 1 );
				}
				
				//line 1290 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				t = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + z )]) );
				//line 1291 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + z )] = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )]) );
				//line 1292 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )] = t;
			}
			
			//line 1296 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			t = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex]) );
			//line 1297 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex] = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )]) );
			//line 1298 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + m )] = t;
			//line 1301 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			i = 1;
			//line 1302 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			j = ( n - 1 );
			//line 1303 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (true)
			{
				//line 1306 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + i )]) ), ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex]) )))
				{
					//line 1308 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					 ++ i;
				}
				
				//line 1310 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				while (kha.graphics2.truetype.StbTruetype.STBTT__COMPARE(((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[pIndex]) ), ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + j )]) )))
				{
					//line 1312 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					 -- j;
				}
				
				//line 1315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( i >= j )) 
				{
					//line 1315 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					break;
				}
				
				//line 1316 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				t = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + i )]) );
				//line 1317 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + i )] = ((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + j )]) );
				//line 1318 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt__edge[]) (p) )[( pIndex + j )] = t;
				//line 1320 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 ++ i;
				//line 1321 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 -- j;
			}
			
			//line 1324 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( j < ( n - i ) )) 
			{
				//line 1325 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_quicksort(p, pIndex, j);
				//line 1326 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				pIndex += i;
				//line 1327 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				n -= i;
			}
			else
			{
				//line 1329 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_quicksort(p, ( pIndex + i ), ( n - i ));
				//line 1330 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				n = j;
			}
			
		}
		
	}
	
	
	public static void stbtt__sort_edges(kha.graphics2.truetype.Stbtt__edge[] p, int n)
	{
		//line 1336 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_quicksort(p, 0, n);
		//line 1337 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_ins_sort(p, n);
	}
	
	
	public static void stbtt__rasterize(kha.graphics2.truetype.Stbtt__bitmap result, kha.graphics2.truetype.Stbtt__point[] pts, int[] wcount, int windings, double scale_x, double scale_y, double shift_x, double shift_y, int off_x, int off_y, boolean invert)
	{
		//line 1341 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double y_scale_inv = ( (invert) ? ( - (scale_y) ) : (scale_y) );
		//line 1342 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__edge[] e = null;
		//line 1343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = 0;
		//line 1343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int j = 0;
		//line 1343 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int m = 0;
		//line 1350 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		n = 0;
		//line 1351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 0;
			//line 1351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < windings ))
			{
				//line 1351 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 1352 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				n += ((int) (((int[]) (wcount) )[i]) );
			}
			
		}
		
		//line 1354 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__edge[] this1 = new kha.graphics2.truetype.Stbtt__edge[( n + 1 )];
		//line 1354 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		e = ((kha.graphics2.truetype.Stbtt__edge[]) (this1) );
		//line 1355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( e == null );
		//line 1355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 1355 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ;
		}
		else
		{
			//line 1357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g11 = 0;
			//line 1357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g = ((kha.graphics2.truetype.Stbtt__edge[]) (e) ).length;
			//line 1357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g11 < _g ))
			{
				//line 1357 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i1 = _g11++;
				//line 1358 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt__edge[]) (e) )[i1] = new kha.graphics2.truetype.Stbtt__edge();
			}
			
		}
		
		//line 1361 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		n = 0;
		//line 1363 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		m = 0;
		//line 1364 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1364 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g12 = 0;
			//line 1364 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g12 < windings ))
			{
				//line 1364 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i2 = _g12++;
				//line 1366 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int pIndex = m;
				//line 1367 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				m += ((int) (((int[]) (wcount) )[i2]) );
				//line 1368 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				j = ( ((int) (((int[]) (wcount) )[i2]) ) - 1 );
				//line 1369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				{
					//line 1369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g3 = 0;
					//line 1369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g2 = ((int) (((int[]) (wcount) )[i2]) );
					//line 1369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					while (( _g3 < _g2 ))
					{
						//line 1369 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int k = _g3++;
						//line 1370 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int a = k;
						//line 1370 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int b = j;
						//line 1372 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + j )]) ).y == ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + k )]) ).y )) 
						{
							//line 1373 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							j = k;
							//line 1374 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							continue;
						}
						
						//line 1377 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).invert = false;
						//line 1378 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						if (( (invert) ? (( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + j )]) ).y > ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + k )]) ).y )) : (( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + j )]) ).y < ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + k )]) ).y )) )) 
						{
							//line 1379 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).invert = true;
							//line 1380 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							a = j;
							//line 1380 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							b = k;
						}
						
						//line 1382 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).x0 = ( ( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + a )]) ).x * scale_x ) + shift_x );
						//line 1383 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).y0 = ( ( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + a )]) ).y * y_scale_inv ) + shift_y );
						//line 1384 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).x1 = ( ( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + b )]) ).x * scale_x ) + shift_x );
						//line 1385 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						((kha.graphics2.truetype.Stbtt__edge) (((kha.graphics2.truetype.Stbtt__edge[]) (e) )[n]) ).y1 = ( ( ((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (pts) )[( pIndex + b )]) ).y * y_scale_inv ) + shift_y );
						//line 1386 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						 ++ n;
						//line 1387 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						j = k;
					}
					
				}
				
			}
			
		}
		
		//line 1393 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt__sort_edges(e, n);
		//line 1396 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt__rasterize_sorted_edges(result, e, n, 1, off_x, off_y);
	}
	
	
	public static void stbtt__add_point(kha.graphics2.truetype.Stbtt__point[] points, int n, double x, double y)
	{
		//line 1400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( points == null );
		//line 1400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 1400 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return ;
		}
		
		//line 1401 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (points) )[n]) ).x = x;
		//line 1402 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		((kha.graphics2.truetype.Stbtt__point) (((kha.graphics2.truetype.Stbtt__point[]) (points) )[n]) ).y = y;
	}
	
	
	public static int stbtt__tesselate_curve(kha.graphics2.truetype.Stbtt__point[] points, java.lang.Object num_points, double x0, double y0, double x1, double y1, double x2, double y2, double objspace_flatness_squared, int n)
	{
		//line 1408 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double mx = ( (( ( x0 + ( 2 * x1 ) ) + x2 )) / 4 );
		//line 1409 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double my = ( (( ( y0 + ( 2 * y1 ) ) + y2 )) / 4 );
		//line 1411 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double dx = ( ( (( x0 + x2 )) / 2 ) - mx );
		//line 1412 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double dy = ( ( (( y0 + y2 )) / 2 ) - my );
		//line 1413 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( n > 16 )) 
		{
			//line 1414 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return 1;
		}
		
		//line 1415 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( ( dx * dx ) + ( dy * dy ) ) > objspace_flatness_squared )) 
		{
			//line 1416 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt__tesselate_curve(points, num_points, x0, y0, ( (( x0 + x1 )) / 2.0 ), ( (( y0 + y1 )) / 2.0 ), mx, my, objspace_flatness_squared, ( n + 1 ));
			//line 1417 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt__tesselate_curve(points, num_points, mx, my, ( (( x1 + x2 )) / 2.0 ), ( (( y1 + y2 )) / 2.0 ), x2, y2, objspace_flatness_squared, ( n + 1 ));
		}
		else
		{
			//line 1419 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt__add_point(points, ((int) (haxe.lang.Runtime.getField_f(num_points, "value", true)) ), x2, y2);
			//line 1420 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			haxe.lang.Runtime.setField_f(num_points, "value", ((double) (( ((int) (haxe.lang.Runtime.getField_f(num_points, "value", true)) ) + 1 )) ));
		}
		
		//line 1422 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return 1;
	}
	
	
	public static kha.graphics2.truetype.Stbtt__point[] stbtt_FlattenCurves(kha.graphics2.truetype.Stbtt_vertex[] vertices, int num_verts, double objspace_flatness, kha.graphics2.truetype.VectorOfIntPointer contour_lengths, java.lang.Object num_contours)
	{
		//line 1427 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__point[] points = null;
		//line 1428 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int num_points = 0;
		//line 1430 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double objspace_flatness_squared = ( objspace_flatness * objspace_flatness );
		//line 1431 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int n = 0;
		//line 1431 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int start = 0;
		//line 1434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 0;
			//line 1434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < num_verts ))
			{
				//line 1434 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 1435 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i]) ).type == 1 )) 
				{
					//line 1436 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					 ++ n;
				}
				
			}
			
		}
		
		//line 1438 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		haxe.lang.Runtime.setField_f(num_contours, "value", ((double) (n) ));
		//line 1439 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( n == 0 )) 
		{
			//line 1439 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return null;
		}
		
		//line 1441 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int[] this1 = new int[n];
		//line 1441 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		contour_lengths.value = ((int[]) (this1) );
		//line 1443 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( contour_lengths.value == null );
		//line 1443 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 1444 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			haxe.lang.Runtime.setField_f(num_contours, "value", ((double) (0) ));
			//line 1445 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return null;
		}
		
		//line 1449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g = 0;
			//line 1449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g < 2 ))
			{
				//line 1449 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int pass = _g++;
				//line 1450 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double x = ((double) (0) );
				//line 1450 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				double y = ((double) (0) );
				//line 1451 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( pass == 1 )) 
				{
					//line 1452 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					kha.graphics2.truetype.Stbtt__point[] this2 = new kha.graphics2.truetype.Stbtt__point[num_points];
					//line 1452 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					points = ((kha.graphics2.truetype.Stbtt__point[]) (this2) );
					//line 1453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					boolean tmp1 = ( points == null );
					//line 1453 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					if (tmp1) 
					{
						//line 1454 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						contour_lengths.value = null;
						//line 1455 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						haxe.lang.Runtime.setField_f(num_contours, "value", ((double) (0) ));
						//line 1456 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						return null;
					}
					else
					{
						//line 1459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int _g2 = 0;
						//line 1459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int _g11 = ((kha.graphics2.truetype.Stbtt__point[]) (points) ).length;
						//line 1459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						while (( _g2 < _g11 ))
						{
							//line 1459 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int i1 = _g2++;
							//line 1460 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							((kha.graphics2.truetype.Stbtt__point[]) (points) )[i1] = new kha.graphics2.truetype.Stbtt__point();
						}
						
					}
					
				}
				
				//line 1464 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				num_points = 0;
				//line 1465 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				n = -1;
				//line 1466 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				{
					//line 1466 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					int _g21 = 0;
					//line 1466 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					while (( _g21 < num_verts ))
					{
						//line 1466 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						int i2 = _g21++;
						//line 1467 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
						{
							//line 1467 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							int _g3 = ((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).type;
							//line 1467 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
							switch (_g3)
							{
								case 1:
								{
									//line 1470 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									if (( n >= 0 )) 
									{
										//line 1471 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
										((int[]) (contour_lengths.value) )[n] = ( num_points - start );
									}
									
									//line 1472 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									 ++ n;
									//line 1473 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									start = num_points;
									//line 1475 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									x = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).x) );
									//line 1475 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									y = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).y) );
									//line 1476 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									kha.graphics2.truetype.StbTruetype.stbtt__add_point(points, num_points++, x, y);
									//line 1468 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									break;
								}
								
								
								case 2:
								{
									//line 1478 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									x = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).x) );
									//line 1478 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									y = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).y) );
									//line 1479 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									kha.graphics2.truetype.StbTruetype.stbtt__add_point(points, num_points++, x, y);
									//line 1477 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									break;
								}
								
								
								case 3:
								{
									//line 1481 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									java.lang.Object num_points_reference = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"value"}, new double[]{((double) (((double) (num_points) )) )});
									//line 1482 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									kha.graphics2.truetype.StbTruetype.stbtt__tesselate_curve(points, num_points_reference, x, y, ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).cx) ), ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).cy) ), ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).x) ), ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).y) ), objspace_flatness_squared, 0);
									//line 1486 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									num_points = ((int) (haxe.lang.Runtime.getField_f(num_points_reference, "value", true)) );
									//line 1487 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									x = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).x) );
									//line 1487 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									y = ((double) (((kha.graphics2.truetype.Stbtt_vertex) (((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) )[i2]) ).y) );
									//line 1480 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
									break;
								}
								
								
							}
							
						}
						
					}
					
				}
				
				//line 1490 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((int[]) (contour_lengths.value) )[n] = ( num_points - start );
			}
			
		}
		
		//line 1493 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return points;
	}
	
	
	public static void stbtt_Rasterize(kha.graphics2.truetype.Stbtt__bitmap result, double flatness_in_pixels, kha.graphics2.truetype.Stbtt_vertex[] vertices, int num_verts, double scale_x, double scale_y, double shift_x, double shift_y, int x_off, int y_off, boolean invert)
	{
		//line 1497 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double scale = ( (( scale_x > scale_y )) ? (scale_y) : (scale_x) );
		//line 1498 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int winding_count = 0;
		//line 1499 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int[] winding_lengths = null;
		//line 1500 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		java.lang.Object winding_count_reference = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"value"}, new double[]{((double) (((double) (0) )) )});
		//line 1501 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.VectorOfIntPointer winding_lengths_reference = new kha.graphics2.truetype.VectorOfIntPointer();
		//line 1502 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__point[] windings = kha.graphics2.truetype.StbTruetype.stbtt_FlattenCurves(vertices, num_verts, ( flatness_in_pixels / scale ), winding_lengths_reference, winding_count_reference);
		//line 1503 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		winding_count = ((int) (haxe.lang.Runtime.getField_f(winding_count_reference, "value", true)) );
		//line 1504 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		winding_lengths = winding_lengths_reference.value;
		//line 1505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( windings != null );
		//line 1505 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 1506 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt__rasterize(result, windings, winding_lengths, winding_count, scale_x, scale_y, shift_x, shift_y, x_off, y_off, invert);
		}
		
	}
	
	
	public static kha.internal.BytesBlob stbtt_GetGlyphBitmapSubpixel(kha.graphics2.truetype.Stbtt_fontinfo info, double scale_x, double scale_y, double shift_x, double shift_y, int glyph, kha.graphics2.truetype.Stbtt_temp_region region)
	{
		//line 1511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ix0 = 0;
		//line 1511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int iy0 = 0;
		//line 1511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ix1 = 0;
		//line 1511 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int iy1 = 0;
		//line 1512 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__bitmap gbm = new kha.graphics2.truetype.Stbtt__bitmap();
		//line 1513 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_vertex[] vertices = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphShape(info, glyph);
		//line 1514 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int num_verts = ((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) ).length;
		//line 1516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( scale_x == 0 )) 
		{
			//line 1516 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scale_x = scale_y;
		}
		
		//line 1517 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( scale_y == 0 )) 
		{
			//line 1518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (( scale_x == 0 )) 
			{
				//line 1518 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				return null;
			}
			
			//line 1519 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			scale_y = scale_x;
		}
		
		//line 1522 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_rect rect = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);
		//line 1523 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		ix0 = rect.x0;
		//line 1524 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		iy0 = rect.y0;
		//line 1525 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		ix1 = rect.x1;
		//line 1526 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		iy1 = rect.y1;
		//line 1529 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.w = ( ix1 - ix0 );
		//line 1530 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.h = ( iy1 - iy0 );
		//line 1531 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.pixels = null;
		//line 1533 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		region.width = gbm.w;
		//line 1534 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		region.height = gbm.h;
		//line 1535 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		region.xoff = ix0;
		//line 1536 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		region.yoff = iy0;
		//line 1538 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( gbm.w != 0 ) && ( gbm.h != 0 ) )) 
		{
			//line 1539 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			gbm.pixels = kha.internal.BytesBlob.alloc(( gbm.w * gbm.h ));
			//line 1540 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			boolean tmp = ( gbm.pixels != null );
			//line 1540 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			if (tmp) 
			{
				//line 1541 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				gbm.stride = gbm.w;
				//line 1543 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt_Rasterize(gbm, 0.35, vertices, num_verts, scale_x, scale_y, shift_x, shift_y, ix0, iy0, true);
			}
			
		}
		
		//line 1546 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return gbm.pixels;
	}
	
	
	public static kha.internal.BytesBlob stbtt_GetGlyphBitmap(kha.graphics2.truetype.Stbtt_fontinfo info, double scale_x, double scale_y, int glyph, kha.graphics2.truetype.Stbtt_temp_region region)
	{
		//line 1550 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapSubpixel(info, scale_x, scale_y, 0.0, 0.0, glyph, region);
	}
	
	
	public static void stbtt_MakeGlyphBitmapSubpixel(kha.graphics2.truetype.Stbtt_fontinfo info, kha.internal.BytesBlob output, int output_offset, int out_w, int out_h, int out_stride, double scale_x, double scale_y, double shift_x, double shift_y, int glyph)
	{
		//line 1554 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int ix0 = 0;
		//line 1554 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int iy0 = 0;
		//line 1555 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_vertex[] vertices = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphShape(info, glyph);
		//line 1556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int num_verts = 0;
		//line 1556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		boolean tmp = ( vertices == null );
		//line 1556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (tmp) 
		{
			//line 1556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			num_verts = 0;
		}
		else
		{
			//line 1556 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			num_verts = ((kha.graphics2.truetype.Stbtt_vertex[]) (vertices) ).length;
		}
		
		//line 1557 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt__bitmap gbm = new kha.graphics2.truetype.Stbtt__bitmap();
		//line 1559 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_temp_rect rect = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);
		//line 1560 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		ix0 = rect.x0;
		//line 1561 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		iy0 = rect.y0;
		//line 1562 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.pixels = output;
		//line 1563 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.pixels_offset = output_offset;
		//line 1564 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.w = out_w;
		//line 1565 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.h = out_h;
		//line 1566 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		gbm.stride = out_stride;
		//line 1568 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if (( ( gbm.w != 0 ) && ( gbm.h != 0 ) )) 
		{
			//line 1569 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			kha.graphics2.truetype.StbTruetype.stbtt_Rasterize(gbm, 0.35, vertices, num_verts, scale_x, scale_y, shift_x, shift_y, ix0, iy0, true);
		}
		
	}
	
	
	public static void stbtt_MakeGlyphBitmap(kha.graphics2.truetype.Stbtt_fontinfo info, kha.internal.BytesBlob output, int output_offset, int out_w, int out_h, int out_stride, double scale_x, double scale_y, int glyph)
	{
		//line 1573 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, 0.0, 0.0, glyph);
	}
	
	
	public static kha.internal.BytesBlob stbtt_GetCodepointBitmapSubpixel(kha.graphics2.truetype.Stbtt_fontinfo info, double scale_x, double scale_y, double shift_x, double shift_y, int codepoint, kha.graphics2.truetype.Stbtt_temp_region region)
	{
		//line 1577 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapSubpixel(info, scale_x, scale_y, shift_x, shift_y, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, codepoint), region);
	}
	
	
	public static void stbtt_MakeCodepointBitmapSubpixel(kha.graphics2.truetype.Stbtt_fontinfo info, kha.internal.BytesBlob output, int output_offset, int out_w, int out_h, int out_stride, double scale_x, double scale_y, double shift_x, double shift_y, int codepoint)
	{
		//line 1581 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, shift_x, shift_y, kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(info, codepoint));
	}
	
	
	public static kha.internal.BytesBlob stbtt_GetCodepointBitmap(kha.graphics2.truetype.Stbtt_fontinfo info, double scale_x, double scale_y, int codepoint, kha.graphics2.truetype.Stbtt_temp_region region)
	{
		//line 1585 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmapSubpixel(info, scale_x, scale_y, 0.0, 0.0, codepoint, region);
	}
	
	
	public static void stbtt_MakeCodepointBitmap(kha.graphics2.truetype.Stbtt_fontinfo info, kha.internal.BytesBlob output, int output_offset, int out_w, int out_h, int out_stride, double scale_x, double scale_y, int codepoint)
	{
		//line 1589 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, 0.0, 0.0, codepoint);
	}
	
	
	public static int stbtt_BakeFontBitmap(kha.internal.BytesBlob data, int offset, double pixel_height, kha.internal.BytesBlob pixels, int pw, int ph, haxe.root.Array<java.lang.Object> chars, kha.graphics2.truetype.Stbtt_bakedchar[] chardata)
	{
		//line 1603 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double scale = 0.0;
		//line 1604 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int x = 0;
		//line 1604 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int y = 0;
		//line 1604 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int bottom_y = 0;
		//line 1605 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_fontinfo f = new kha.graphics2.truetype.Stbtt_fontinfo();
		//line 1606 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		if ( ! (kha.graphics2.truetype.StbTruetype.stbtt_InitFont(f, data, offset)) ) 
		{
			//line 1607 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			return -1;
		}
		
		//line 1608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g1 = 0;
			//line 1608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g = ( pw * ph );
			//line 1608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g1 < _g ))
			{
				//line 1608 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int i = _g1++;
				//line 1609 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				pixels.writeU8(i, 0);
			}
			
		}
		
		//line 1610 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		y = 1;
		//line 1610 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		x = 1;
		//line 1611 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		bottom_y = 1;
		//line 1613 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		scale = kha.graphics2.truetype.StbTruetype.stbtt_ScaleForPixelHeight(f, pixel_height);
		//line 1615 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int i1 = 0;
		//line 1616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			int _g2 = 0;
			//line 1616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			while (( _g2 < chars.length ))
			{
				//line 1616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int index = ((int) (haxe.lang.Runtime.toInt(chars.__get(_g2))) );
				//line 1616 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 ++ _g2;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int advance = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int x0 = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int y0 = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int x1 = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int y1 = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int gw = 0;
				//line 1617 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int gh = 0;
				//line 1618 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				int g = kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex(f, index);
				//line 1619 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics metrics = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphHMetrics(f, g);
				//line 1620 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				advance = metrics.advanceWidth;
				//line 1622 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.Stbtt_temp_rect rect = kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBox(f, g, scale, scale);
				//line 1623 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				x0 = rect.x0;
				//line 1624 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				y0 = rect.y0;
				//line 1625 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				x1 = rect.x1;
				//line 1626 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				y1 = rect.y1;
				//line 1627 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				gw = ( x1 - x0 );
				//line 1628 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				gh = ( y1 - y0 );
				//line 1629 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( ( x + gw ) + 1 ) >= pw )) 
				{
					//line 1630 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					y = bottom_y;
					//line 1630 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					x = 1;
				}
				
				//line 1632 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( ( y + gh ) + 1 ) >= ph )) 
				{
					//line 1633 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					return  - (i1) ;
				}
				
				//line 1634 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( x + gw ) >= pw )) 
				{
					//line 1634 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
				//line 1635 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( y + gh ) >= ph )) 
				{
					//line 1635 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					throw haxe.lang.HaxeException.wrap("Error");
				}
				
				//line 1636 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				kha.graphics2.truetype.StbTruetype.stbtt_MakeGlyphBitmap(f, pixels, ( x + ( y * pw ) ), gw, gh, pw, scale, scale, g);
				//line 1637 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).x0 = x;
				//line 1638 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).y0 = y;
				//line 1639 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).x1 = ( x + gw );
				//line 1640 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).y1 = ( y + gh );
				//line 1641 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).xadvance = ( scale * advance );
				//line 1642 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).xoff = ((double) (x0) );
				//line 1643 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[i1]) ).yoff = ((double) (y0) );
				//line 1644 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				x = ( ( x + gw ) + 1 );
				//line 1645 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				if (( ( ( y + gh ) + 1 ) > bottom_y )) 
				{
					//line 1646 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
					bottom_y = ( ( y + gh ) + 1 );
				}
				
				//line 1647 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
				 ++ i1;
			}
			
		}
		
		//line 1649 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return bottom_y;
	}
	
	
	public static void stbtt_GetBakedQuad(kha.graphics2.truetype.Stbtt_bakedchar[] chardata, int pw, int ph, int char_index, java.lang.Object xpos, java.lang.Object ypos, kha.graphics2.truetype.Stbtt_aligned_quad q, boolean opengl_fillrule)
	{
		//line 1653 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double d3d_bias = ( (opengl_fillrule) ? (((double) (0) )) : (-0.5) );
		//line 1654 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double ipw = ( 1.0 / pw );
		//line 1654 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		double iph = ( 1.0 / ph );
		//line 1655 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		kha.graphics2.truetype.Stbtt_bakedchar b = ((kha.graphics2.truetype.Stbtt_bakedchar) (((kha.graphics2.truetype.Stbtt_bakedchar[]) (chardata) )[char_index]) );
		//line 1656 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int round_x = ((int) (java.lang.Math.floor(( ( haxe.lang.Runtime.getField_f(xpos, "value", true) + b.xoff ) + 0.5 ))) );
		//line 1657 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		int round_y = ((int) (java.lang.Math.floor(( ( haxe.lang.Runtime.getField_f(ypos, "value", true) + b.yoff ) + 0.5 ))) );
		//line 1659 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.x0 = ( round_x + d3d_bias );
		//line 1660 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.y0 = ( round_y + d3d_bias );
		//line 1661 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.x1 = ( ( ( round_x + b.x1 ) - b.x0 ) + d3d_bias );
		//line 1662 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.y1 = ( ( ( round_y + b.y1 ) - b.y0 ) + d3d_bias );
		//line 1664 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.s0 = ( b.x0 * ipw );
		//line 1665 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.t0 = ( b.y0 * iph );
		//line 1666 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.s1 = ( b.x1 * ipw );
		//line 1667 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		q.t1 = ( b.y1 * iph );
		//line 1669 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		{
			//line 1669 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			java.lang.Object __temp_dynop1 = xpos;
			//line 1669 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
			haxe.lang.Runtime.setField_f(__temp_dynop1, "value", ( haxe.lang.Runtime.getField_f(__temp_dynop1, "value", true) + b.xadvance ));
		}
		
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 181 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return new kha.graphics2.truetype.StbTruetype(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 181 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/graphics2/truetype/StbTruetype.hx"
		return new kha.graphics2.truetype.StbTruetype();
	}
	
	
}


