// Generated by Haxe 3.3.0
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Framebuffer extends haxe.lang.HxObject implements kha.Canvas
{
	public Framebuffer(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Framebuffer(int windowId, kha.graphics1.Graphics g1, kha.graphics2.Graphics g2, kha.graphics4.Graphics g4)
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		kha.Framebuffer.__hx_ctor_kha_Framebuffer(this, windowId, g1, g2, g4);
	}
	
	
	public static void __hx_ctor_kha_Framebuffer(kha.Framebuffer __temp_me58, int windowId, kha.graphics1.Graphics g1, kha.graphics2.Graphics g2, kha.graphics4.Graphics g4)
	{
		//line 17 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		__temp_me58.windowId = windowId;
		//line 18 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		__temp_me58.graphics1 = g1;
		//line 19 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		__temp_me58.graphics2 = g2;
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		__temp_me58.graphics4 = g4;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return new kha.Framebuffer(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return new kha.Framebuffer(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ), ((kha.graphics1.Graphics) (arr.__get(1)) ), ((kha.graphics2.Graphics) (arr.__get(2)) ), ((kha.graphics4.Graphics) (arr.__get(3)) ));
	}
	
	
	public int windowId;
	
	public kha.graphics1.Graphics graphics1;
	
	public kha.graphics2.Graphics graphics2;
	
	public kha.graphics4.Graphics graphics4;
	
	public void init(kha.graphics1.Graphics g1, kha.graphics2.Graphics g2, kha.graphics4.Graphics g4)
	{
		//line 27 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		this.graphics1 = g1;
		//line 28 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		this.graphics2 = g2;
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		this.graphics4 = g4;
	}
	
	
	public kha.graphics1.Graphics g1;
	
	public kha.graphics1.Graphics get_g1()
	{
		//line 39 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return this.graphics1;
	}
	
	
	public kha.graphics2.Graphics g2;
	
	public kha.graphics2.Graphics get_g2()
	{
		//line 49 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return this.graphics2;
	}
	
	
	public kha.graphics4.Graphics g4;
	
	public kha.graphics4.Graphics get_g4()
	{
		//line 59 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return this.graphics4;
	}
	
	
	public int width;
	
	public int get_width()
	{
		//line 68 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return kha.System.windowWidth(this.windowId);
	}
	
	
	public int height;
	
	public int get_height()
	{
		//line 77 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return kha.System.windowHeight(this.windowId);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			switch (field.hashCode())
			{
				case -1221029593:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.height = ((int) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1115379413:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("windowId")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.windowId = ((int) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.width = ((int) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			switch (field.hashCode())
			{
				case -1221029593:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.height = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1115379413:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("windowId")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.windowId = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.width = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051642:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.graphics1 = ((kha.graphics1.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3245:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.g4 = ((kha.graphics4.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051641:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.graphics2 = ((kha.graphics2.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3243:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.g2 = ((kha.graphics2.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051639:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.graphics4 = ((kha.graphics4.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3242:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.g1 = ((kha.graphics1.Graphics) (value) );
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return value;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			switch (field.hashCode())
			{
				case 859648560:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_height")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1115379413:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("windowId")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.windowId;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1221029593:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.get_height();
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.height;
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051642:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.graphics1;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 1150076829:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_width")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051641:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.graphics2;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.get_width();
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.width;
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1173051639:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("graphics4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.graphics4;
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338826:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g4")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3237136:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("init")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "init")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3245:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.get_g4();
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.g4;
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3242:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.get_g1();
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.g1;
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338828:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g2")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338829:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_g1")) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3243:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("g2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.get_g2();
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return this.g2;
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			switch (field.hashCode())
			{
				case -1221029593:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return ((double) (this.get_height()) );
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return ((double) (this.height) );
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1115379413:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("windowId")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return ((double) (this.windowId) );
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 113126854:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						if (handleProperties) 
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return ((double) (this.get_width()) );
						}
						else
						{
							//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
							return ((double) (this.width) );
						}
						
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			switch (field.hashCode())
			{
				case 859648560:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_height")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.get_height();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 3237136:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("init")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						this.init(((kha.graphics1.Graphics) (dynargs.__get(0)) ), ((kha.graphics2.Graphics) (dynargs.__get(1)) ), ((kha.graphics4.Graphics) (dynargs.__get(2)) ));
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case 1150076829:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_width")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.get_width();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338829:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g1")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.get_g1();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338826:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g4")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.get_g4();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
				case -1249338828:
				{
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					if (field.equals("get_g2")) 
					{
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						__temp_executeDef1 = false;
						//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
						return this.get_g2();
					}
					
					//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
					break;
				}
				
				
			}
			
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("height");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("width");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("g4");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("g2");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("g1");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("graphics4");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("graphics2");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("graphics1");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		baseArr.push("windowId");
		//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
		{
			//line 7 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Framebuffer.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


