// Generated by Haxe 3.3.0
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class LoaderImpl extends haxe.lang.HxObject
{
	public LoaderImpl(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public LoaderImpl()
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.LoaderImpl.__hx_ctor_kha_LoaderImpl(this);
	}
	
	
	public static void __hx_ctor_kha_LoaderImpl(kha.LoaderImpl __temp_me67)
	{
	}
	
	
	public static android.content.res.AssetManager assetManager;
	
	public static void init(android.content.Context context)
	{
		//line 20 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.LoaderImpl.assetManager = context.getAssets();
		//line 21 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.Image.assets = kha.LoaderImpl.assetManager;
	}
	
	
	public static void loadImageFromDescription(java.lang.Object desc, haxe.lang.Function done)
	{
		//line 25 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		done.__hx_invoke1_o(0.0, kha.Image.createFromFile(haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(haxe.lang.Runtime.getField(desc, "files", true), "__get", new haxe.root.Array(new java.lang.Object[]{0})))));
	}
	
	
	public static haxe.root.Array<java.lang.String> getImageFormats()
	{
		//line 29 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		return new haxe.root.Array<java.lang.String>(new java.lang.String[]{"png", "jpg"});
	}
	
	
	public static void loadSoundFromDescription(java.lang.Object desc, haxe.lang.Function done)
	{
		//line 33 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.Sound sound = null;
		//line 35 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		try 
		{
			//line 35 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			sound = new kha.android.Sound(((android.content.res.AssetFileDescriptor) (kha.LoaderImpl.assetManager.openFd(haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(haxe.lang.Runtime.getField(desc, "files", true), "__get", new haxe.root.Array(new java.lang.Object[]{0}))))) ));
		}
		catch (java.io.IOException ex)
		{
			//line 38 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			haxe.lang.Exceptions.setException(ex);
			//line 38 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			ex.printStackTrace();
		}
		
		
		//line 40 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		done.__hx_invoke1_o(0.0, sound);
	}
	
	
	public static haxe.root.Array<java.lang.String> getSoundFormats()
	{
		//line 44 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		return new haxe.root.Array<java.lang.String>(new java.lang.String[]{"wav"});
	}
	
	
	public static void loadVideoFromDescription(java.lang.Object desc, haxe.lang.Function done)
	{
		//line 59 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.Video video = null;
		//line 61 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		try 
		{
			//line 61 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			video = new kha.android.Video(((android.content.res.AssetFileDescriptor) (kha.LoaderImpl.assetManager.openFd(haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(haxe.lang.Runtime.getField(desc, "files", true), "__get", new haxe.root.Array(new java.lang.Object[]{0}))))) ));
		}
		catch (java.io.IOException ex)
		{
			//line 64 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			haxe.lang.Exceptions.setException(ex);
			//line 64 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			ex.printStackTrace();
		}
		
		
		//line 66 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		done.__hx_invoke1_o(0.0, video);
	}
	
	
	public static haxe.root.Array<java.lang.String> getVideoFormats()
	{
		//line 70 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		return new haxe.root.Array<java.lang.String>(new java.lang.String[]{"ts"});
	}
	
	
	public static void loadBlobFromDescription(java.lang.Object desc, haxe.lang.Function done)
	{
		//line 78 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		haxe.root.Array<java.lang.Object> bytes = new haxe.root.Array<java.lang.Object>();
		//line 79 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		try 
		{
			//line 80 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			java.io.InputStream stream = new java.io.BufferedInputStream(kha.LoaderImpl.assetManager.open(haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(haxe.lang.Runtime.getField(desc, "files", true), "__get", new haxe.root.Array(new java.lang.Object[]{0})))));
			//line 81 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			int c = -1;
			//line 82 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			while (true)
			{
				//line 82 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
				c = stream.read();
				//line 82 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
				if ( ! ((( c != -1 ))) ) 
				{
					//line 82 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
					break;
				}
				
				//line 83 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
				bytes.push(c);
			}
			
			//line 85 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			stream.close();
		}
		catch (java.io.IOException ex)
		{
			//line 88 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			haxe.lang.Exceptions.setException(ex);
			//line 88 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			ex.printStackTrace();
		}
		
		
		//line 90 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		byte[] array = new byte[bytes.length];
		//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		{
			//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			int _g1 = 0;
			//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			int _g = bytes.length;
			//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
			while (( _g1 < _g ))
			{
				//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
				int i = _g1++;
				//line 91 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
				array[i] = ((byte) (((int) (haxe.lang.Runtime.toInt(bytes.__get(i))) )) );
			}
			
		}
		
		//line 92 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		haxe.io.Bytes hbytes = haxe.io.Bytes.ofData(array);
		//line 93 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		done.__hx_invoke1_o(0.0, new kha.internal.BytesBlob(((haxe.io.Bytes) (hbytes) )));
	}
	
	
	public static void loadFontFromDescription(java.lang.Object desc, haxe.lang.Function done)
	{
		//line 97 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		kha.LoaderImpl.loadBlobFromDescription(desc, new kha.LoaderImpl_loadFontFromDescription_97__Fun(done));
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		return new kha.LoaderImpl(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 16 "/usr/local/lib/haxe/lib/kha/git/Backends/Android/kha/LoaderImpl.hx"
		return new kha.LoaderImpl();
	}
	
	
}


