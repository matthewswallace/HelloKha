// Generated by Haxe 3.3.0
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Assets_loadEverything_134__Fun extends haxe.lang.Function
{
	public Assets_loadEverything_134__Fun(int[] filesLeft, int fileCount, haxe.lang.Function callback)
	{
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		super(0, 0);
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.filesLeft = filesLeft;
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.fileCount = fileCount;
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.callback = callback;
	}
	
	
	@Override public java.lang.Object __hx_invoke0_o()
	{
		//line 135 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		 -- this.filesLeft[0];
		//line 136 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		kha.Assets.progress = ( 1 - ( ((double) (this.filesLeft[0]) ) / this.fileCount ) );
		//line 137 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		if (( this.filesLeft[0] == 0 )) 
		{
			//line 137 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
			this.callback.__hx_invoke0_o();
		}
		
		//line 134 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		return null;
	}
	
	
	public int[] filesLeft;
	
	public int fileCount;
	
	public haxe.lang.Function callback;
	
}


