// Generated by Haxe 3.3.0
package kha;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Assets_loadEverything_113__Fun extends haxe.lang.Function
{
	public Assets_loadEverything_113__Fun(java.lang.String sound1, int[] filesLeft, int fileCount, haxe.lang.Function callback)
	{
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		super(0, 0);
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.sound1 = sound1;
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.filesLeft = filesLeft;
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.fileCount = fileCount;
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		this.callback = callback;
	}
	
	
	@Override public java.lang.Object __hx_invoke0_o()
	{
		//line 114 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		kha.Sound sound2 = ((kha.Sound) (haxe.root.Reflect.field(kha.Assets.sounds, haxe.lang.StringExt.substring(this.sound1, 0, ( this.sound1.length() - 4 )))) );
		//line 115 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		sound2.uncompress(new kha.Assets_loadEverything_115__Fun(this.filesLeft, this.fileCount, this.callback));
		//line 113 "/usr/local/lib/haxe/lib/kha/git/Sources/kha/Assets.hx"
		return null;
	}
	
	
	public java.lang.String sound1;
	
	public int[] filesLeft;
	
	public int fileCount;
	
	public haxe.lang.Function callback;
	
}


