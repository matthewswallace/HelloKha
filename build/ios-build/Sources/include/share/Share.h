// Generated by Haxe 3.3.0
#ifndef INCLUDED_share_Share
#define INCLUDED_share_Share

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(share,Share)


#include <ShareKore.h>

namespace share{


class HXCPP_CLASS_ATTRIBUTES Share_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Share_obj OBJ_;
		Share_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="share.Share")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"share.Share"); }
		static hx::ObjectPtr< Share_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Share_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Share","\xbf","\x54","\x4a","\x0f"); }

		static void share(::String subject,::String body,::String url,Bool attachScreenshot);
		static ::Dynamic share_dyn();

};

} // end namespace share

#endif /* INCLUDED_share_Share */ 
