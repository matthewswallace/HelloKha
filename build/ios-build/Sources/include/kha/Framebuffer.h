// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_Framebuffer
#define INCLUDED_kha_Framebuffer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Framebuffer)
HX_DECLARE_CLASS2(kha,graphics1,Graphics)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS2(kha,graphics4,Graphics)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES Framebuffer_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Framebuffer_obj OBJ_;
		Framebuffer_obj();

	public:
		void __construct(Int windowId,::Dynamic g1, ::kha::graphics2::Graphics g2,::Dynamic g4);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.Framebuffer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.Framebuffer"); }
		static hx::ObjectPtr< Framebuffer_obj > __new(Int windowId,::Dynamic g1, ::kha::graphics2::Graphics g2,::Dynamic g4);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Framebuffer_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("Framebuffer","\xcd","\xac","\x7a","\x5e"); }

		Int windowId;
		::Dynamic graphics1;
		 ::kha::graphics2::Graphics graphics2;
		::Dynamic graphics4;
		void init(::Dynamic g1, ::kha::graphics2::Graphics g2,::Dynamic g4);
		::Dynamic init_dyn();

		::Dynamic g1;
		::Dynamic get_g1();
		::Dynamic get_g1_dyn();

		 ::kha::graphics2::Graphics g2;
		 ::kha::graphics2::Graphics get_g2();
		::Dynamic get_g2_dyn();

		::Dynamic g4;
		::Dynamic get_g4();
		::Dynamic get_g4_dyn();

		Int width;
		Int get_width();
		::Dynamic get_width_dyn();

		Int height;
		Int get_height();
		::Dynamic get_height_dyn();

};

} // end namespace kha

#endif /* INCLUDED_kha_Framebuffer */ 
