// Generated by Haxe 3.3.0
#ifndef INCLUDED_kha_graphics4_BlendingFactor
#define INCLUDED_kha_graphics4_BlendingFactor

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(kha,graphics4,BlendingFactor)
namespace kha{
namespace graphics4{


class BlendingFactor_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef BlendingFactor_obj OBJ_;

	public:
		BlendingFactor_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("kha.graphics4.BlendingFactor","\x4f","\xf8","\x07","\x8f"); }
		::String __ToString() const { return HX_HCSTRING("BlendingFactor.","\x2e","\x57","\xce","\xa0") + _hx_tag; }

		static ::kha::graphics4::BlendingFactor BlendOne;
		static inline ::kha::graphics4::BlendingFactor BlendOne_dyn() { return BlendOne; }
		static ::kha::graphics4::BlendingFactor BlendZero;
		static inline ::kha::graphics4::BlendingFactor BlendZero_dyn() { return BlendZero; }
		static ::kha::graphics4::BlendingFactor DestinationAlpha;
		static inline ::kha::graphics4::BlendingFactor DestinationAlpha_dyn() { return DestinationAlpha; }
		static ::kha::graphics4::BlendingFactor DestinationColor;
		static inline ::kha::graphics4::BlendingFactor DestinationColor_dyn() { return DestinationColor; }
		static ::kha::graphics4::BlendingFactor InverseDestinationAlpha;
		static inline ::kha::graphics4::BlendingFactor InverseDestinationAlpha_dyn() { return InverseDestinationAlpha; }
		static ::kha::graphics4::BlendingFactor InverseDestinationColor;
		static inline ::kha::graphics4::BlendingFactor InverseDestinationColor_dyn() { return InverseDestinationColor; }
		static ::kha::graphics4::BlendingFactor InverseSourceAlpha;
		static inline ::kha::graphics4::BlendingFactor InverseSourceAlpha_dyn() { return InverseSourceAlpha; }
		static ::kha::graphics4::BlendingFactor InverseSourceColor;
		static inline ::kha::graphics4::BlendingFactor InverseSourceColor_dyn() { return InverseSourceColor; }
		static ::kha::graphics4::BlendingFactor SourceAlpha;
		static inline ::kha::graphics4::BlendingFactor SourceAlpha_dyn() { return SourceAlpha; }
		static ::kha::graphics4::BlendingFactor SourceColor;
		static inline ::kha::graphics4::BlendingFactor SourceColor_dyn() { return SourceColor; }
		static ::kha::graphics4::BlendingFactor Undefined;
		static inline ::kha::graphics4::BlendingFactor Undefined_dyn() { return Undefined; }
};

} // end namespace kha
} // end namespace graphics4

#endif /* INCLUDED_kha_graphics4_BlendingFactor */ 
