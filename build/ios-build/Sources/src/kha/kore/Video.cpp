// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Video
#include <kha/Video.h>
#endif
#ifndef INCLUDED_kha_kore_Video
#include <kha/kore/Video.h>
#endif

namespace kha{
namespace kore{

void Video_obj::__construct(::String filename){
            	HX_STACK_FRAME("kha.kore.Video","new",0x65ff4f00,"kha.kore.Video.new","kha/kore/Video.hx",12,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(filename,"filename")
HXLINE(  13)		super::__construct();
HXLINE(  14)		this->init(filename);
            	}

Dynamic Video_obj::__CreateEmpty() { return new Video_obj; }

hx::ObjectPtr< Video_obj > Video_obj::__new(::String filename)
{
	hx::ObjectPtr< Video_obj > _hx_result = new Video_obj();
	_hx_result->__construct(filename);
	return _hx_result;
}

Dynamic Video_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Video_obj > _hx_result = new Video_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void Video_obj::init(::String filename){
            	HX_STACK_FRAME("kha.kore.Video","init",0xd61e8870,"kha.kore.Video.init","kha/kore/Video.hx",20,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(filename,"filename")
            	
	video = new Kore::Video(filename.c_str());
	

            	}


HX_DEFINE_DYNAMIC_FUNC1(Video_obj,init,(void))

void Video_obj::play(hx::Null< Bool >  __o_loop){
Bool loop = __o_loop.Default(false);
            	HX_STACK_FRAME("kha.kore.Video","play",0xdabd7b54,"kha.kore.Video.play","kha/kore/Video.hx",27,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(loop,"loop")
            	
	video->play();
	

            	}


void Video_obj::pause(){
            	HX_STACK_FRAME("kha.kore.Video","pause",0x83d83d96,"kha.kore.Video.pause","kha/kore/Video.hx",34,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	video->pause();
	

            	}


void Video_obj::stop(){
            	HX_STACK_FRAME("kha.kore.Video","stop",0xdcbf3d62,"kha.kore.Video.stop","kha/kore/Video.hx",41,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	video->stop();
	

            	}


Int Video_obj::getLength(){
            	HX_STACK_FRAME("kha.kore.Video","getLength",0x212654bc,"kha.kore.Video.getLength","kha/kore/Video.hx",49,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	return static_cast<int>(video->duration * 1000.0);
	

HXLINE(  49)		return (int)0;
            	}


Int Video_obj::getCurrentPos(){
            	HX_STACK_FRAME("kha.kore.Video","getCurrentPos",0x70da85b1,"kha.kore.Video.getCurrentPos","kha/kore/Video.hx",56,0x2ec24cd0)
            	HX_STACK_THIS(this)
HXLINE(  56)		return (int)0;
            	}


Bool Video_obj::isFinished(){
            	HX_STACK_FRAME("kha.kore.Video","isFinished",0x19253adc,"kha.kore.Video.isFinished","kha/kore/Video.hx",63,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	return video->finished;
	

HXLINE(  63)		return false;
            	}


Int Video_obj::width(){
            	HX_STACK_FRAME("kha.kore.Video","width",0x90e31ca6,"kha.kore.Video.width","kha/kore/Video.hx",69,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	return video->width();
	

HXLINE(  69)		return (int)100;
            	}


Int Video_obj::height(){
            	HX_STACK_FRAME("kha.kore.Video","height",0xec256d47,"kha.kore.Video.height","kha/kore/Video.hx",74,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	return video->height();
	

HXLINE(  74)		return (int)100;
            	}


void Video_obj::unload(){
            	HX_STACK_FRAME("kha.kore.Video","unload",0x4f66065f,"kha.kore.Video.unload","kha/kore/Video.hx",80,0x2ec24cd0)
            	HX_STACK_THIS(this)
            	
	delete video;
	video = nullptr;
	

            	}



Video_obj::Video_obj()
{
}

hx::Val Video_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn()); }
		if (HX_FIELD_EQ(inName,"play") ) { return hx::Val( play_dyn()); }
		if (HX_FIELD_EQ(inName,"stop") ) { return hx::Val( stop_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"pause") ) { return hx::Val( pause_dyn()); }
		if (HX_FIELD_EQ(inName,"width") ) { return hx::Val( width_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { return hx::Val( height_dyn()); }
		if (HX_FIELD_EQ(inName,"unload") ) { return hx::Val( unload_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getLength") ) { return hx::Val( getLength_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"isFinished") ) { return hx::Val( isFinished_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getCurrentPos") ) { return hx::Val( getCurrentPos_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Video_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Video_obj_sStaticStorageInfo = 0;
#endif

static ::String Video_obj_sMemberFields[] = {
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	HX_HCSTRING("play","\xf4","\x2d","\x5a","\x4a"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("stop","\x02","\xf0","\x5b","\x4c"),
	HX_HCSTRING("getLength","\x1c","\x1e","\x5e","\x1b"),
	HX_HCSTRING("getCurrentPos","\x11","\x7f","\xa2","\x23"),
	HX_HCSTRING("isFinished","\x7c","\xa5","\xbd","\x0f"),
	HX_HCSTRING("width","\x06","\xb6","\x62","\xca"),
	HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"),
	HX_HCSTRING("unload","\xff","\xa0","\x8c","\x65"),
	::String(null()) };

static void Video_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Video_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Video_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Video_obj::__mClass,"__mClass");
};

#endif

hx::Class Video_obj::__mClass;

void Video_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.kore.Video","\x0e","\x0f","\xf4","\xaa");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Video_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Video_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Video_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Video_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Video_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Video_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Video_obj::__boot()
{
{
            	HX_STACK_FRAME("kha.kore.Video","boot",0xd17ed192,"kha.kore.Video.boot","kha/kore/Video.hx",11,0x2ec24cd0)
HXLINE(  11)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("getCurrentPos",11,7f,a2,23), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("functionCode",65,f4,bf,28),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("\r\n\treturn scast<int>(video->position * 1000.0);\r\n\t",4d,64,db,63))))))));
            	}
}

} // end namespace kha
} // end namespace kore
