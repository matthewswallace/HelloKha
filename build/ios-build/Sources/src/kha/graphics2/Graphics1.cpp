// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_graphics1_Graphics
#include <kha/graphics1/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics1
#include <kha/graphics2/Graphics1.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFormat
#include <kha/graphics4/TextureFormat.h>
#endif
#ifndef INCLUDED_kha_graphics4_Usage
#include <kha/graphics4/Usage.h>
#endif

namespace kha{
namespace graphics2{

void Graphics1_obj::__construct(::Dynamic canvas){
            	HX_STACK_FRAME("kha.graphics2.Graphics1","new",0x61c994e7,"kha.graphics2.Graphics1.new","kha/graphics2/Graphics1.hx",16,0x861a0aab)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(canvas,"canvas")
HXLINE(  16)		this->canvas = canvas;
            	}

Dynamic Graphics1_obj::__CreateEmpty() { return new Graphics1_obj; }

hx::ObjectPtr< Graphics1_obj > Graphics1_obj::__new(::Dynamic canvas)
{
	hx::ObjectPtr< Graphics1_obj > _hx_result = new Graphics1_obj();
	_hx_result->__construct(canvas);
	return _hx_result;
}

Dynamic Graphics1_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Graphics1_obj > _hx_result = new Graphics1_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

static ::kha::graphics1::Graphics_obj _hx_kha_graphics2_Graphics1__hx_kha_graphics1_Graphics= {
	( void (hx::Object::*)())&::kha::graphics2::Graphics1_obj::begin,
	( void (hx::Object::*)())&::kha::graphics2::Graphics1_obj::end,
	( void (hx::Object::*)(Int,Int,Int))&::kha::graphics2::Graphics1_obj::setPixel,
};

void *Graphics1_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x379412cd: return &_hx_kha_graphics2_Graphics1__hx_kha_graphics1_Graphics;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Graphics1_obj::begin(){
            	HX_STACK_FRAME("kha.graphics2.Graphics1","begin",0xae2b1e70,"kha.graphics2.Graphics1.begin","kha/graphics2/Graphics1.hx",19,0x861a0aab)
            	HX_STACK_THIS(this)
HXLINE(  20)		Bool _hx_tmp = hx::IsNull( this->texture );
HXDLIN(  20)		if (_hx_tmp) {
HXLINE(  21)			Int _hx_tmp1 = ( (Int)( ::Dynamic(this->canvas->__Field(HX_("get_width",5d,12,0c,0e),hx::paccDynamic))()) );
HXDLIN(  21)			Int _hx_tmp2 = ( (Int)( ::Dynamic(this->canvas->__Field(HX_("get_height",b0,77,d3,f2),hx::paccDynamic))()) );
HXDLIN(  21)			this->texture = ::kha::Image_obj::create(_hx_tmp1,_hx_tmp2,::kha::graphics4::TextureFormat_obj::RGBA32_dyn(),::kha::graphics4::Usage_obj::ReadableUsage_dyn());
            		}
HXLINE(  23)		this->pixels = this->texture->lock(null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics1_obj,begin,(void))

void Graphics1_obj::end(){
            	HX_STACK_FRAME("kha.graphics2.Graphics1","end",0x61c2c862,"kha.graphics2.Graphics1.end","kha/graphics2/Graphics1.hx",26,0x861a0aab)
            	HX_STACK_THIS(this)
HXLINE(  27)		this->texture->unlock();
HXLINE(  28)		( ( ::kha::graphics2::Graphics)( ::Dynamic(this->canvas->__Field(HX_("get_g2",34,f1,2f,a3),hx::paccDynamic))()) )->begin(null(),null());
HXLINE(  29)		( ( ::kha::graphics2::Graphics)( ::Dynamic(this->canvas->__Field(HX_("get_g2",34,f1,2f,a3),hx::paccDynamic))()) )->drawImage(this->texture,(int)0,(int)0);
HXLINE(  30)		( ( ::kha::graphics2::Graphics)( ::Dynamic(this->canvas->__Field(HX_("get_g2",34,f1,2f,a3),hx::paccDynamic))()) )->end();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics1_obj,end,(void))

void Graphics1_obj::setPixel(Int x,Int y,Int color){
            	HX_STACK_FRAME("kha.graphics2.Graphics1","setPixel",0xf429a19d,"kha.graphics2.Graphics1.setPixel","kha/graphics2/Graphics1.hx",34,0x861a0aab)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(color,"color")
HXLINE(  34)		HX_VARI(  ::haxe::io::Bytes,_this) = this->pixels;
HXDLIN(  34)		Int _hx_tmp = this->texture->get_realWidth();
HXDLIN(  34)		HX_VARI( Int,pos) = (((y * _hx_tmp) * (int)4) + (x * (int)4));
HXDLIN(  34)		_this->b[pos] = color;
HXDLIN(  34)		_this->b[(pos + (int)1)] = ((int)color >> (int)(int)8);
HXDLIN(  34)		_this->b[(pos + (int)2)] = ((int)color >> (int)(int)16);
HXDLIN(  34)		_this->b[(pos + (int)3)] = hx::UShr(color,(int)24);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics1_obj,setPixel,(void))


Graphics1_obj::Graphics1_obj()
{
}

void Graphics1_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics1);
	HX_MARK_MEMBER_NAME(canvas,"canvas");
	HX_MARK_MEMBER_NAME(texture,"texture");
	HX_MARK_MEMBER_NAME(pixels,"pixels");
	HX_MARK_END_CLASS();
}

void Graphics1_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(canvas,"canvas");
	HX_VISIT_MEMBER_NAME(texture,"texture");
	HX_VISIT_MEMBER_NAME(pixels,"pixels");
}

hx::Val Graphics1_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { return hx::Val( canvas); }
		if (HX_FIELD_EQ(inName,"pixels") ) { return hx::Val( pixels); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"texture") ) { return hx::Val( texture); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setPixel") ) { return hx::Val( setPixel_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Graphics1_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { canvas=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pixels") ) { pixels=inValue.Cast<  ::haxe::io::Bytes >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"texture") ) { texture=inValue.Cast<  ::kha::Image >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Graphics1_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8"));
	outFields->push(HX_HCSTRING("texture","\xdb","\xc8","\xe0","\x9e"));
	outFields->push(HX_HCSTRING("pixels","\x2d","\xef","\xa9","\x8c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Graphics1_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::kha::Canvas*/ ,(int)offsetof(Graphics1_obj,canvas),HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8")},
	{hx::fsObject /*::kha::Image*/ ,(int)offsetof(Graphics1_obj,texture),HX_HCSTRING("texture","\xdb","\xc8","\xe0","\x9e")},
	{hx::fsObject /*::haxe::io::Bytes*/ ,(int)offsetof(Graphics1_obj,pixels),HX_HCSTRING("pixels","\x2d","\xef","\xa9","\x8c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Graphics1_obj_sStaticStorageInfo = 0;
#endif

static ::String Graphics1_obj_sMemberFields[] = {
	HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8"),
	HX_HCSTRING("texture","\xdb","\xc8","\xe0","\x9e"),
	HX_HCSTRING("pixels","\x2d","\xef","\xa9","\x8c"),
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"),
	HX_HCSTRING("setPixel","\x84","\x2f","\xd8","\xd0"),
	::String(null()) };

static void Graphics1_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics1_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics1_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics1_obj::__mClass,"__mClass");
};

#endif

hx::Class Graphics1_obj::__mClass;

void Graphics1_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.graphics2.Graphics1","\x75","\x95","\x3d","\xce");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Graphics1_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Graphics1_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Graphics1_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics1_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics1_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics1_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics2
