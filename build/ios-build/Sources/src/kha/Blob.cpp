// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Blob
#include <kha/Blob.h>
#endif

namespace kha{

void Blob_obj::__construct( ::haxe::io::Bytes bytes){
            	HX_STACK_FRAME("kha.Blob","new",0xd0a3ba79,"kha.Blob.new","kha/Blob.hx",14,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bytes,"bytes")
HXLINE(  14)		this->bytes = bytes;
            	}

Dynamic Blob_obj::__CreateEmpty() { return new Blob_obj; }

hx::ObjectPtr< Blob_obj > Blob_obj::__new( ::haxe::io::Bytes bytes)
{
	hx::ObjectPtr< Blob_obj > _hx_result = new Blob_obj();
	_hx_result->__construct(bytes);
	return _hx_result;
}

Dynamic Blob_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Blob_obj > _hx_result = new Blob_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

 ::kha::Blob Blob_obj::sub(Int start,Int length){
            	HX_STACK_FRAME("kha.Blob","sub",0xd0a79399,"kha.Blob.sub","kha/Blob.hx",26,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(start,"start")
            	HX_STACK_ARG(length,"length")
HXLINE(  26)		 ::haxe::io::Bytes _hx_tmp = this->bytes->sub(start,length);
HXDLIN(  26)		return  ::kha::Blob_obj::__new(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Blob_obj,sub,return )

Int Blob_obj::get_length(){
            	HX_STACK_FRAME("kha.Blob","get_length",0xa95d7fb6,"kha.Blob.get_length","kha/Blob.hx",32,0x7a6b6936)
            	HX_STACK_THIS(this)
HXLINE(  32)		return this->bytes->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Blob_obj,get_length,return )

void Blob_obj::writeU8(Int position,Int value){
            	HX_STACK_FRAME("kha.Blob","writeU8",0x77c7577b,"kha.Blob.writeU8","kha/Blob.hx",36,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	HX_STACK_ARG(value,"value")
HXLINE(  36)		this->bytes->b[position] = value;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Blob_obj,writeU8,(void))

Int Blob_obj::readS8(Int position){
            	HX_STACK_FRAME("kha.Blob","readS8",0xc41640e2,"kha.Blob.readS8","kha/Blob.hx",45,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::s8 i = *(Kore::s8*)&bytes->b->Pointer()[position];
		position += 1;
		return i;
	

HXLINE(  45)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readS8,return )

Int Blob_obj::readU8(Int position){
            	HX_STACK_FRAME("kha.Blob","readU8",0xc41642a0,"kha.Blob.readU8","kha/Blob.hx",54,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8 i = *(Kore::u8*)&bytes->b->Pointer()[position];
		position += 1;
		return i;
	

HXLINE(  54)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readU8,return )

Int Blob_obj::readS16LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readS16LE",0x4c3cb634,"kha.Blob.readS16LE","kha/Blob.hx",64,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::s16 i = (data[0] << 0) | (data[1] << 8);
		position += 2;
		return i;
	

HXLINE(  64)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readS16LE,return )

Int Blob_obj::readS16BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readS16BE",0x4c3cad7e,"kha.Blob.readS16BE","kha/Blob.hx",74,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::s16 i = (data[1] << 0) | (data[0] << 8);
		position += 2;
		return i;
	

HXLINE(  74)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readS16BE,return )

Int Blob_obj::readU16LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readU16LE",0x7309df36,"kha.Blob.readU16LE","kha/Blob.hx",84,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::u16 i = (data[0] << 0) | (data[1] << 8);
		position += 2;
		return i;
	

HXLINE(  84)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readU16LE,return )

Int Blob_obj::readU16BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readU16BE",0x7309d680,"kha.Blob.readU16BE","kha/Blob.hx",94,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::u16 i = (data[1] << 0) | (data[0] << 8);
		position += 2;
		return i;
	

HXLINE(  94)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readU16BE,return )

Int Blob_obj::readS32LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readS32LE",0x4d8c1a6e,"kha.Blob.readS32LE","kha/Blob.hx",104,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		int i = (data[0] << 0) | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);
		position += 4;
		return i;
	

HXLINE( 104)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readS32LE,return )

Int Blob_obj::readS32BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readS32BE",0x4d8c11b8,"kha.Blob.readS32BE","kha/Blob.hx",114,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		int i = (data[3] << 0) | (data[2] << 8) | (data[1] << 16) | (data[0] << 24);
		position += 4;
		return i;
	

HXLINE( 114)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readS32BE,return )

Int Blob_obj::readU32LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readU32LE",0x74594370,"kha.Blob.readU32LE","kha/Blob.hx",124,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::u32 i = (data[0] << 0) | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);
		position += 4;
		return i;
	

HXLINE( 124)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readU32LE,return )

Int Blob_obj::readU32BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readU32BE",0x74593aba,"kha.Blob.readU32BE","kha/Blob.hx",134,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		Kore::u32 i = (data[3] << 0) | (data[2] << 8) | (data[1] << 16) | (data[0] << 24);
		position += 4;
		return i;
	

HXLINE( 134)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readU32BE,return )

Float Blob_obj::readF32LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readF32LE",0xd1568fe1,"kha.Blob.readF32LE","kha/Blob.hx",144,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		int i = (data[0] << 0) | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);
		position += 4;
		return *(float*)&i;
	

HXLINE( 144)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readF32LE,return )

Float Blob_obj::readF32BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readF32BE",0xd156872b,"kha.Blob.readF32BE","kha/Blob.hx",154,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
            	
		Kore::u8* data = (Kore::u8*)&bytes->b->Pointer()[position];
		int i = (data[3] << 0) | (data[2] << 8) | (data[1] << 16) | (data[0] << 24);
		position += 4;
		return *(float*)&i;
	

HXLINE( 154)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readF32BE,return )

Float Blob_obj::readF64LE(Int position){
            	HX_STACK_FRAME("kha.Blob","readF64LE",0xd353b840,"kha.Blob.readF64LE","kha/Blob.hx",158,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
HXLINE( 158)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readF64LE,return )

Float Blob_obj::readF64BE(Int position){
            	HX_STACK_FRAME("kha.Blob","readF64BE",0xd353af8a,"kha.Blob.readF64BE","kha/Blob.hx",162,0x7a6b6936)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(position,"position")
HXLINE( 162)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,readF64BE,return )

::String Blob_obj::toString(){
            	HX_STACK_FRAME("kha.Blob","toString",0x6b1aabf3,"kha.Blob.toString","kha/Blob.hx",166,0x7a6b6936)
            	HX_STACK_THIS(this)
HXLINE( 166)		Bool _hx_tmp;
HXDLIN( 166)		Bool _hx_tmp1;
HXDLIN( 166)		if ((this->bytes->b->__get((int)0) == (int)239)) {
HXLINE( 166)			_hx_tmp1 = (this->bytes->b->__get((int)1) == (int)187);
            		}
            		else {
HXLINE( 166)			_hx_tmp1 = false;
            		}
HXDLIN( 166)		if (_hx_tmp1) {
HXLINE( 166)			_hx_tmp = (this->bytes->b->__get((int)2) == (int)191);
            		}
            		else {
HXLINE( 166)			_hx_tmp = false;
            		}
HXDLIN( 166)		if (_hx_tmp) {
HXLINE( 166)			Int _hx_tmp2 = (this->bytes->length - (int)3);
HXDLIN( 166)			return this->bytes->sub((int)3,_hx_tmp2)->toString();
            		}
            		else {
HXLINE( 167)			return this->bytes->toString();
            		}
HXLINE( 166)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Blob_obj,toString,return )

 ::haxe::io::Bytes Blob_obj::toBytes(){
            	HX_STACK_FRAME("kha.Blob","toBytes",0x56adbf89,"kha.Blob.toBytes","kha/Blob.hx",171,0x7a6b6936)
            	HX_STACK_THIS(this)
HXLINE( 171)		return this->bytes;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Blob_obj,toBytes,return )

void Blob_obj::unload(){
            	HX_STACK_FRAME("kha.Blob","unload",0x2d114c86,"kha.Blob.unload","kha/Blob.hx",175,0x7a6b6936)
            	HX_STACK_THIS(this)
HXLINE( 175)		this->bytes = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Blob_obj,unload,(void))

 ::kha::Blob Blob_obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACK_FRAME("kha.Blob","fromBytes",0x95d4f57a,"kha.Blob.fromBytes","kha/Blob.hx",18,0x7a6b6936)
            	HX_STACK_ARG(bytes,"bytes")
HXLINE(  18)		return  ::kha::Blob_obj::__new(bytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,fromBytes,return )

 ::kha::Blob Blob_obj::alloc(Int size){
            	HX_STACK_FRAME("kha.Blob","alloc",0x954506ce,"kha.Blob.alloc","kha/Blob.hx",22,0x7a6b6936)
            	HX_STACK_ARG(size,"size")
HXLINE(  22)		 ::haxe::io::Bytes _hx_tmp = ::haxe::io::Bytes_obj::alloc(size);
HXDLIN(  22)		return  ::kha::Blob_obj::__new(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Blob_obj,alloc,return )


Blob_obj::Blob_obj()
{
}

void Blob_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Blob);
	HX_MARK_MEMBER_NAME(bytes,"bytes");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void Blob_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bytes,"bytes");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val Blob_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"bytes") ) { return hx::Val( bytes); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( inCallProp == hx::paccAlways ? get_length() : length); }
		if (HX_FIELD_EQ(inName,"readS8") ) { return hx::Val( readS8_dyn()); }
		if (HX_FIELD_EQ(inName,"readU8") ) { return hx::Val( readU8_dyn()); }
		if (HX_FIELD_EQ(inName,"unload") ) { return hx::Val( unload_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"writeU8") ) { return hx::Val( writeU8_dyn()); }
		if (HX_FIELD_EQ(inName,"toBytes") ) { return hx::Val( toBytes_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"readS16LE") ) { return hx::Val( readS16LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readS16BE") ) { return hx::Val( readS16BE_dyn()); }
		if (HX_FIELD_EQ(inName,"readU16LE") ) { return hx::Val( readU16LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readU16BE") ) { return hx::Val( readU16BE_dyn()); }
		if (HX_FIELD_EQ(inName,"readS32LE") ) { return hx::Val( readS32LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readS32BE") ) { return hx::Val( readS32BE_dyn()); }
		if (HX_FIELD_EQ(inName,"readU32LE") ) { return hx::Val( readU32LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readU32BE") ) { return hx::Val( readU32BE_dyn()); }
		if (HX_FIELD_EQ(inName,"readF32LE") ) { return hx::Val( readF32LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readF32BE") ) { return hx::Val( readF32BE_dyn()); }
		if (HX_FIELD_EQ(inName,"readF64LE") ) { return hx::Val( readF64LE_dyn()); }
		if (HX_FIELD_EQ(inName,"readF64BE") ) { return hx::Val( readF64BE_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Blob_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"alloc") ) { outValue = alloc_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
	}
	return false;
}

hx::Val Blob_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"bytes") ) { bytes=inValue.Cast<  ::haxe::io::Bytes >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Blob_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bytes","\x6b","\x08","\x98","\xbd"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Blob_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::io::Bytes*/ ,(int)offsetof(Blob_obj,bytes),HX_HCSTRING("bytes","\x6b","\x08","\x98","\xbd")},
	{hx::fsInt,(int)offsetof(Blob_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Blob_obj_sStaticStorageInfo = 0;
#endif

static ::String Blob_obj_sMemberFields[] = {
	HX_HCSTRING("bytes","\x6b","\x08","\x98","\xbd"),
	HX_HCSTRING("sub","\x80","\xa9","\x57","\x00"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("writeU8","\xe2","\xec","\x35","\xab"),
	HX_HCSTRING("readS8","\x5b","\x95","\x91","\xfc"),
	HX_HCSTRING("readU8","\x19","\x97","\x91","\xfc"),
	HX_HCSTRING("readS16LE","\x5b","\xb3","\x88","\x28"),
	HX_HCSTRING("readS16BE","\xa5","\xaa","\x88","\x28"),
	HX_HCSTRING("readU16LE","\x5d","\xdc","\x55","\x4f"),
	HX_HCSTRING("readU16BE","\xa7","\xd3","\x55","\x4f"),
	HX_HCSTRING("readS32LE","\x95","\x17","\xd8","\x29"),
	HX_HCSTRING("readS32BE","\xdf","\x0e","\xd8","\x29"),
	HX_HCSTRING("readU32LE","\x97","\x40","\xa5","\x50"),
	HX_HCSTRING("readU32BE","\xe1","\x37","\xa5","\x50"),
	HX_HCSTRING("readF32LE","\x08","\x8d","\xa2","\xad"),
	HX_HCSTRING("readF32BE","\x52","\x84","\xa2","\xad"),
	HX_HCSTRING("readF64LE","\x67","\xb5","\x9f","\xaf"),
	HX_HCSTRING("readF64BE","\xb1","\xac","\x9f","\xaf"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("toBytes","\xf0","\x54","\x1c","\x8a"),
	HX_HCSTRING("unload","\xff","\xa0","\x8c","\x65"),
	::String(null()) };

static void Blob_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Blob_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Blob_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Blob_obj::__mClass,"__mClass");
};

#endif

hx::Class Blob_obj::__mClass;

static ::String Blob_obj_sStaticFields[] = {
	HX_HCSTRING("fromBytes","\xa1","\xf2","\x20","\x72"),
	HX_HCSTRING("alloc","\x75","\xa4","\x93","\x21"),
	::String(null())
};

void Blob_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.Blob","\x07","\x0a","\xcd","\x3d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Blob_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Blob_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Blob_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Blob_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Blob_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Blob_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Blob_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Blob_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
